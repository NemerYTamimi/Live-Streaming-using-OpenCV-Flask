{"version":3,"sources":["Card.js","CardList.js","SearchBox.js","NewCam.js","App.js","reportWebVitals.js","index.js"],"names":["fetch","Promise","resolve","setTimeout","Card","props","state","result","toggleButtonState","snap","then","setState","name","src","_id","CId","location","containerId","imageSource","imageId","elementToBeRemoved","document","getElementById","parentNode","removeChild","e","console","log","img","createElement","setAttribute","appendChild","a","x","this","id","className","href","download","target","onClick","show","hide","delete","Component","CardList","robots","map","user","i","SearchBox","type","placeholder","onChange","searchChange","NewCam","Button","variant","disableElevation","Particlesoptions","fpsLimit","interactivity","detectsOn","events","enable","mode","onHover","resize","modes","bubble","distance","duration","opacity","size","push","quantity","repulse","particles","color","value","links","width","collisions","move","direction","outMode","random","speed","straight","number","density","value_area","shape","detectRetina","App","onSearchChange","event","searchfield","response","json","users","filteredRobots","filter","toLowerCase","includes","length","options","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.51ea16c1.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nfunction fetch() {\r\n    return new Promise(resolve => setTimeout(() => resolve(42), 1000));\r\n}\r\n\r\nfunction fetchAPI(param) {\r\n    // param is a highlighted word from the user before it clicked the button\r\n    return fetch(param);\r\n}\r\n\r\nclass Card extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.snap = props.snap;\r\n        this.name = props.name;\r\n        this.src = props.src;\r\n        this._id = props._id;\r\n        this.CId = props._id+\"0\";\r\n        this.location = props.location;\r\n    }\r\n    show(containerId,imageSource, imageId) {\r\n        try{\r\n            var elementToBeRemoved = document.getElementById(imageId);\r\n            elementToBeRemoved.parentNode.removeChild(elementToBeRemoved);\r\n            }\r\n            catch(e){\r\n                console.log(e);\r\n            }\r\n        try{\r\n        var img = document.createElement(\"IMG\");\r\n        img.src = imageSource;\r\n        img.setAttribute('id', imageId);\r\n        img.setAttribute('width', \"400px\");\r\n        img.setAttribute('height', \"400px\");\r\n        document.getElementById(containerId).appendChild(img);\r\n        console.log(img);\r\n        return img;\r\n        }\r\n        catch(e){\r\n            console.log(e);\r\n        }\r\n    }\r\n    state = { result: null };\r\n\r\n    toggleButtonState = () => {\r\n        fetchAPI(this.snap).then(result => {\r\n            this.setState({ result });\r\n        });\r\n    };\r\n\r\n    \r\n    hide(imageId) {\r\n        try{\r\n        var elementToBeRemoved = document.getElementById(imageId);\r\n        elementToBeRemoved.parentNode.removeChild(elementToBeRemoved);\r\n        }\r\n        catch(e){\r\n            console.log(e);\r\n        }\r\n    }\r\n    async  delete() {\r\n        let x=\"https://mongodb-tutorial-app.herokuapp.com/cameras/cam/\"+this._id;\r\n        console.log(x);\r\n        await fetch(x, { method: 'DELETE' }).then(console.log(\"done\"));\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div id={this.CId} className='bg-dark-gray dib-ns br3 pa3 ma2  bw2 shadow-5'>\r\n                {/* <img id={this._id} src={this.src} width=\"400px\" height=\"400px\"></img> */}\r\n                <div >\r\n                    <h1>{this.name}</h1>\r\n                    <h2 className='white'>{this.location}</h2>\r\n                    <a\r\n                        href={this.snap}\r\n                        download\r\n                        target=\"_blank\"\r\n                    >Take a Snap</a>\r\n                    <div>\r\n                    <button onClick={() => this.show(this.CId,this.src,this._id)}>Show</button> \r\n                    <button onClick={() => this.hide(this._id)}>Hide</button> \r\n                    <button onClick={() => this.delete(this._id)}>delete</button> \r\n                    </div>\r\n                </div>\r\n                </div>\r\n        );\r\n    }\r\n}\r\nexport default Card;\r\n","import Card from './Card';\r\n\r\nfunction CardList({ robots }) {\r\n    return (<div>\r\n            {\r\n                robots.map((user, i) => {\r\n                    return <Card\r\n                        key={i}\r\n                        _id={robots[i]._id}\r\n                        src={robots[i].src}\r\n                        location={robots[i].location}\r\n                        name={robots[i].name}\r\n                        snap={robots[i].snap}\r\n                    />\r\n                })\r\n\r\n            }\r\n    </div>\r\n\r\n    )\r\n}\r\nexport default CardList;","\r\nconst SearchBox = (props) => {\r\n\r\n    return (\r\n        <div className='pa2'>\r\n            <input\r\n                className='pa3  ba '\r\n                type='search'\r\n                placeholder='Search '\r\n                onChange={props.searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function NewCam() {\r\n  return (\r\n      <div>\r\n    <Button href=\"/new\" target=\"_blank\" variant=\"contained\"  disableElevation>\r\nAdd New IP Cam\r\n    </Button>\r\n\r\n    </div>\r\n  );\r\n}","import { Component } from 'react'\r\nimport Particles from \"react-tsparticles\";\r\n\r\nimport CardList from './CardList'\r\nimport SearchBox from './SearchBox'\r\nimport NewCam from './NewCam'\r\n\r\nimport './App.css'\r\n\r\nconst Particlesoptions = { fpsLimit: 50, interactivity: { detectsOn: \"canvas\", events: { onClick: { enable: true, mode: \"push\", }, onHover: { enable: true, mode: \"repulse\", }, resize: true, }, modes: { bubble: { distance: 400, duration: 2, opacity: 0.8, size: 40, }, push: { quantity: 4, }, repulse: { distance: 200, duration: 0.4, }, }, }, particles: { color: { value: \"#ffffff\", }, links: { color: \"#ffffff\", distance: 150, enable: true, opacity: 0.5, width: 1, }, collisions: { enable: true, }, move: { direction: \"none\", enable: true, outMode: \"bounce\", random: false, speed: 2, straight: false, }, number: { density: { enable: true, value_area: 800, }, value: 70, }, opacity: { value: 0.5, }, shape: { type: \"circle\", }, size: { random: true, value: 5, }, }, detectRetina: true, }\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        };\r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        fetch('https://mongodb-tutorial-app.herokuapp.com/cameras/cam/')\r\n            .then(response => response.json())\r\n            .then(users => this.setState({ robots: users }))\r\n    }\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value })\r\n    }\r\n\r\n    render() {\r\n        const filteredRobots = this.state.robots.filter(robots => {\r\n            return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\r\n        })\r\n        if (this.state.robots.length === 0) {\r\n            return <h1>Loading</h1>\r\n        }\r\n        return (\r\n            <div className='tc'>\r\n                <Particles className=\"particles\" options={Particlesoptions} />\r\n                <h1 className='f1'>IPCam Viewer</h1>\r\n                <SearchBox searchChange={this.onSearchChange} />\r\n                <NewCam/>\r\n                <scroll>\r\n                    <CardList robots={filteredRobots} />\r\n                </scroll>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'\nReactDOM.render(<App/>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}