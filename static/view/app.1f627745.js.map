{"version":3,"sources":["../node_modules/regenerator-runtime/runtime.js","../node_modules/@babel/runtime/regenerator/index.js","../node_modules/@babel/runtime/helpers/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","js/service/FetchService.js","../node_modules/tsparticles/dist/pjs.js","../node_modules/tsparticles/dist/ShapeDrawers/SquareDrawer.js","../node_modules/tsparticles/dist/Enums/Directions/OutModeDirection.js","../node_modules/tsparticles/dist/Enums/Directions/MoveDirection.js","../node_modules/tsparticles/dist/Enums/Directions/RotateDirection.js","../node_modules/tsparticles/dist/Enums/Directions/index.js","../node_modules/tsparticles/dist/Core/Particle/Vector.js","../node_modules/tsparticles/dist/Utils/NumberUtils.js","../node_modules/tsparticles/dist/Utils/Utils.js","../node_modules/tsparticles/dist/Utils/Constants.js","../node_modules/tsparticles/dist/Utils/ColorUtils.js","../node_modules/tsparticles/dist/Utils/CanvasUtils.js","../node_modules/tsparticles/dist/Utils/Range.js","../node_modules/tsparticles/dist/Utils/Circle.js","../node_modules/tsparticles/dist/Utils/Rectangle.js","../node_modules/tsparticles/dist/Utils/CircleWarp.js","../node_modules/tsparticles/dist/Enums/Modes/ClickMode.js","../node_modules/tsparticles/dist/Enums/Modes/DivMode.js","../node_modules/tsparticles/dist/Enums/Modes/HoverMode.js","../node_modules/tsparticles/dist/Enums/Modes/CollisionMode.js","../node_modules/tsparticles/dist/Enums/Modes/OutMode.js","../node_modules/tsparticles/dist/Enums/Modes/SizeMode.js","../node_modules/tsparticles/dist/Enums/Modes/ThemeMode.js","../node_modules/tsparticles/dist/Enums/Modes/index.js","../node_modules/tsparticles/dist/Enums/AnimationStatus.js","../node_modules/tsparticles/dist/Enums/Types/DestroyType.js","../node_modules/tsparticles/dist/Enums/Types/ProcessBubbleType.js","../node_modules/tsparticles/dist/Enums/Types/ShapeType.js","../node_modules/tsparticles/dist/Enums/Types/StartValueType.js","../node_modules/tsparticles/dist/Enums/Types/DivType.js","../node_modules/tsparticles/dist/Enums/Types/index.js","../node_modules/tsparticles/dist/Enums/InteractivityDetect.js","../node_modules/tsparticles/dist/Enums/index.js","../node_modules/tsparticles/dist/Utils/EventListeners.js","../node_modules/tsparticles/dist/Utils/Plugins.js","../node_modules/tsparticles/dist/Utils/Point.js","../node_modules/tsparticles/dist/Utils/QuadTree.js","../node_modules/tsparticles/dist/Utils/index.js","../node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","../node_modules/tsparticles/dist/ShapeDrawers/ImageDrawer.js","../node_modules/tsparticles/dist/ShapeDrawers/LineDrawer.js","../node_modules/tsparticles/dist/ShapeDrawers/CircleDrawer.js","../node_modules/tsparticles/dist/ShapeDrawers/PolygonDrawerBase.js","../node_modules/tsparticles/dist/ShapeDrawers/TriangleDrawer.js","../node_modules/tsparticles/dist/ShapeDrawers/StarDrawer.js","../node_modules/tsparticles/dist/ShapeDrawers/PolygonDrawer.js","../node_modules/tsparticles/dist/Core/Canvas.js","../node_modules/tsparticles/dist/Core/Particle/Updater.js","../node_modules/tsparticles/dist/Options/Classes/OptionsColor.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Links/LinksShadow.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Links/LinksTriangle.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Links/Links.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Move/Attract.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Move/Trail.js","../node_modules/tsparticles/dist/Options/Classes/Random.js","../node_modules/tsparticles/dist/Options/Classes/ValueWithRandom.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Move/Path/PathDelay.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Move/Path/Path.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Move/MoveAngle.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Move/MoveGravity.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Move/OutModes.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Move/Move.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Number/Density.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Number/ParticlesNumber.js","../node_modules/tsparticles/dist/Options/Classes/AnimationOptions.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Opacity/OpacityAnimation.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Opacity/Opacity.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Shape/Shape.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Size/SizeAnimation.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Size/Size.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Rotate/RotateAnimation.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Rotate/Rotate.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Shadow.js","../node_modules/tsparticles/dist/Options/Classes/ColorAnimation.js","../node_modules/tsparticles/dist/Options/Classes/Particles/HslAnimation.js","../node_modules/tsparticles/dist/Options/Classes/Particles/AnimatableColor.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Stroke.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Bounce/BounceFactor.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Bounce/Bounce.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Collisions/CollisionsOverlap.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Collisions/Collisions.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Twinkle/TwinkleValues.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Twinkle/Twinkle.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Life/LifeDelay.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Life/LifeDuration.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Life/Life.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Particles.js","../node_modules/tsparticles/dist/Core/Particle/Infecter.js","../node_modules/tsparticles/dist/Core/Particle/Mover.js","../node_modules/tsparticles/dist/Core/Particle.js","../node_modules/tsparticles/dist/Interactions/External/Grabber.js","../node_modules/tsparticles/dist/Interactions/External/Repulser.js","../node_modules/tsparticles/dist/Interactions/External/Bubbler.js","../node_modules/tsparticles/dist/Interactions/External/Connector.js","../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","../node_modules/tsparticles/dist/Interactions/Particles/Attractor.js","../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","../node_modules/tsparticles/dist/Interactions/Particles/Infecter.js","../node_modules/tsparticles/dist/Interactions/External/TrailMaker.js","../node_modules/tsparticles/dist/Interactions/External/Attractor.js","../node_modules/tsparticles/dist/Interactions/Particles/Lighter.js","../node_modules/tsparticles/dist/Interactions/External/Lighter.js","../node_modules/tsparticles/dist/Interactions/External/Bouncer.js","../node_modules/tsparticles/dist/Core/Particle/InteractionManager.js","../node_modules/tsparticles/dist/Core/Particles.js","../node_modules/tsparticles/dist/Core/Retina.js","../node_modules/tsparticles/dist/Core/FrameManager.js","../node_modules/tsparticles/dist/Options/Classes/Interactivity/Events/ClickEvent.js","../node_modules/tsparticles/dist/Options/Classes/Interactivity/Events/DivEvent.js","../node_modules/tsparticles/dist/Options/Classes/Interactivity/Events/Parallax.js","../node_modules/tsparticles/dist/Options/Classes/Interactivity/Events/HoverEvent.js","../node_modules/tsparticles/dist/Options/Classes/Interactivity/Events/Events.js","../node_modules/tsparticles/dist/Options/Classes/Interactivity/Modes/BubbleBase.js","../node_modules/tsparticles/dist/Options/Classes/Interactivity/Modes/BubbleDiv.js","../node_modules/tsparticles/dist/Options/Classes/Interactivity/Modes/Bubble.js","../node_modules/tsparticles/dist/Options/Classes/Interactivity/Modes/ConnectLinks.js","../node_modules/tsparticles/dist/Options/Classes/Interactivity/Modes/Connect.js","../node_modules/tsparticles/dist/Options/Classes/Interactivity/Modes/GrabLinks.js","../node_modules/tsparticles/dist/Options/Classes/Interactivity/Modes/Grab.js","../node_modules/tsparticles/dist/Options/Classes/Interactivity/Modes/Remove.js","../node_modules/tsparticles/dist/Options/Classes/Interactivity/Modes/Push.js","../node_modules/tsparticles/dist/Options/Classes/Interactivity/Modes/RepulseBase.js","../node_modules/tsparticles/dist/Options/Classes/Interactivity/Modes/RepulseDiv.js","../node_modules/tsparticles/dist/Options/Classes/Interactivity/Modes/Repulse.js","../node_modules/tsparticles/dist/Options/Classes/Interactivity/Modes/Slow.js","../node_modules/tsparticles/dist/Options/Classes/Interactivity/Modes/Trail.js","../node_modules/tsparticles/dist/Options/Classes/Interactivity/Modes/Attract.js","../node_modules/tsparticles/dist/Options/Classes/Interactivity/Modes/LightGradient.js","../node_modules/tsparticles/dist/Options/Classes/Interactivity/Modes/LightArea.js","../node_modules/tsparticles/dist/Options/Classes/Interactivity/Modes/LightShadow.js","../node_modules/tsparticles/dist/Options/Classes/Interactivity/Modes/Light.js","../node_modules/tsparticles/dist/Options/Classes/Interactivity/Modes/Bounce.js","../node_modules/tsparticles/dist/Options/Classes/Interactivity/Modes/Modes.js","../node_modules/tsparticles/dist/Options/Classes/Interactivity/Interactivity.js","../node_modules/tsparticles/dist/Options/Classes/BackgroundMask/BackgroundMaskCover.js","../node_modules/tsparticles/dist/Options/Classes/BackgroundMask/BackgroundMask.js","../node_modules/tsparticles/dist/Options/Classes/Background/Background.js","../node_modules/tsparticles/dist/Options/Classes/Infection/InfectionStage.js","../node_modules/tsparticles/dist/Options/Classes/Infection/Infection.js","../node_modules/tsparticles/dist/Options/Classes/Theme/ThemeDefault.js","../node_modules/tsparticles/dist/Options/Classes/Theme/Theme.js","../node_modules/tsparticles/dist/Options/Classes/FullScreen/FullScreen.js","../node_modules/tsparticles/dist/Options/Classes/Motion/MotionReduce.js","../node_modules/tsparticles/dist/Options/Classes/Motion/Motion.js","../node_modules/tsparticles/dist/Options/Classes/ManualParticle.js","../node_modules/tsparticles/dist/Options/Classes/Responsive.js","../node_modules/tsparticles/dist/Options/Classes/Options.js","../node_modules/tsparticles/dist/Core/Container.js","../node_modules/tsparticles/dist/Core/Loader.js","../node_modules/tsparticles/dist/main.slim.js","../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","../node_modules/tsparticles/dist/Plugins/Absorbers/Options/Classes/AbsorberSize.js","../node_modules/tsparticles/dist/Plugins/Absorbers/Options/Classes/Absorber.js","../node_modules/tsparticles/dist/Plugins/Absorbers/Enums/AbsorberClickMode.js","../node_modules/tsparticles/dist/Plugins/Absorbers/Enums/index.js","../node_modules/tsparticles/dist/Plugins/Absorbers/Absorbers.js","../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorbersPlugin.js","../node_modules/tsparticles/dist/Plugins/Emitters/Options/Classes/EmitterSize.js","../node_modules/tsparticles/dist/Plugins/Emitters/EmitterInstance.js","../node_modules/tsparticles/dist/Plugins/Emitters/Options/Classes/EmitterRate.js","../node_modules/tsparticles/dist/Plugins/Emitters/Options/Classes/EmitterLife.js","../node_modules/tsparticles/dist/Plugins/Emitters/Options/Classes/Emitter.js","../node_modules/tsparticles/dist/Plugins/Emitters/Enums/EmitterClickMode.js","../node_modules/tsparticles/dist/Plugins/Emitters/Enums/index.js","../node_modules/tsparticles/dist/Plugins/Emitters/Emitters.js","../node_modules/tsparticles/dist/Plugins/Emitters/EmittersPlugin.js","../node_modules/tsparticles/dist/Plugins/PolygonMask/Enums/InlineArrangement.js","../node_modules/tsparticles/dist/Plugins/PolygonMask/Enums/MoveType.js","../node_modules/tsparticles/dist/Plugins/PolygonMask/Enums/Type.js","../node_modules/tsparticles/dist/Plugins/PolygonMask/Enums/index.js","../node_modules/tsparticles/dist/Plugins/PolygonMask/Options/Classes/DrawStroke.js","../node_modules/tsparticles/dist/Plugins/PolygonMask/Options/Classes/Draw.js","../node_modules/tsparticles/dist/Plugins/PolygonMask/Options/Classes/Move.js","../node_modules/tsparticles/dist/Plugins/PolygonMask/Options/Classes/Inline.js","../node_modules/tsparticles/dist/Plugins/PolygonMask/Options/Classes/LocalSvg.js","../node_modules/tsparticles/dist/Plugins/PolygonMask/Options/Classes/PolygonMask.js","../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskPlugin.js","../node_modules/tsparticles/dist/main.js","../node_modules/tsparticles/dist/Types/RangeValue.js","../node_modules/tsparticles/dist/Types/RecursivePartial.js","../node_modules/tsparticles/dist/Types/ShapeData.js","../node_modules/tsparticles/dist/Types/ShapeDrawerFunctions.js","../node_modules/tsparticles/dist/Types/SingleOrMultiple.js","../node_modules/tsparticles/dist/Types/index.js","../node_modules/tsparticles/dist/index.js","js/app.js"],"names":["FetchService","fetchLink","headers","query","Error","fetch","method","rawResponse","json","content","console","error","body","JSON","stringify","Particlesoptions","fpsLimit","interactivity","detectsOn","events","onClick","enable","mode","onHover","resize","modes","bubble","distance","duration","opacity","size","push","quantity","repulse","particles","color","value","links","width","collisions","move","direction","outMode","random","speed","straight","number","density","value_area","shape","type","detectRetina","fetchService","submitForm","e","form","preventDefault","username","document","getElementById","password","ip","port","channel","src","log","window","location","buildHeaders","authorization","buildJsonFormData","jsonFormData","FormData","pair","Form1","querySelector","addEventListener"],"mappings":"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","file":"app.1f627745.js","sourceRoot":"..\\src","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","export default class FetchService {\n    constructor() {\n\n    }\n\n    async performGetHttpRequest(fetchLink, headers, query=null) {\n        if(!fetchLink || !headers) {\n            throw new Error(\"One or more GET request parameters was not passed.\");\n        }\n        try {\n            const rawResponse = await fetch(fetchLink, {\n                method: \"GET\",\n                headers: headers,\n                query: (query != null) ? query : \"\"\n            });\n            const content = await rawResponse.json();\n            return content;\n        }\n        catch(err) {\n            console.error(`Error at fetch GET: ${err}`);\n            throw err;\n        }\n    }\n\n    async performPostHttpRequest(fetchLink, headers, body) {\n        if(!fetchLink || !headers || !body) {\n            throw new Error(\"One or more POST request parameters was not passed.\");\n        }\n        try {\n            const rawResponse = await fetch(fetchLink, {\n                method: \"POST\",\n                headers: headers,\n                body: JSON.stringify(body)\n            });\n            const content = await rawResponse.json();\n            return content;\n        }\n        catch(err) {\n            console.error(`Error at fetch POST: ${err}`);\n            throw err;\n        }\n    }\n\n    async performPutHttpRequest(fetchLink, headers, body) {\n        if(!fetchLink || !headers || !body) {\n            throw new Error(\"One or more POST request parameters was not passed.\");\n        }\n        try {\n            const rawResponse = await fetch(fetchLink, {\n                method: \"PUT\",\n                headers: headers,\n                body: JSON.stringify(body)\n            });\n            const content = await rawResponse.json();\n            return content;\n        }\n        catch(err) {\n            console.error(`Error at fetch PUT: ${err}`);\n            throw err;\n        }\n    }\n}","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.initPjs = void 0;\nconst initPjs = (main) => {\n    const particlesJS = (tagId, options) => {\n        return main.load(tagId, options);\n    };\n    particlesJS.load = (tagId, pathConfigJson, callback) => {\n        main.loadJSON(tagId, pathConfigJson).then((container) => {\n            if (container) {\n                callback(container);\n            }\n        });\n    };\n    particlesJS.setOnClickHandler = (callback) => {\n        main.setOnClickHandler(callback);\n    };\n    const pJSDom = main.dom();\n    return { particlesJS, pJSDom };\n};\nexports.initPjs = initPjs;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SquareDrawer = void 0;\nclass SquareDrawer {\n    getSidesCount() {\n        return 4;\n    }\n    draw(context, particle, radius) {\n        context.rect(-radius, -radius, radius * 2, radius * 2);\n    }\n}\nexports.SquareDrawer = SquareDrawer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OutModeDirection = void 0;\nvar OutModeDirection;\n(function (OutModeDirection) {\n    OutModeDirection[\"bottom\"] = \"bottom\";\n    OutModeDirection[\"left\"] = \"left\";\n    OutModeDirection[\"right\"] = \"right\";\n    OutModeDirection[\"top\"] = \"top\";\n})(OutModeDirection = exports.OutModeDirection || (exports.OutModeDirection = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MoveDirection = void 0;\nvar MoveDirection;\n(function (MoveDirection) {\n    MoveDirection[\"bottom\"] = \"bottom\";\n    MoveDirection[\"bottomLeft\"] = \"bottom-left\";\n    MoveDirection[\"bottomRight\"] = \"bottom-right\";\n    MoveDirection[\"left\"] = \"left\";\n    MoveDirection[\"none\"] = \"none\";\n    MoveDirection[\"right\"] = \"right\";\n    MoveDirection[\"top\"] = \"top\";\n    MoveDirection[\"topLeft\"] = \"top-left\";\n    MoveDirection[\"topRight\"] = \"top-right\";\n})(MoveDirection = exports.MoveDirection || (exports.MoveDirection = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RotateDirection = void 0;\nvar RotateDirection;\n(function (RotateDirection) {\n    RotateDirection[\"clockwise\"] = \"clockwise\";\n    RotateDirection[\"counterClockwise\"] = \"counter-clockwise\";\n    RotateDirection[\"random\"] = \"random\";\n})(RotateDirection = exports.RotateDirection || (exports.RotateDirection = {}));\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./MoveDirection\"), exports);\n__exportStar(require(\"./RotateDirection\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Vector = void 0;\nclass Vector {\n    constructor(x, y) {\n        let defX, defY;\n        if (y === undefined) {\n            if (typeof x === \"number\") {\n                throw new Error(\"tsParticles - Vector not initialized correctly\");\n            }\n            const coords = x;\n            [defX, defY] = [coords.x, coords.y];\n        }\n        else {\n            [defX, defY] = [x, y];\n        }\n        this.x = defX;\n        this.y = defY;\n    }\n    static clone(source) {\n        return Vector.create(source.x, source.y);\n    }\n    static create(x, y) {\n        return new Vector(x, y);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this.updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(Math.pow(this.x, 2) + Math.pow(this.y, 2));\n    }\n    set length(length) {\n        this.updateFromAngle(this.angle, length);\n    }\n    add(v) {\n        return Vector.create(this.x + v.x, this.y + v.y);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n    }\n    sub(v) {\n        return Vector.create(this.x - v.x, this.y - v.y);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n    }\n    mult(n) {\n        return Vector.create(this.x * n, this.y * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n    }\n    div(n) {\n        return Vector.create(this.x / n, this.y / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    getLengthSq() {\n        return Math.pow(this.x, 2) + Math.pow(this.y, 2);\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    manhattanDistanceTo(v) {\n        return Math.abs(v.x - this.x) + Math.abs(v.y - this.y);\n    }\n    copy() {\n        return Vector.clone(this);\n    }\n    setTo(velocity) {\n        this.x = velocity.x;\n        this.y = velocity.y;\n    }\n    rotate(angle) {\n        return Vector.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle));\n    }\n    updateFromAngle(angle, length) {\n        this.x = Math.cos(angle) * length;\n        this.y = Math.sin(angle) * length;\n    }\n}\nexports.Vector = Vector;\nVector.origin = Vector.create(0, 0);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NumberUtils = void 0;\nconst Directions_1 = require(\"../Enums/Directions\");\nconst Vector_1 = require(\"../Core/Particle/Vector\");\nclass NumberUtils {\n    static clamp(num, min, max) {\n        return Math.min(Math.max(num, min), max);\n    }\n    static mix(comp1, comp2, weight1, weight2) {\n        return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n    }\n    static randomInRange(r) {\n        const max = NumberUtils.getRangeMax(r);\n        let min = NumberUtils.getRangeMin(r);\n        if (max === min) {\n            min = 0;\n        }\n        return Math.random() * (max - min) + min;\n    }\n    static getRangeValue(value) {\n        return typeof value === \"number\" ? value : NumberUtils.randomInRange(value);\n    }\n    static getRangeMin(value) {\n        return typeof value === \"number\" ? value : value.min;\n    }\n    static getRangeMax(value) {\n        return typeof value === \"number\" ? value : value.max;\n    }\n    static setRangeValue(source, value) {\n        if (source === value || (value === undefined && typeof source === \"number\")) {\n            return source;\n        }\n        const min = NumberUtils.getRangeMin(source), max = NumberUtils.getRangeMax(source);\n        return value !== undefined\n            ? {\n                min: Math.min(min, value),\n                max: Math.max(max, value),\n            }\n            : NumberUtils.setRangeValue(min, max);\n    }\n    static getValue(options) {\n        const random = options.random;\n        const { enable, minimumValue } = typeof random === \"boolean\" ? { enable: random, minimumValue: 0 } : random;\n        return enable\n            ? NumberUtils.getRangeValue(NumberUtils.setRangeValue(options.value, minimumValue))\n            : NumberUtils.getRangeValue(options.value);\n    }\n    static getDistances(pointA, pointB) {\n        const dx = pointA.x - pointB.x;\n        const dy = pointA.y - pointB.y;\n        return { dx: dx, dy: dy, distance: Math.sqrt(dx * dx + dy * dy) };\n    }\n    static getDistance(pointA, pointB) {\n        return NumberUtils.getDistances(pointA, pointB).distance;\n    }\n    static getParticleBaseVelocity(direction) {\n        const baseVelocity = Vector_1.Vector.origin;\n        baseVelocity.length = 1;\n        switch (direction) {\n            case Directions_1.MoveDirection.top:\n                baseVelocity.angle = -Math.PI / 2;\n                break;\n            case Directions_1.MoveDirection.topRight:\n                baseVelocity.angle = -Math.PI / 4;\n                break;\n            case Directions_1.MoveDirection.right:\n                baseVelocity.angle = 0;\n                break;\n            case Directions_1.MoveDirection.bottomRight:\n                baseVelocity.angle = Math.PI / 4;\n                break;\n            case Directions_1.MoveDirection.bottom:\n                baseVelocity.angle = Math.PI / 2;\n                break;\n            case Directions_1.MoveDirection.bottomLeft:\n                baseVelocity.angle = (3 * Math.PI) / 4;\n                break;\n            case Directions_1.MoveDirection.left:\n                baseVelocity.angle = Math.PI;\n                break;\n            case Directions_1.MoveDirection.topLeft:\n                baseVelocity.angle = (-3 * Math.PI) / 4;\n                break;\n            case Directions_1.MoveDirection.none:\n            default:\n                baseVelocity.angle = Math.random() * Math.PI * 2;\n                break;\n        }\n        return baseVelocity;\n    }\n    static rotateVelocity(velocity, angle) {\n        return {\n            horizontal: velocity.horizontal * Math.cos(angle) - velocity.vertical * Math.sin(angle),\n            vertical: velocity.horizontal * Math.sin(angle) + velocity.vertical * Math.cos(angle),\n        };\n    }\n    static collisionVelocity(v1, v2, m1, m2) {\n        return Vector_1.Vector.create((v1.x * (m1 - m2)) / (m1 + m2) + (v2.x * 2 * m2) / (m1 + m2), v1.y);\n    }\n}\nexports.NumberUtils = NumberUtils;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Utils = void 0;\nconst OutModeDirection_1 = require(\"../Enums/Directions/OutModeDirection\");\nconst NumberUtils_1 = require(\"./NumberUtils\");\nfunction rectSideBounce(pSide, pOtherSide, rectSide, rectOtherSide, velocity, factor) {\n    const res = { bounced: false };\n    if (pOtherSide.min >= rectOtherSide.min &&\n        pOtherSide.min <= rectOtherSide.max &&\n        pOtherSide.max >= rectOtherSide.min &&\n        pOtherSide.max <= rectOtherSide.max) {\n        if ((pSide.max >= rectSide.min && pSide.max <= (rectSide.max + rectSide.min) / 2 && velocity > 0) ||\n            (pSide.min <= rectSide.max && pSide.min > (rectSide.max + rectSide.min) / 2 && velocity < 0)) {\n            res.velocity = velocity * -factor;\n            res.bounced = true;\n        }\n    }\n    return res;\n}\nfunction checkSelector(element, selectors) {\n    if (selectors instanceof Array) {\n        for (const selector of selectors) {\n            if (element.matches(selector)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    else {\n        return element.matches(selectors);\n    }\n}\nclass Utils {\n    static isSsr() {\n        return typeof window === \"undefined\" || !window;\n    }\n    static get animate() {\n        return Utils.isSsr()\n            ? (callback) => setTimeout(callback)\n            : (callback) => (window.requestAnimationFrame ||\n                window.webkitRequestAnimationFrame ||\n                window.mozRequestAnimationFrame ||\n                window.oRequestAnimationFrame ||\n                window.msRequestAnimationFrame ||\n                window.setTimeout)(callback);\n    }\n    static get cancelAnimation() {\n        return Utils.isSsr()\n            ? (handle) => clearTimeout(handle)\n            : (handle) => (window.cancelAnimationFrame ||\n                window.webkitCancelRequestAnimationFrame ||\n                window.mozCancelRequestAnimationFrame ||\n                window.oCancelRequestAnimationFrame ||\n                window.msCancelRequestAnimationFrame ||\n                window.clearTimeout)(handle);\n    }\n    static isInArray(value, array) {\n        return value === array || (array instanceof Array && array.indexOf(value) > -1);\n    }\n    static loadFont(character) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield document.fonts.load(`${character.weight} 36px '${character.font}'`);\n            }\n            catch (_a) {\n            }\n        });\n    }\n    static arrayRandomIndex(array) {\n        return Math.floor(Math.random() * array.length);\n    }\n    static itemFromArray(array, index, useIndex = true) {\n        const fixedIndex = index !== undefined && useIndex ? index % array.length : Utils.arrayRandomIndex(array);\n        return array[fixedIndex];\n    }\n    static isPointInside(point, size, radius, direction) {\n        return Utils.areBoundsInside(Utils.calculateBounds(point, radius !== null && radius !== void 0 ? radius : 0), size, direction);\n    }\n    static areBoundsInside(bounds, size, direction) {\n        let inside = true;\n        if (!direction || direction === OutModeDirection_1.OutModeDirection.bottom) {\n            inside = bounds.top < size.height;\n        }\n        if (inside && (!direction || direction === OutModeDirection_1.OutModeDirection.left)) {\n            inside = bounds.right > 0;\n        }\n        if (inside && (!direction || direction === OutModeDirection_1.OutModeDirection.right)) {\n            inside = bounds.left < size.width;\n        }\n        if (inside && (!direction || direction === OutModeDirection_1.OutModeDirection.top)) {\n            inside = bounds.bottom > 0;\n        }\n        return inside;\n    }\n    static calculateBounds(point, radius) {\n        return {\n            bottom: point.y + radius,\n            left: point.x - radius,\n            right: point.x + radius,\n            top: point.y - radius,\n        };\n    }\n    static loadImage(source) {\n        return new Promise((resolve, reject) => {\n            if (!source) {\n                reject(\"Error tsParticles - No image.src\");\n                return;\n            }\n            const image = {\n                source: source,\n                type: source.substr(source.length - 3),\n            };\n            const img = new Image();\n            img.addEventListener(\"load\", () => {\n                image.element = img;\n                resolve(image);\n            });\n            img.addEventListener(\"error\", () => {\n                reject(`Error tsParticles - loading image: ${source}`);\n            });\n            img.src = source;\n        });\n    }\n    static downloadSvgImage(source) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!source) {\n                throw new Error(\"Error tsParticles - No image.src\");\n            }\n            const image = {\n                source: source,\n                type: source.substr(source.length - 3),\n            };\n            if (image.type !== \"svg\") {\n                return Utils.loadImage(source);\n            }\n            const response = yield fetch(image.source);\n            if (!response.ok) {\n                throw new Error(\"Error tsParticles - Image not found\");\n            }\n            image.svgData = yield response.text();\n            return image;\n        });\n    }\n    static deepExtend(destination, ...sources) {\n        for (const source of sources) {\n            if (source === undefined || source === null) {\n                continue;\n            }\n            if (typeof source !== \"object\") {\n                destination = source;\n                continue;\n            }\n            const sourceIsArray = Array.isArray(source);\n            if (sourceIsArray && (typeof destination !== \"object\" || !destination || !Array.isArray(destination))) {\n                destination = [];\n            }\n            else if (!sourceIsArray &&\n                (typeof destination !== \"object\" || !destination || Array.isArray(destination))) {\n                destination = {};\n            }\n            for (const key in source) {\n                if (key === \"__proto__\") {\n                    continue;\n                }\n                const sourceDict = source;\n                const value = sourceDict[key];\n                const isObject = typeof value === \"object\";\n                const destDict = destination;\n                destDict[key] =\n                    isObject && Array.isArray(value)\n                        ? value.map((v) => Utils.deepExtend(destDict[key], v))\n                        : Utils.deepExtend(destDict[key], value);\n            }\n        }\n        return destination;\n    }\n    static isDivModeEnabled(mode, divs) {\n        return divs instanceof Array\n            ? !!divs.find((t) => t.enable && Utils.isInArray(mode, t.mode))\n            : Utils.isInArray(mode, divs.mode);\n    }\n    static divModeExecute(mode, divs, callback) {\n        if (divs instanceof Array) {\n            for (const div of divs) {\n                const divMode = div.mode;\n                const divEnabled = div.enable;\n                if (divEnabled && Utils.isInArray(mode, divMode)) {\n                    Utils.singleDivModeExecute(div, callback);\n                }\n            }\n        }\n        else {\n            const divMode = divs.mode;\n            const divEnabled = divs.enable;\n            if (divEnabled && Utils.isInArray(mode, divMode)) {\n                Utils.singleDivModeExecute(divs, callback);\n            }\n        }\n    }\n    static singleDivModeExecute(div, callback) {\n        const selectors = div.selectors;\n        if (selectors instanceof Array) {\n            for (const selector of selectors) {\n                callback(selector, div);\n            }\n        }\n        else {\n            callback(selectors, div);\n        }\n    }\n    static divMode(divs, element) {\n        if (!element || !divs) {\n            return;\n        }\n        if (divs instanceof Array) {\n            return divs.find((d) => checkSelector(element, d.selectors));\n        }\n        else if (checkSelector(element, divs.selectors)) {\n            return divs;\n        }\n    }\n    static circleBounceDataFromParticle(p) {\n        return {\n            position: p.getPosition(),\n            radius: p.getRadius(),\n            mass: p.getMass(),\n            velocity: p.velocity,\n            factor: {\n                horizontal: NumberUtils_1.NumberUtils.getValue(p.options.bounce.horizontal),\n                vertical: NumberUtils_1.NumberUtils.getValue(p.options.bounce.vertical),\n            },\n        };\n    }\n    static circleBounce(p1, p2) {\n        const xVelocityDiff = p1.velocity.x;\n        const yVelocityDiff = p1.velocity.y;\n        const pos1 = p1.position;\n        const pos2 = p2.position;\n        const xDist = pos2.x - pos1.x;\n        const yDist = pos2.y - pos1.y;\n        if (xVelocityDiff * xDist + yVelocityDiff * yDist >= 0) {\n            const angle = -Math.atan2(pos2.y - pos1.y, pos2.x - pos1.x);\n            const m1 = p1.mass;\n            const m2 = p2.mass;\n            const u1 = p1.velocity.rotate(angle);\n            const u2 = p2.velocity.rotate(angle);\n            const v1 = NumberUtils_1.NumberUtils.collisionVelocity(u1, u2, m1, m2);\n            const v2 = NumberUtils_1.NumberUtils.collisionVelocity(u2, u1, m1, m2);\n            const vFinal1 = v1.rotate(-angle);\n            const vFinal2 = v2.rotate(-angle);\n            p1.velocity.x = vFinal1.x * p1.factor.horizontal;\n            p1.velocity.y = vFinal1.y * p1.factor.vertical;\n            p2.velocity.x = vFinal2.x * p2.factor.horizontal;\n            p2.velocity.y = vFinal2.y * p2.factor.vertical;\n        }\n    }\n    static rectBounce(particle, divBounds) {\n        const pPos = particle.getPosition();\n        const size = particle.getRadius();\n        const bounds = Utils.calculateBounds(pPos, size);\n        const resH = rectSideBounce({\n            min: bounds.left,\n            max: bounds.right,\n        }, {\n            min: bounds.top,\n            max: bounds.bottom,\n        }, {\n            min: divBounds.left,\n            max: divBounds.right,\n        }, {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        }, particle.velocity.x, NumberUtils_1.NumberUtils.getValue(particle.options.bounce.horizontal));\n        if (resH.bounced) {\n            if (resH.velocity !== undefined) {\n                particle.velocity.x = resH.velocity;\n            }\n            if (resH.position !== undefined) {\n                particle.position.x = resH.position;\n            }\n        }\n        const resV = rectSideBounce({\n            min: bounds.top,\n            max: bounds.bottom,\n        }, {\n            min: bounds.left,\n            max: bounds.right,\n        }, {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        }, {\n            min: divBounds.left,\n            max: divBounds.right,\n        }, particle.velocity.y, NumberUtils_1.NumberUtils.getValue(particle.options.bounce.vertical));\n        if (resV.bounced) {\n            if (resV.velocity !== undefined) {\n                particle.velocity.y = resV.velocity;\n            }\n            if (resV.position !== undefined) {\n                particle.position.y = resV.position;\n            }\n        }\n    }\n}\nexports.Utils = Utils;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Constants = void 0;\nclass Constants {\n}\nexports.Constants = Constants;\nConstants.canvasClass = \"tsparticles-canvas-el\";\nConstants.randomColorValue = \"random\";\nConstants.midColorValue = \"mid\";\nConstants.touchEndEvent = \"touchend\";\nConstants.mouseDownEvent = \"mousedown\";\nConstants.mouseUpEvent = \"mouseup\";\nConstants.mouseMoveEvent = \"mousemove\";\nConstants.touchStartEvent = \"touchstart\";\nConstants.touchMoveEvent = \"touchmove\";\nConstants.mouseLeaveEvent = \"mouseleave\";\nConstants.mouseOutEvent = \"mouseout\";\nConstants.touchCancelEvent = \"touchcancel\";\nConstants.resizeEvent = \"resize\";\nConstants.visibilityChangeEvent = \"visibilitychange\";\nConstants.noPolygonDataLoaded = \"No polygon data loaded.\";\nConstants.noPolygonFound = \"No polygon found, you need to specify SVG url in config.\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ColorUtils = void 0;\nconst Utils_1 = require(\"./Utils\");\nconst Constants_1 = require(\"./Constants\");\nconst NumberUtils_1 = require(\"./NumberUtils\");\nfunction hue2rgb(p, q, t) {\n    let tCalc = t;\n    if (tCalc < 0) {\n        tCalc += 1;\n    }\n    if (tCalc > 1) {\n        tCalc -= 1;\n    }\n    if (tCalc < 1 / 6) {\n        return p + (q - p) * 6 * tCalc;\n    }\n    if (tCalc < 1 / 2) {\n        return q;\n    }\n    if (tCalc < 2 / 3) {\n        return p + (q - p) * (2 / 3 - tCalc) * 6;\n    }\n    return p;\n}\nfunction stringToRgba(input) {\n    if (input.startsWith(\"rgb\")) {\n        const regex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([\\d.]+)\\s*)?\\)/i;\n        const result = regex.exec(input);\n        return result\n            ? {\n                a: result.length > 4 ? parseFloat(result[5]) : 1,\n                b: parseInt(result[3], 10),\n                g: parseInt(result[2], 10),\n                r: parseInt(result[1], 10),\n            }\n            : undefined;\n    }\n    else if (input.startsWith(\"hsl\")) {\n        const regex = /hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.]+)\\s*)?\\)/i;\n        const result = regex.exec(input);\n        return result\n            ? ColorUtils.hslaToRgba({\n                a: result.length > 4 ? parseFloat(result[5]) : 1,\n                h: parseInt(result[1], 10),\n                l: parseInt(result[3], 10),\n                s: parseInt(result[2], 10),\n            })\n            : undefined;\n    }\n    else if (input.startsWith(\"hsv\")) {\n        const regex = /hsva?\\(\\s*(\\d+)°\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.]+)\\s*)?\\)/i;\n        const result = regex.exec(input);\n        return result\n            ? ColorUtils.hsvaToRgba({\n                a: result.length > 4 ? parseFloat(result[5]) : 1,\n                h: parseInt(result[1], 10),\n                s: parseInt(result[2], 10),\n                v: parseInt(result[3], 10),\n            })\n            : undefined;\n    }\n    else {\n        const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i;\n        const hexFixed = input.replace(shorthandRegex, (_m, r, g, b, a) => {\n            return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n        });\n        const regex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i;\n        const result = regex.exec(hexFixed);\n        return result\n            ? {\n                a: result[4] !== undefined ? parseInt(result[4], 16) / 0xff : 1,\n                b: parseInt(result[3], 16),\n                g: parseInt(result[2], 16),\n                r: parseInt(result[1], 16),\n            }\n            : undefined;\n    }\n}\nclass ColorUtils {\n    static colorToRgb(input, index, useIndex = true) {\n        var _a, _b, _c;\n        if (input === undefined) {\n            return;\n        }\n        const color = typeof input === \"string\" ? { value: input } : input;\n        let res;\n        if (typeof color.value === \"string\") {\n            if (color.value === Constants_1.Constants.randomColorValue) {\n                res = ColorUtils.getRandomRgbColor();\n            }\n            else {\n                res = ColorUtils.stringToRgb(color.value);\n            }\n        }\n        else {\n            if (color.value instanceof Array) {\n                const colorSelected = Utils_1.Utils.itemFromArray(color.value, index, useIndex);\n                res = ColorUtils.colorToRgb({ value: colorSelected });\n            }\n            else {\n                const colorValue = color.value;\n                const rgbColor = (_a = colorValue.rgb) !== null && _a !== void 0 ? _a : color.value;\n                if (rgbColor.r !== undefined) {\n                    res = rgbColor;\n                }\n                else {\n                    const hslColor = (_b = colorValue.hsl) !== null && _b !== void 0 ? _b : color.value;\n                    if (hslColor.h !== undefined && hslColor.l !== undefined) {\n                        res = ColorUtils.hslToRgb(hslColor);\n                    }\n                    else {\n                        const hsvColor = (_c = colorValue.hsv) !== null && _c !== void 0 ? _c : color.value;\n                        if (hsvColor.h !== undefined && hsvColor.v !== undefined) {\n                            res = ColorUtils.hsvToRgb(hsvColor);\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    static colorToHsl(color, index, useIndex = true) {\n        const rgb = ColorUtils.colorToRgb(color, index, useIndex);\n        return rgb !== undefined ? ColorUtils.rgbToHsl(rgb) : undefined;\n    }\n    static rgbToHsl(color) {\n        const r1 = color.r / 255;\n        const g1 = color.g / 255;\n        const b1 = color.b / 255;\n        const max = Math.max(r1, g1, b1);\n        const min = Math.min(r1, g1, b1);\n        const res = {\n            h: 0,\n            l: (max + min) / 2,\n            s: 0,\n        };\n        if (max != min) {\n            res.s = res.l < 0.5 ? (max - min) / (max + min) : (max - min) / (2.0 - max - min);\n            res.h =\n                r1 === max\n                    ? (g1 - b1) / (max - min)\n                    : (res.h = g1 === max ? 2.0 + (b1 - r1) / (max - min) : 4.0 + (r1 - g1) / (max - min));\n        }\n        res.l *= 100;\n        res.s *= 100;\n        res.h *= 60;\n        if (res.h < 0) {\n            res.h += 360;\n        }\n        return res;\n    }\n    static stringToAlpha(input) {\n        var _a;\n        return (_a = stringToRgba(input)) === null || _a === void 0 ? void 0 : _a.a;\n    }\n    static stringToRgb(input) {\n        return stringToRgba(input);\n    }\n    static hslToRgb(hsl) {\n        const result = { b: 0, g: 0, r: 0 };\n        const hslPercent = {\n            h: hsl.h / 360,\n            l: hsl.l / 100,\n            s: hsl.s / 100,\n        };\n        if (hslPercent.s === 0) {\n            result.b = hslPercent.l;\n            result.g = hslPercent.l;\n            result.r = hslPercent.l;\n        }\n        else {\n            const q = hslPercent.l < 0.5\n                ? hslPercent.l * (1 + hslPercent.s)\n                : hslPercent.l + hslPercent.s - hslPercent.l * hslPercent.s;\n            const p = 2 * hslPercent.l - q;\n            result.r = hue2rgb(p, q, hslPercent.h + 1 / 3);\n            result.g = hue2rgb(p, q, hslPercent.h);\n            result.b = hue2rgb(p, q, hslPercent.h - 1 / 3);\n        }\n        result.r = Math.floor(result.r * 255);\n        result.g = Math.floor(result.g * 255);\n        result.b = Math.floor(result.b * 255);\n        return result;\n    }\n    static hslaToRgba(hsla) {\n        const rgbResult = ColorUtils.hslToRgb(hsla);\n        return {\n            a: hsla.a,\n            b: rgbResult.b,\n            g: rgbResult.g,\n            r: rgbResult.r,\n        };\n    }\n    static hslToHsv(hsl) {\n        const l = hsl.l / 100, sl = hsl.s / 100;\n        const v = l + sl * Math.min(l, 1 - l), sv = !v ? 0 : 2 * (1 - l / v);\n        return {\n            h: hsl.h,\n            s: sv * 100,\n            v: v * 100,\n        };\n    }\n    static hslaToHsva(hsla) {\n        const hsvResult = ColorUtils.hslToHsv(hsla);\n        return {\n            a: hsla.a,\n            h: hsvResult.h,\n            s: hsvResult.s,\n            v: hsvResult.v,\n        };\n    }\n    static hsvToHsl(hsv) {\n        const v = hsv.v / 100, sv = hsv.s / 100;\n        const l = v * (1 - sv / 2), sl = l === 0 || l === 1 ? 0 : (v - l) / Math.min(l, 1 - l);\n        return {\n            h: hsv.h,\n            l: l * 100,\n            s: sl * 100,\n        };\n    }\n    static hsvaToHsla(hsva) {\n        const hslResult = ColorUtils.hsvToHsl(hsva);\n        return {\n            a: hsva.a,\n            h: hslResult.h,\n            l: hslResult.l,\n            s: hslResult.s,\n        };\n    }\n    static hsvToRgb(hsv) {\n        const result = { b: 0, g: 0, r: 0 };\n        const hsvPercent = {\n            h: hsv.h / 60,\n            s: hsv.s / 100,\n            v: hsv.v / 100,\n        };\n        const c = hsvPercent.v * hsvPercent.s, x = c * (1 - Math.abs((hsvPercent.h % 2) - 1));\n        let tempRgb;\n        if (hsvPercent.h >= 0 && hsvPercent.h <= 1) {\n            tempRgb = {\n                r: c,\n                g: x,\n                b: 0,\n            };\n        }\n        else if (hsvPercent.h > 1 && hsvPercent.h <= 2) {\n            tempRgb = {\n                r: x,\n                g: c,\n                b: 0,\n            };\n        }\n        else if (hsvPercent.h > 2 && hsvPercent.h <= 3) {\n            tempRgb = {\n                r: 0,\n                g: c,\n                b: x,\n            };\n        }\n        else if (hsvPercent.h > 3 && hsvPercent.h <= 4) {\n            tempRgb = {\n                r: 0,\n                g: x,\n                b: c,\n            };\n        }\n        else if (hsvPercent.h > 4 && hsvPercent.h <= 5) {\n            tempRgb = {\n                r: x,\n                g: 0,\n                b: c,\n            };\n        }\n        else if (hsvPercent.h > 5 && hsvPercent.h <= 6) {\n            tempRgb = {\n                r: c,\n                g: 0,\n                b: x,\n            };\n        }\n        if (tempRgb) {\n            const m = hsvPercent.v - c;\n            result.r = Math.floor((tempRgb.r + m) * 255);\n            result.g = Math.floor((tempRgb.g + m) * 255);\n            result.b = Math.floor((tempRgb.b + m) * 255);\n        }\n        return result;\n    }\n    static hsvaToRgba(hsva) {\n        const rgbResult = ColorUtils.hsvToRgb(hsva);\n        return {\n            a: hsva.a,\n            b: rgbResult.b,\n            g: rgbResult.g,\n            r: rgbResult.r,\n        };\n    }\n    static rgbToHsv(rgb) {\n        const rgbPercent = {\n            r: rgb.r / 255,\n            g: rgb.g / 255,\n            b: rgb.b / 255,\n        }, xMax = Math.max(rgbPercent.r, rgbPercent.g, rgbPercent.b), xMin = Math.min(rgbPercent.r, rgbPercent.g, rgbPercent.b), v = xMax, c = xMax - xMin;\n        let h = 0;\n        if (v === rgbPercent.r) {\n            h = 60 * ((rgbPercent.g - rgbPercent.b) / c);\n        }\n        else if (v === rgbPercent.g) {\n            h = 60 * (2 + (rgbPercent.b - rgbPercent.r) / c);\n        }\n        else if (v === rgbPercent.b) {\n            h = 60 * (4 + (rgbPercent.r - rgbPercent.g) / c);\n        }\n        const s = !v ? 0 : c / v;\n        return {\n            h,\n            s: s * 100,\n            v: v * 100,\n        };\n    }\n    static rgbaToHsva(rgba) {\n        const hsvResult = ColorUtils.rgbToHsv(rgba);\n        return {\n            a: rgba.a,\n            h: hsvResult.h,\n            s: hsvResult.s,\n            v: hsvResult.v,\n        };\n    }\n    static getRandomRgbColor(min) {\n        const fixedMin = min !== null && min !== void 0 ? min : 0;\n        return {\n            b: Math.floor(NumberUtils_1.NumberUtils.randomInRange(NumberUtils_1.NumberUtils.setRangeValue(fixedMin, 256))),\n            g: Math.floor(NumberUtils_1.NumberUtils.randomInRange(NumberUtils_1.NumberUtils.setRangeValue(fixedMin, 256))),\n            r: Math.floor(NumberUtils_1.NumberUtils.randomInRange(NumberUtils_1.NumberUtils.setRangeValue(fixedMin, 256))),\n        };\n    }\n    static getStyleFromRgb(color, opacity) {\n        return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity !== null && opacity !== void 0 ? opacity : 1})`;\n    }\n    static getStyleFromHsl(color, opacity) {\n        return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity !== null && opacity !== void 0 ? opacity : 1})`;\n    }\n    static getStyleFromHsv(color, opacity) {\n        return ColorUtils.getStyleFromHsl(ColorUtils.hsvToHsl(color), opacity);\n    }\n    static mix(color1, color2, size1, size2) {\n        let rgb1 = color1;\n        let rgb2 = color2;\n        if (rgb1.r === undefined) {\n            rgb1 = ColorUtils.hslToRgb(color1);\n        }\n        if (rgb2.r === undefined) {\n            rgb2 = ColorUtils.hslToRgb(color2);\n        }\n        return {\n            b: NumberUtils_1.NumberUtils.mix(rgb1.b, rgb2.b, size1, size2),\n            g: NumberUtils_1.NumberUtils.mix(rgb1.g, rgb2.g, size1, size2),\n            r: NumberUtils_1.NumberUtils.mix(rgb1.r, rgb2.r, size1, size2),\n        };\n    }\n    static replaceColorSvg(image, color, opacity) {\n        if (!image.svgData) {\n            return \"\";\n        }\n        const svgXml = image.svgData;\n        const rgbHex = /#([0-9A-F]{3,6})/gi;\n        return svgXml.replace(rgbHex, () => ColorUtils.getStyleFromHsl(color, opacity));\n    }\n    static getLinkColor(p1, p2, linkColor) {\n        var _a, _b;\n        if (linkColor === Constants_1.Constants.randomColorValue) {\n            return ColorUtils.getRandomRgbColor();\n        }\n        else if (linkColor === \"mid\") {\n            const sourceColor = (_a = p1.getFillColor()) !== null && _a !== void 0 ? _a : p1.getStrokeColor();\n            const destColor = (_b = p2 === null || p2 === void 0 ? void 0 : p2.getFillColor()) !== null && _b !== void 0 ? _b : p2 === null || p2 === void 0 ? void 0 : p2.getStrokeColor();\n            if (sourceColor && destColor && p2) {\n                return ColorUtils.mix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n            }\n            else {\n                const hslColor = sourceColor !== null && sourceColor !== void 0 ? sourceColor : destColor;\n                if (hslColor) {\n                    return ColorUtils.hslToRgb(hslColor);\n                }\n            }\n        }\n        else {\n            return linkColor;\n        }\n    }\n    static getLinkRandomColor(optColor, blink, consent) {\n        const color = typeof optColor === \"string\" ? optColor : optColor.value;\n        if (color === Constants_1.Constants.randomColorValue) {\n            if (consent) {\n                return ColorUtils.colorToRgb({\n                    value: color,\n                });\n            }\n            else if (blink) {\n                return Constants_1.Constants.randomColorValue;\n            }\n            else {\n                return Constants_1.Constants.midColorValue;\n            }\n        }\n        else {\n            return ColorUtils.colorToRgb({\n                value: color,\n            });\n        }\n    }\n    static getHslFromAnimation(animation) {\n        return animation !== undefined\n            ? {\n                h: animation.h.value,\n                s: animation.s.value,\n                l: animation.l.value,\n            }\n            : undefined;\n    }\n}\nexports.ColorUtils = ColorUtils;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CanvasUtils = void 0;\nconst ColorUtils_1 = require(\"./ColorUtils\");\nconst NumberUtils_1 = require(\"./NumberUtils\");\nfunction drawLine(context, begin, end) {\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n}\nfunction drawTriangle(context, p1, p2, p3) {\n    context.beginPath();\n    context.moveTo(p1.x, p1.y);\n    context.lineTo(p2.x, p2.y);\n    context.lineTo(p3.x, p3.y);\n    context.closePath();\n}\nclass CanvasUtils {\n    static paintBase(context, dimension, baseColor) {\n        context.save();\n        context.fillStyle = baseColor !== null && baseColor !== void 0 ? baseColor : \"rgba(0,0,0,0)\";\n        context.fillRect(0, 0, dimension.width, dimension.height);\n        context.restore();\n    }\n    static clear(context, dimension) {\n        context.clearRect(0, 0, dimension.width, dimension.height);\n    }\n    static drawLinkLine(context, width, begin, end, maxDistance, canvasSize, warp, backgroundMask, composite, colorLine, opacity, shadow) {\n        let drawn = false;\n        if (NumberUtils_1.NumberUtils.getDistance(begin, end) <= maxDistance) {\n            drawLine(context, begin, end);\n            drawn = true;\n        }\n        else if (warp) {\n            let pi1;\n            let pi2;\n            const endNE = {\n                x: end.x - canvasSize.width,\n                y: end.y,\n            };\n            const d1 = NumberUtils_1.NumberUtils.getDistances(begin, endNE);\n            if (d1.distance <= maxDistance) {\n                const yi = begin.y - (d1.dy / d1.dx) * begin.x;\n                pi1 = { x: 0, y: yi };\n                pi2 = { x: canvasSize.width, y: yi };\n            }\n            else {\n                const endSW = {\n                    x: end.x,\n                    y: end.y - canvasSize.height,\n                };\n                const d2 = NumberUtils_1.NumberUtils.getDistances(begin, endSW);\n                if (d2.distance <= maxDistance) {\n                    const yi = begin.y - (d2.dy / d2.dx) * begin.x;\n                    const xi = -yi / (d2.dy / d2.dx);\n                    pi1 = { x: xi, y: 0 };\n                    pi2 = { x: xi, y: canvasSize.height };\n                }\n                else {\n                    const endSE = {\n                        x: end.x - canvasSize.width,\n                        y: end.y - canvasSize.height,\n                    };\n                    const d3 = NumberUtils_1.NumberUtils.getDistances(begin, endSE);\n                    if (d3.distance <= maxDistance) {\n                        const yi = begin.y - (d3.dy / d3.dx) * begin.x;\n                        const xi = -yi / (d3.dy / d3.dx);\n                        pi1 = { x: xi, y: yi };\n                        pi2 = { x: pi1.x + canvasSize.width, y: pi1.y + canvasSize.height };\n                    }\n                }\n            }\n            if (pi1 && pi2) {\n                drawLine(context, begin, pi1);\n                drawLine(context, end, pi2);\n                drawn = true;\n            }\n        }\n        if (!drawn) {\n            return;\n        }\n        context.lineWidth = width;\n        if (backgroundMask) {\n            context.globalCompositeOperation = composite;\n        }\n        context.strokeStyle = ColorUtils_1.ColorUtils.getStyleFromRgb(colorLine, opacity);\n        if (shadow.enable) {\n            const shadowColor = ColorUtils_1.ColorUtils.colorToRgb(shadow.color);\n            if (shadowColor) {\n                context.shadowBlur = shadow.blur;\n                context.shadowColor = ColorUtils_1.ColorUtils.getStyleFromRgb(shadowColor);\n            }\n        }\n        context.stroke();\n    }\n    static drawLinkTriangle(context, pos1, pos2, pos3, backgroundMask, composite, colorTriangle, opacityTriangle) {\n        drawTriangle(context, pos1, pos2, pos3);\n        if (backgroundMask) {\n            context.globalCompositeOperation = composite;\n        }\n        context.fillStyle = ColorUtils_1.ColorUtils.getStyleFromRgb(colorTriangle, opacityTriangle);\n        context.fill();\n    }\n    static drawConnectLine(context, width, lineStyle, begin, end) {\n        context.save();\n        drawLine(context, begin, end);\n        context.lineWidth = width;\n        context.strokeStyle = lineStyle;\n        context.stroke();\n        context.restore();\n    }\n    static gradient(context, p1, p2, opacity) {\n        const gradStop = Math.floor(p2.getRadius() / p1.getRadius());\n        const color1 = p1.getFillColor();\n        const color2 = p2.getFillColor();\n        if (!color1 || !color2) {\n            return;\n        }\n        const sourcePos = p1.getPosition();\n        const destPos = p2.getPosition();\n        const midRgb = ColorUtils_1.ColorUtils.mix(color1, color2, p1.getRadius(), p2.getRadius());\n        const grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\n        grad.addColorStop(0, ColorUtils_1.ColorUtils.getStyleFromHsl(color1, opacity));\n        grad.addColorStop(gradStop > 1 ? 1 : gradStop, ColorUtils_1.ColorUtils.getStyleFromRgb(midRgb, opacity));\n        grad.addColorStop(1, ColorUtils_1.ColorUtils.getStyleFromHsl(color2, opacity));\n        return grad;\n    }\n    static drawGrabLine(context, width, begin, end, colorLine, opacity) {\n        context.save();\n        drawLine(context, begin, end);\n        context.strokeStyle = ColorUtils_1.ColorUtils.getStyleFromRgb(colorLine, opacity);\n        context.lineWidth = width;\n        context.stroke();\n        context.restore();\n    }\n    static drawLight(container, context, mousePos) {\n        const lightOptions = container.actualOptions.interactivity.modes.light.area;\n        context.beginPath();\n        context.arc(mousePos.x, mousePos.y, lightOptions.radius, 0, 2 * Math.PI);\n        const gradientAmbientLight = context.createRadialGradient(mousePos.x, mousePos.y, 0, mousePos.x, mousePos.y, lightOptions.radius);\n        const gradient = lightOptions.gradient;\n        const gradientRgb = {\n            start: ColorUtils_1.ColorUtils.colorToRgb(gradient.start),\n            stop: ColorUtils_1.ColorUtils.colorToRgb(gradient.stop),\n        };\n        if (!gradientRgb.start || !gradientRgb.stop) {\n            return;\n        }\n        gradientAmbientLight.addColorStop(0, ColorUtils_1.ColorUtils.getStyleFromRgb(gradientRgb.start));\n        gradientAmbientLight.addColorStop(1, ColorUtils_1.ColorUtils.getStyleFromRgb(gradientRgb.stop));\n        context.fillStyle = gradientAmbientLight;\n        context.fill();\n    }\n    static drawParticleShadow(container, context, particle, mousePos) {\n        const pos = particle.getPosition();\n        const shadowOptions = container.actualOptions.interactivity.modes.light.shadow;\n        context.save();\n        const radius = particle.getRadius();\n        const sides = particle.sides;\n        const full = (Math.PI * 2) / sides;\n        const angle = -particle.rotate.value + Math.PI / 4;\n        const factor = 1;\n        const dots = [];\n        for (let i = 0; i < sides; i++) {\n            dots.push({\n                x: pos.x + radius * Math.sin(angle + full * i) * factor,\n                y: pos.y + radius * Math.cos(angle + full * i) * factor,\n            });\n        }\n        const points = [];\n        const shadowLength = shadowOptions.length;\n        for (const dot of dots) {\n            const dotAngle = Math.atan2(mousePos.y - dot.y, mousePos.x - dot.x);\n            const endX = dot.x + shadowLength * Math.sin(-dotAngle - Math.PI / 2);\n            const endY = dot.y + shadowLength * Math.cos(-dotAngle - Math.PI / 2);\n            points.push({\n                endX: endX,\n                endY: endY,\n                startX: dot.x,\n                startY: dot.y,\n            });\n        }\n        const shadowRgb = ColorUtils_1.ColorUtils.colorToRgb(shadowOptions.color);\n        if (!shadowRgb) {\n            return;\n        }\n        const shadowColor = ColorUtils_1.ColorUtils.getStyleFromRgb(shadowRgb);\n        for (let i = points.length - 1; i >= 0; i--) {\n            const n = i == points.length - 1 ? 0 : i + 1;\n            context.beginPath();\n            context.moveTo(points[i].startX, points[i].startY);\n            context.lineTo(points[n].startX, points[n].startY);\n            context.lineTo(points[n].endX, points[n].endY);\n            context.lineTo(points[i].endX, points[i].endY);\n            context.fillStyle = shadowColor;\n            context.fill();\n        }\n        context.restore();\n    }\n    static drawParticle(container, context, particle, delta, fillColorValue, strokeColorValue, backgroundMask, composite, radius, opacity, shadow) {\n        const pos = particle.getPosition();\n        context.save();\n        context.translate(pos.x, pos.y);\n        context.beginPath();\n        const angle = particle.rotate.value + (particle.options.rotate.path ? particle.velocity.angle : 0);\n        if (angle !== 0) {\n            context.rotate(angle);\n        }\n        if (backgroundMask) {\n            context.globalCompositeOperation = composite;\n        }\n        const shadowColor = particle.shadowColor;\n        if (shadow.enable && shadowColor) {\n            context.shadowBlur = shadow.blur;\n            context.shadowColor = ColorUtils_1.ColorUtils.getStyleFromRgb(shadowColor);\n            context.shadowOffsetX = shadow.offset.x;\n            context.shadowOffsetY = shadow.offset.y;\n        }\n        if (fillColorValue) {\n            context.fillStyle = fillColorValue;\n        }\n        const stroke = particle.stroke;\n        context.lineWidth = particle.strokeWidth;\n        if (strokeColorValue) {\n            context.strokeStyle = strokeColorValue;\n        }\n        CanvasUtils.drawShape(container, context, particle, radius, opacity, delta);\n        if (stroke.width > 0) {\n            context.stroke();\n        }\n        if (particle.close) {\n            context.closePath();\n        }\n        if (particle.fill) {\n            context.fill();\n        }\n        context.restore();\n        context.save();\n        context.translate(pos.x, pos.y);\n        if (angle !== 0) {\n            context.rotate(angle);\n        }\n        if (backgroundMask) {\n            context.globalCompositeOperation = composite;\n        }\n        CanvasUtils.drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\n        context.restore();\n    }\n    static drawShape(container, context, particle, radius, opacity, delta) {\n        if (!particle.shape) {\n            return;\n        }\n        const drawer = container.drawers.get(particle.shape);\n        if (!drawer) {\n            return;\n        }\n        drawer.draw(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n    }\n    static drawShapeAfterEffect(container, context, particle, radius, opacity, delta) {\n        if (!particle.shape) {\n            return;\n        }\n        const drawer = container.drawers.get(particle.shape);\n        if (!(drawer === null || drawer === void 0 ? void 0 : drawer.afterEffect)) {\n            return;\n        }\n        drawer.afterEffect(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n    }\n    static drawPlugin(context, plugin, delta) {\n        if (plugin.draw !== undefined) {\n            context.save();\n            plugin.draw(context, delta);\n            context.restore();\n        }\n    }\n}\nexports.CanvasUtils = CanvasUtils;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Range = void 0;\nclass Range {\n    constructor(x, y) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n    }\n}\nexports.Range = Range;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Circle = void 0;\nconst Range_1 = require(\"./Range\");\nclass Circle extends Range_1.Range {\n    constructor(x, y, radius) {\n        super(x, y);\n        this.radius = radius;\n    }\n    contains(point) {\n        const d = Math.pow(point.x - this.position.x, 2) + Math.pow(point.y - this.position.y, 2);\n        return d <= this.radius * this.radius;\n    }\n    intersects(range) {\n        const rect = range;\n        const circle = range;\n        const pos1 = this.position;\n        const pos2 = range.position;\n        const xDist = Math.abs(pos2.x - pos1.x);\n        const yDist = Math.abs(pos2.y - pos1.y);\n        const r = this.radius;\n        if (circle.radius !== undefined) {\n            const rSum = r + circle.radius;\n            const dist = Math.sqrt(xDist * xDist + yDist + yDist);\n            return rSum > dist;\n        }\n        else if (rect.size !== undefined) {\n            const w = rect.size.width;\n            const h = rect.size.height;\n            const edges = Math.pow(xDist - w, 2) + Math.pow(yDist - h, 2);\n            if (xDist > r + w || yDist > r + h) {\n                return false;\n            }\n            if (xDist <= w || yDist <= h) {\n                return true;\n            }\n            return edges <= r * r;\n        }\n        return false;\n    }\n}\nexports.Circle = Circle;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Rectangle = void 0;\nconst Range_1 = require(\"./Range\");\nclass Rectangle extends Range_1.Range {\n    constructor(x, y, width, height) {\n        super(x, y);\n        this.size = {\n            height: height,\n            width: width,\n        };\n    }\n    contains(point) {\n        const w = this.size.width;\n        const h = this.size.height;\n        const pos = this.position;\n        return point.x >= pos.x && point.x <= pos.x + w && point.y >= pos.y && point.y <= pos.y + h;\n    }\n    intersects(range) {\n        const rect = range;\n        const circle = range;\n        const w = this.size.width;\n        const h = this.size.height;\n        const pos1 = this.position;\n        const pos2 = range.position;\n        if (circle.radius !== undefined) {\n            return circle.intersects(this);\n        }\n        else if (rect.size !== undefined) {\n            const size2 = rect.size;\n            const w2 = size2.width;\n            const h2 = size2.height;\n            return pos2.x < pos1.x + w && pos2.x + w2 > pos1.x && pos2.y < pos1.y + h && pos2.y + h2 > pos1.y;\n        }\n        return false;\n    }\n}\nexports.Rectangle = Rectangle;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CircleWarp = void 0;\nconst Rectangle_1 = require(\"./Rectangle\");\nconst Circle_1 = require(\"./Circle\");\nclass CircleWarp extends Circle_1.Circle {\n    constructor(x, y, radius, canvasSize) {\n        super(x, y, radius);\n        this.canvasSize = canvasSize;\n        this.canvasSize = {\n            height: canvasSize.height,\n            width: canvasSize.width,\n        };\n    }\n    contains(point) {\n        if (super.contains(point)) {\n            return true;\n        }\n        const posNE = {\n            x: point.x - this.canvasSize.width,\n            y: point.y,\n        };\n        if (super.contains(posNE)) {\n            return true;\n        }\n        const posSE = {\n            x: point.x - this.canvasSize.width,\n            y: point.y - this.canvasSize.height,\n        };\n        if (super.contains(posSE)) {\n            return true;\n        }\n        const posSW = {\n            x: point.x,\n            y: point.y - this.canvasSize.height,\n        };\n        return super.contains(posSW);\n    }\n    intersects(range) {\n        if (super.intersects(range)) {\n            return true;\n        }\n        const rect = range;\n        const circle = range;\n        const newPos = {\n            x: range.position.x - this.canvasSize.width,\n            y: range.position.y - this.canvasSize.height,\n        };\n        if (circle.radius !== undefined) {\n            const biggerCircle = new Circle_1.Circle(newPos.x, newPos.y, circle.radius * 2);\n            return super.intersects(biggerCircle);\n        }\n        else if (rect.size !== undefined) {\n            const rectSW = new Rectangle_1.Rectangle(newPos.x, newPos.y, rect.size.width * 2, rect.size.height * 2);\n            return super.intersects(rectSW);\n        }\n        return false;\n    }\n}\nexports.CircleWarp = CircleWarp;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ClickMode = void 0;\nvar ClickMode;\n(function (ClickMode) {\n    ClickMode[\"attract\"] = \"attract\";\n    ClickMode[\"bubble\"] = \"bubble\";\n    ClickMode[\"push\"] = \"push\";\n    ClickMode[\"remove\"] = \"remove\";\n    ClickMode[\"repulse\"] = \"repulse\";\n    ClickMode[\"pause\"] = \"pause\";\n    ClickMode[\"trail\"] = \"trail\";\n})(ClickMode = exports.ClickMode || (exports.ClickMode = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DivMode = void 0;\nvar DivMode;\n(function (DivMode) {\n    DivMode[\"bounce\"] = \"bounce\";\n    DivMode[\"bubble\"] = \"bubble\";\n    DivMode[\"repulse\"] = \"repulse\";\n})(DivMode = exports.DivMode || (exports.DivMode = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HoverMode = void 0;\nvar HoverMode;\n(function (HoverMode) {\n    HoverMode[\"attract\"] = \"attract\";\n    HoverMode[\"bounce\"] = \"bounce\";\n    HoverMode[\"bubble\"] = \"bubble\";\n    HoverMode[\"connect\"] = \"connect\";\n    HoverMode[\"grab\"] = \"grab\";\n    HoverMode[\"light\"] = \"light\";\n    HoverMode[\"repulse\"] = \"repulse\";\n    HoverMode[\"slow\"] = \"slow\";\n    HoverMode[\"trail\"] = \"trail\";\n})(HoverMode = exports.HoverMode || (exports.HoverMode = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CollisionMode = void 0;\nvar CollisionMode;\n(function (CollisionMode) {\n    CollisionMode[\"absorb\"] = \"absorb\";\n    CollisionMode[\"bounce\"] = \"bounce\";\n    CollisionMode[\"destroy\"] = \"destroy\";\n})(CollisionMode = exports.CollisionMode || (exports.CollisionMode = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OutMode = void 0;\nvar OutMode;\n(function (OutMode) {\n    OutMode[\"bounce\"] = \"bounce\";\n    OutMode[\"bounceHorizontal\"] = \"bounce-horizontal\";\n    OutMode[\"bounceVertical\"] = \"bounce-vertical\";\n    OutMode[\"none\"] = \"none\";\n    OutMode[\"out\"] = \"out\";\n    OutMode[\"destroy\"] = \"destroy\";\n})(OutMode = exports.OutMode || (exports.OutMode = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SizeMode = void 0;\nvar SizeMode;\n(function (SizeMode) {\n    SizeMode[\"precise\"] = \"precise\";\n    SizeMode[\"percent\"] = \"percent\";\n})(SizeMode = exports.SizeMode || (exports.SizeMode = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ThemeMode = void 0;\nvar ThemeMode;\n(function (ThemeMode) {\n    ThemeMode[\"any\"] = \"any\";\n    ThemeMode[\"dark\"] = \"dark\";\n    ThemeMode[\"light\"] = \"light\";\n})(ThemeMode = exports.ThemeMode || (exports.ThemeMode = {}));\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./ClickMode\"), exports);\n__exportStar(require(\"./DivMode\"), exports);\n__exportStar(require(\"./HoverMode\"), exports);\n__exportStar(require(\"./CollisionMode\"), exports);\n__exportStar(require(\"./OutMode\"), exports);\n__exportStar(require(\"./SizeMode\"), exports);\n__exportStar(require(\"./ThemeMode\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AnimationStatus = void 0;\nvar AnimationStatus;\n(function (AnimationStatus) {\n    AnimationStatus[AnimationStatus[\"increasing\"] = 0] = \"increasing\";\n    AnimationStatus[AnimationStatus[\"decreasing\"] = 1] = \"decreasing\";\n})(AnimationStatus = exports.AnimationStatus || (exports.AnimationStatus = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DestroyType = void 0;\nvar DestroyType;\n(function (DestroyType) {\n    DestroyType[\"none\"] = \"none\";\n    DestroyType[\"max\"] = \"max\";\n    DestroyType[\"min\"] = \"min\";\n})(DestroyType = exports.DestroyType || (exports.DestroyType = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProcessBubbleType = void 0;\nvar ProcessBubbleType;\n(function (ProcessBubbleType) {\n    ProcessBubbleType[\"color\"] = \"color\";\n    ProcessBubbleType[\"opacity\"] = \"opacity\";\n    ProcessBubbleType[\"size\"] = \"size\";\n})(ProcessBubbleType = exports.ProcessBubbleType || (exports.ProcessBubbleType = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ShapeType = void 0;\nvar ShapeType;\n(function (ShapeType) {\n    ShapeType[\"char\"] = \"char\";\n    ShapeType[\"character\"] = \"character\";\n    ShapeType[\"circle\"] = \"circle\";\n    ShapeType[\"edge\"] = \"edge\";\n    ShapeType[\"image\"] = \"image\";\n    ShapeType[\"images\"] = \"images\";\n    ShapeType[\"line\"] = \"line\";\n    ShapeType[\"polygon\"] = \"polygon\";\n    ShapeType[\"square\"] = \"square\";\n    ShapeType[\"star\"] = \"star\";\n    ShapeType[\"triangle\"] = \"triangle\";\n})(ShapeType = exports.ShapeType || (exports.ShapeType = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StartValueType = void 0;\nvar StartValueType;\n(function (StartValueType) {\n    StartValueType[\"max\"] = \"max\";\n    StartValueType[\"min\"] = \"min\";\n    StartValueType[\"random\"] = \"random\";\n})(StartValueType = exports.StartValueType || (exports.StartValueType = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DivType = void 0;\nvar DivType;\n(function (DivType) {\n    DivType[\"circle\"] = \"circle\";\n    DivType[\"rectangle\"] = \"rectangle\";\n})(DivType = exports.DivType || (exports.DivType = {}));\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./DestroyType\"), exports);\n__exportStar(require(\"./ProcessBubbleType\"), exports);\n__exportStar(require(\"./ShapeType\"), exports);\n__exportStar(require(\"./StartValueType\"), exports);\n__exportStar(require(\"./DivType\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InteractivityDetect = void 0;\nvar InteractivityDetect;\n(function (InteractivityDetect) {\n    InteractivityDetect[\"canvas\"] = \"canvas\";\n    InteractivityDetect[\"parent\"] = \"parent\";\n    InteractivityDetect[\"window\"] = \"window\";\n})(InteractivityDetect = exports.InteractivityDetect || (exports.InteractivityDetect = {}));\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./Directions\"), exports);\n__exportStar(require(\"./Modes\"), exports);\n__exportStar(require(\"./AnimationStatus\"), exports);\n__exportStar(require(\"./Types\"), exports);\n__exportStar(require(\"./InteractivityDetect\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EventListeners = void 0;\nconst Enums_1 = require(\"../Enums\");\nconst Constants_1 = require(\"./Constants\");\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (typeof options === \"boolean\") {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nclass EventListeners {\n    constructor(container) {\n        this.container = container;\n        this.canPush = true;\n        this.mouseMoveHandler = (e) => this.mouseTouchMove(e);\n        this.touchStartHandler = (e) => this.mouseTouchMove(e);\n        this.touchMoveHandler = (e) => this.mouseTouchMove(e);\n        this.touchEndHandler = () => this.mouseTouchFinish();\n        this.mouseLeaveHandler = () => this.mouseTouchFinish();\n        this.touchCancelHandler = () => this.mouseTouchFinish();\n        this.touchEndClickHandler = (e) => this.mouseTouchClick(e);\n        this.mouseUpHandler = (e) => this.mouseTouchClick(e);\n        this.mouseDownHandler = () => this.mouseDown();\n        this.visibilityChangeHandler = () => this.handleVisibilityChange();\n        this.resizeHandler = () => this.handleWindowResize();\n    }\n    addListeners() {\n        this.manageListeners(true);\n    }\n    removeListeners() {\n        this.manageListeners(false);\n    }\n    manageListeners(add) {\n        var _a;\n        const container = this.container;\n        const options = container.actualOptions;\n        const detectType = options.interactivity.detectsOn;\n        let mouseLeaveEvent = Constants_1.Constants.mouseLeaveEvent;\n        if (detectType === Enums_1.InteractivityDetect.window) {\n            container.interactivity.element = window;\n            mouseLeaveEvent = Constants_1.Constants.mouseOutEvent;\n        }\n        else if (detectType === Enums_1.InteractivityDetect.parent && container.canvas.element) {\n            const canvasEl = container.canvas.element;\n            container.interactivity.element = (_a = canvasEl.parentElement) !== null && _a !== void 0 ? _a : canvasEl.parentNode;\n        }\n        else {\n            container.interactivity.element = container.canvas.element;\n        }\n        const interactivityEl = container.interactivity.element;\n        if (!interactivityEl) {\n            return;\n        }\n        const html = interactivityEl;\n        if (options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable) {\n            manageListener(interactivityEl, Constants_1.Constants.mouseMoveEvent, this.mouseMoveHandler, add);\n            manageListener(interactivityEl, Constants_1.Constants.touchStartEvent, this.touchStartHandler, add);\n            manageListener(interactivityEl, Constants_1.Constants.touchMoveEvent, this.touchMoveHandler, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, Constants_1.Constants.touchEndEvent, this.touchEndHandler, add);\n            }\n            else {\n                manageListener(interactivityEl, Constants_1.Constants.touchEndEvent, this.touchEndClickHandler, add);\n                manageListener(interactivityEl, Constants_1.Constants.mouseUpEvent, this.mouseUpHandler, add);\n                manageListener(interactivityEl, Constants_1.Constants.mouseDownEvent, this.mouseDownHandler, add);\n            }\n            manageListener(interactivityEl, mouseLeaveEvent, this.mouseLeaveHandler, add);\n            manageListener(interactivityEl, Constants_1.Constants.touchCancelEvent, this.touchCancelHandler, add);\n        }\n        if (container.canvas.element) {\n            container.canvas.element.style.pointerEvents = html === container.canvas.element ? \"initial\" : \"none\";\n        }\n        if (options.interactivity.events.resize) {\n            manageListener(window, Constants_1.Constants.resizeEvent, this.resizeHandler, add);\n        }\n        if (document) {\n            manageListener(document, Constants_1.Constants.visibilityChangeEvent, this.visibilityChangeHandler, add, false);\n        }\n    }\n    handleWindowResize() {\n        var _a;\n        (_a = this.container.canvas) === null || _a === void 0 ? void 0 : _a.windowResize();\n    }\n    handleVisibilityChange() {\n        const container = this.container;\n        const options = container.actualOptions;\n        this.mouseTouchFinish();\n        if (!options.pauseOnBlur) {\n            return;\n        }\n        if (document === null || document === void 0 ? void 0 : document.hidden) {\n            container.pageHidden = true;\n            container.pause();\n        }\n        else {\n            container.pageHidden = false;\n            if (container.getAnimationStatus()) {\n                container.play(true);\n            }\n            else {\n                container.draw();\n            }\n        }\n    }\n    mouseDown() {\n        const interactivity = this.container.interactivity;\n        if (interactivity) {\n            const mouse = interactivity.mouse;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        }\n    }\n    mouseTouchMove(e) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const container = this.container;\n        const options = container.actualOptions;\n        if (((_a = container.interactivity) === null || _a === void 0 ? void 0 : _a.element) === undefined) {\n            return;\n        }\n        container.interactivity.mouse.inside = true;\n        let pos;\n        const canvas = container.canvas.element;\n        if (e.type.startsWith(\"mouse\")) {\n            this.canPush = true;\n            const mouseEvent = e;\n            if (container.interactivity.element === window) {\n                if (canvas) {\n                    const clientRect = canvas.getBoundingClientRect();\n                    pos = {\n                        x: mouseEvent.clientX - clientRect.left,\n                        y: mouseEvent.clientY - clientRect.top,\n                    };\n                }\n            }\n            else if (options.interactivity.detectsOn === Enums_1.InteractivityDetect.parent) {\n                const source = mouseEvent.target;\n                const target = mouseEvent.currentTarget;\n                const canvasEl = container.canvas.element;\n                if (source && target && canvasEl) {\n                    const sourceRect = source.getBoundingClientRect();\n                    const targetRect = target.getBoundingClientRect();\n                    const canvasRect = canvasEl.getBoundingClientRect();\n                    pos = {\n                        x: mouseEvent.offsetX + 2 * sourceRect.left - (targetRect.left + canvasRect.left),\n                        y: mouseEvent.offsetY + 2 * sourceRect.top - (targetRect.top + canvasRect.top),\n                    };\n                }\n                else {\n                    pos = {\n                        x: (_b = mouseEvent.offsetX) !== null && _b !== void 0 ? _b : mouseEvent.clientX,\n                        y: (_c = mouseEvent.offsetY) !== null && _c !== void 0 ? _c : mouseEvent.clientY,\n                    };\n                }\n            }\n            else {\n                if (mouseEvent.target === container.canvas.element) {\n                    pos = {\n                        x: (_d = mouseEvent.offsetX) !== null && _d !== void 0 ? _d : mouseEvent.clientX,\n                        y: (_e = mouseEvent.offsetY) !== null && _e !== void 0 ? _e : mouseEvent.clientY,\n                    };\n                }\n            }\n        }\n        else {\n            this.canPush = e.type !== \"touchmove\";\n            const touchEvent = e;\n            const lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n            const canvasRect = canvas === null || canvas === void 0 ? void 0 : canvas.getBoundingClientRect();\n            pos = {\n                x: lastTouch.clientX - ((_f = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.left) !== null && _f !== void 0 ? _f : 0),\n                y: lastTouch.clientY - ((_g = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.top) !== null && _g !== void 0 ? _g : 0),\n            };\n        }\n        const pxRatio = container.retina.pixelRatio;\n        if (pos) {\n            pos.x *= pxRatio;\n            pos.y *= pxRatio;\n        }\n        container.interactivity.mouse.position = pos;\n        container.interactivity.status = Constants_1.Constants.mouseMoveEvent;\n    }\n    mouseTouchFinish() {\n        const interactivity = this.container.interactivity;\n        if (interactivity === undefined) {\n            return;\n        }\n        const mouse = interactivity.mouse;\n        delete mouse.position;\n        delete mouse.clickPosition;\n        delete mouse.downPosition;\n        interactivity.status = Constants_1.Constants.mouseLeaveEvent;\n        mouse.inside = false;\n        mouse.clicking = false;\n    }\n    mouseTouchClick(e) {\n        const container = this.container;\n        const options = container.actualOptions;\n        const mouse = container.interactivity.mouse;\n        mouse.inside = true;\n        let handled = false;\n        const mousePosition = mouse.position;\n        if (mousePosition === undefined || !options.interactivity.events.onClick.enable) {\n            return;\n        }\n        for (const [, plugin] of container.plugins) {\n            if (plugin.clickPositionValid !== undefined) {\n                handled = plugin.clickPositionValid(mousePosition);\n                if (handled) {\n                    break;\n                }\n            }\n        }\n        if (!handled) {\n            this.doMouseTouchClick(e);\n        }\n        mouse.clicking = false;\n    }\n    doMouseTouchClick(e) {\n        const container = this.container;\n        const options = container.actualOptions;\n        if (this.canPush) {\n            const mousePos = container.interactivity.mouse.position;\n            if (mousePos) {\n                container.interactivity.mouse.clickPosition = {\n                    x: mousePos.x,\n                    y: mousePos.y,\n                };\n            }\n            else {\n                return;\n            }\n            container.interactivity.mouse.clickTime = new Date().getTime();\n            const onClick = options.interactivity.events.onClick;\n            if (onClick.mode instanceof Array) {\n                for (const mode of onClick.mode) {\n                    this.handleClickMode(mode);\n                }\n            }\n            else {\n                this.handleClickMode(onClick.mode);\n            }\n        }\n        if (e.type === \"touchend\") {\n            setTimeout(() => this.mouseTouchFinish(), 500);\n        }\n    }\n    handleClickMode(mode) {\n        const container = this.container;\n        const options = container.actualOptions;\n        const pushNb = options.interactivity.modes.push.quantity;\n        const removeNb = options.interactivity.modes.remove.quantity;\n        switch (mode) {\n            case Enums_1.ClickMode.push: {\n                if (pushNb > 0) {\n                    container.particles.push(pushNb, container.interactivity.mouse);\n                }\n                break;\n            }\n            case Enums_1.ClickMode.remove:\n                container.particles.removeQuantity(removeNb);\n                break;\n            case Enums_1.ClickMode.bubble:\n                container.bubble.clicking = true;\n                break;\n            case Enums_1.ClickMode.repulse:\n                container.repulse.clicking = true;\n                container.repulse.count = 0;\n                for (const particle of container.repulse.particles) {\n                    particle.velocity.setTo(particle.initialVelocity);\n                }\n                container.repulse.particles = [];\n                container.repulse.finish = false;\n                setTimeout(() => {\n                    if (!container.destroyed) {\n                        container.repulse.clicking = false;\n                    }\n                }, options.interactivity.modes.repulse.duration * 1000);\n                break;\n            case Enums_1.ClickMode.attract:\n                container.attract.clicking = true;\n                container.attract.count = 0;\n                for (const particle of container.attract.particles) {\n                    particle.velocity.setTo(particle.initialVelocity);\n                }\n                container.attract.particles = [];\n                container.attract.finish = false;\n                setTimeout(() => {\n                    if (!container.destroyed) {\n                        container.attract.clicking = false;\n                    }\n                }, options.interactivity.modes.attract.duration * 1000);\n                break;\n            case Enums_1.ClickMode.pause:\n                if (container.getAnimationStatus()) {\n                    container.pause();\n                }\n                else {\n                    container.play();\n                }\n                break;\n        }\n        for (const [, plugin] of container.plugins) {\n            if (plugin.handleClickMode) {\n                plugin.handleClickMode(mode);\n            }\n        }\n    }\n}\nexports.EventListeners = EventListeners;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Plugins = void 0;\nconst plugins = [];\nconst presets = new Map();\nconst drawers = new Map();\nconst pathGenerators = new Map();\nclass Plugins {\n    static getPlugin(plugin) {\n        return plugins.find((t) => t.id === plugin);\n    }\n    static addPlugin(plugin) {\n        if (!Plugins.getPlugin(plugin.id)) {\n            plugins.push(plugin);\n        }\n    }\n    static getAvailablePlugins(container) {\n        const res = new Map();\n        for (const plugin of plugins) {\n            if (!plugin.needsPlugin(container.actualOptions)) {\n                continue;\n            }\n            res.set(plugin.id, plugin.getPlugin(container));\n        }\n        return res;\n    }\n    static loadOptions(options, sourceOptions) {\n        for (const plugin of plugins) {\n            plugin.loadOptions(options, sourceOptions);\n        }\n    }\n    static getPreset(preset) {\n        return presets.get(preset);\n    }\n    static addPreset(presetKey, options) {\n        if (!Plugins.getPreset(presetKey)) {\n            presets.set(presetKey, options);\n        }\n    }\n    static addShapeDrawer(type, drawer) {\n        if (!Plugins.getShapeDrawer(type)) {\n            drawers.set(type, drawer);\n        }\n    }\n    static getShapeDrawer(type) {\n        return drawers.get(type);\n    }\n    static getSupportedShapes() {\n        return drawers.keys();\n    }\n    static getPathGenerator(type) {\n        return pathGenerators.get(type);\n    }\n    static addPathGenerator(type, pathGenerator) {\n        if (!Plugins.getPathGenerator(type)) {\n            pathGenerators.set(type, pathGenerator);\n        }\n    }\n}\nexports.Plugins = Plugins;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Point = void 0;\nclass Point {\n    constructor(position, particle) {\n        this.position = position;\n        this.particle = particle;\n    }\n}\nexports.Point = Point;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.QuadTree = void 0;\nconst Rectangle_1 = require(\"./Rectangle\");\nconst Circle_1 = require(\"./Circle\");\nconst CircleWarp_1 = require(\"./CircleWarp\");\nclass QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this.points = [];\n        this.divided = false;\n    }\n    subdivide() {\n        const x = this.rectangle.position.x;\n        const y = this.rectangle.position.y;\n        const w = this.rectangle.size.width;\n        const h = this.rectangle.size.height;\n        const capacity = this.capacity;\n        this.northEast = new QuadTree(new Rectangle_1.Rectangle(x, y, w / 2, h / 2), capacity);\n        this.northWest = new QuadTree(new Rectangle_1.Rectangle(x + w / 2, y, w / 2, h / 2), capacity);\n        this.southEast = new QuadTree(new Rectangle_1.Rectangle(x, y + h / 2, w / 2, h / 2), capacity);\n        this.southWest = new QuadTree(new Rectangle_1.Rectangle(x + w / 2, y + h / 2, w / 2, h / 2), capacity);\n        this.divided = true;\n    }\n    insert(point) {\n        var _a, _b, _c, _d, _e;\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this.points.length < this.capacity) {\n            this.points.push(point);\n            return true;\n        }\n        if (!this.divided) {\n            this.subdivide();\n        }\n        return ((_e = (((_a = this.northEast) === null || _a === void 0 ? void 0 : _a.insert(point)) ||\n            ((_b = this.northWest) === null || _b === void 0 ? void 0 : _b.insert(point)) ||\n            ((_c = this.southEast) === null || _c === void 0 ? void 0 : _c.insert(point)) ||\n            ((_d = this.southWest) === null || _d === void 0 ? void 0 : _d.insert(point)))) !== null && _e !== void 0 ? _e : false);\n    }\n    queryCircle(position, radius) {\n        return this.query(new Circle_1.Circle(position.x, position.y, radius));\n    }\n    queryCircleWarp(position, radius, containerOrSize) {\n        const container = containerOrSize;\n        const size = containerOrSize;\n        return this.query(new CircleWarp_1.CircleWarp(position.x, position.y, radius, container.canvas !== undefined ? container.canvas.size : size));\n    }\n    queryRectangle(position, size) {\n        return this.query(new Rectangle_1.Rectangle(position.x, position.y, size.width, size.height));\n    }\n    query(range, found) {\n        var _a, _b, _c, _d;\n        const res = found !== null && found !== void 0 ? found : [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        else {\n            for (const p of this.points) {\n                if (!range.contains(p.position)) {\n                    continue;\n                }\n                res.push(p.particle);\n            }\n            if (this.divided) {\n                (_a = this.northEast) === null || _a === void 0 ? void 0 : _a.query(range, res);\n                (_b = this.northWest) === null || _b === void 0 ? void 0 : _b.query(range, res);\n                (_c = this.southEast) === null || _c === void 0 ? void 0 : _c.query(range, res);\n                (_d = this.southWest) === null || _d === void 0 ? void 0 : _d.query(range, res);\n            }\n        }\n        return res;\n    }\n}\nexports.QuadTree = QuadTree;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./CanvasUtils\"), exports);\n__exportStar(require(\"./Circle\"), exports);\n__exportStar(require(\"./CircleWarp\"), exports);\n__exportStar(require(\"./ColorUtils\"), exports);\n__exportStar(require(\"./Constants\"), exports);\n__exportStar(require(\"./EventListeners\"), exports);\n__exportStar(require(\"./NumberUtils\"), exports);\n__exportStar(require(\"./Plugins\"), exports);\n__exportStar(require(\"./Point\"), exports);\n__exportStar(require(\"./QuadTree\"), exports);\n__exportStar(require(\"./Range\"), exports);\n__exportStar(require(\"./Rectangle\"), exports);\n__exportStar(require(\"./Utils\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TextDrawer = void 0;\nconst Utils_1 = require(\"../Utils\");\nconst Enums_1 = require(\"../Enums\");\nclass TextDrawer {\n    getSidesCount() {\n        return 12;\n    }\n    init(container) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const options = container.actualOptions;\n            if (Utils_1.Utils.isInArray(Enums_1.ShapeType.char, options.particles.shape.type) ||\n                Utils_1.Utils.isInArray(Enums_1.ShapeType.character, options.particles.shape.type)) {\n                const shapeOptions = ((_a = options.particles.shape.options[Enums_1.ShapeType.character]) !== null && _a !== void 0 ? _a : options.particles.shape.options[Enums_1.ShapeType.char]);\n                if (shapeOptions instanceof Array) {\n                    for (const character of shapeOptions) {\n                        yield Utils_1.Utils.loadFont(character);\n                    }\n                }\n                else {\n                    if (shapeOptions !== undefined) {\n                        yield Utils_1.Utils.loadFont(shapeOptions);\n                    }\n                }\n            }\n        });\n    }\n    draw(context, particle, radius) {\n        const character = particle.shapeData;\n        if (character === undefined) {\n            return;\n        }\n        const textData = character.value;\n        if (textData === undefined) {\n            return;\n        }\n        const textParticle = particle;\n        if (textParticle.text === undefined) {\n            textParticle.text =\n                textData instanceof Array ? Utils_1.Utils.itemFromArray(textData, particle.randomIndexData) : textData;\n        }\n        const text = textParticle.text;\n        const style = character.style;\n        const weight = character.weight;\n        const size = Math.round(radius) * 2;\n        const font = character.font;\n        const fill = particle.fill;\n        const offsetX = (text.length * radius) / 2;\n        context.font = `${style} ${weight} ${size}px \"${font}\"`;\n        const pos = {\n            x: -offsetX,\n            y: radius / 2,\n        };\n        if (fill) {\n            context.fillText(text, pos.x, pos.y);\n        }\n        else {\n            context.strokeText(text, pos.x, pos.y);\n        }\n    }\n}\nexports.TextDrawer = TextDrawer;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ImageDrawer = void 0;\nconst Utils_1 = require(\"../Utils\");\nconst Enums_1 = require(\"../Enums\");\nclass ImageDrawer {\n    constructor() {\n        this.images = [];\n    }\n    getSidesCount() {\n        return 12;\n    }\n    getImages(container) {\n        const containerImages = this.images.filter((t) => t.id === container.id);\n        if (!containerImages.length) {\n            this.images.push({\n                id: container.id,\n                images: [],\n            });\n            return this.getImages(container);\n        }\n        else {\n            return containerImages[0];\n        }\n    }\n    addImage(container, image) {\n        const containerImages = this.getImages(container);\n        containerImages === null || containerImages === void 0 ? void 0 : containerImages.images.push(image);\n    }\n    init(container) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const options = container.actualOptions;\n            const shapeOptions = options.particles.shape;\n            if (!Utils_1.Utils.isInArray(Enums_1.ShapeType.image, shapeOptions.type) &&\n                !Utils_1.Utils.isInArray(Enums_1.ShapeType.images, shapeOptions.type)) {\n                return;\n            }\n            const imageOptions = (_a = shapeOptions.options[Enums_1.ShapeType.images]) !== null && _a !== void 0 ? _a : shapeOptions.options[Enums_1.ShapeType.image];\n            if (imageOptions instanceof Array) {\n                for (const optionsImage of imageOptions) {\n                    yield this.loadImageShape(container, optionsImage);\n                }\n            }\n            else {\n                yield this.loadImageShape(container, imageOptions);\n            }\n        });\n    }\n    destroy() {\n        this.images = [];\n    }\n    loadImageShape(container, imageShape) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const image = imageShape.replaceColor\n                    ? yield Utils_1.Utils.downloadSvgImage(imageShape.src)\n                    : yield Utils_1.Utils.loadImage(imageShape.src);\n                if (image) {\n                    this.addImage(container, image);\n                }\n            }\n            catch (_a) {\n                console.warn(`tsParticles error - ${imageShape.src} not found`);\n            }\n        });\n    }\n    draw(context, particle, radius, opacity) {\n        var _a, _b;\n        if (!context) {\n            return;\n        }\n        const image = particle.image;\n        const element = (_a = image === null || image === void 0 ? void 0 : image.data) === null || _a === void 0 ? void 0 : _a.element;\n        if (!element) {\n            return;\n        }\n        const ratio = (_b = image === null || image === void 0 ? void 0 : image.ratio) !== null && _b !== void 0 ? _b : 1;\n        const pos = {\n            x: -radius,\n            y: -radius,\n        };\n        if (!(image === null || image === void 0 ? void 0 : image.data.svgData) || !(image === null || image === void 0 ? void 0 : image.replaceColor)) {\n            context.globalAlpha = opacity;\n        }\n        context.drawImage(element, pos.x, pos.y, radius * 2, (radius * 2) / ratio);\n        if (!(image === null || image === void 0 ? void 0 : image.data.svgData) || !(image === null || image === void 0 ? void 0 : image.replaceColor)) {\n            context.globalAlpha = 1;\n        }\n    }\n}\nexports.ImageDrawer = ImageDrawer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LineDrawer = void 0;\nclass LineDrawer {\n    getSidesCount() {\n        return 1;\n    }\n    draw(context, particle, radius) {\n        context.moveTo(0, -radius / 2);\n        context.lineTo(0, radius / 2);\n    }\n}\nexports.LineDrawer = LineDrawer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CircleDrawer = void 0;\nclass CircleDrawer {\n    getSidesCount() {\n        return 12;\n    }\n    draw(context, particle, radius) {\n        context.arc(0, 0, radius, 0, Math.PI * 2, false);\n    }\n}\nexports.CircleDrawer = CircleDrawer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PolygonDrawerBase = void 0;\nclass PolygonDrawerBase {\n    getSidesCount(particle) {\n        var _a, _b;\n        const polygon = particle.shapeData;\n        return (_b = (_a = polygon === null || polygon === void 0 ? void 0 : polygon.sides) !== null && _a !== void 0 ? _a : polygon === null || polygon === void 0 ? void 0 : polygon.nb_sides) !== null && _b !== void 0 ? _b : 5;\n    }\n    draw(context, particle, radius) {\n        const start = this.getCenter(particle, radius);\n        const side = this.getSidesData(particle, radius);\n        const sideCount = side.count.numerator * side.count.denominator;\n        const decimalSides = side.count.numerator / side.count.denominator;\n        const interiorAngleDegrees = (180 * (decimalSides - 2)) / decimalSides;\n        const interiorAngle = Math.PI - (Math.PI * interiorAngleDegrees) / 180;\n        if (!context) {\n            return;\n        }\n        context.beginPath();\n        context.translate(start.x, start.y);\n        context.moveTo(0, 0);\n        for (let i = 0; i < sideCount; i++) {\n            context.lineTo(side.length, 0);\n            context.translate(side.length, 0);\n            context.rotate(interiorAngle);\n        }\n    }\n}\nexports.PolygonDrawerBase = PolygonDrawerBase;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TriangleDrawer = void 0;\nconst PolygonDrawerBase_1 = require(\"./PolygonDrawerBase\");\nclass TriangleDrawer extends PolygonDrawerBase_1.PolygonDrawerBase {\n    getSidesCount() {\n        return 3;\n    }\n    getSidesData(particle, radius) {\n        return {\n            count: {\n                denominator: 2,\n                numerator: 3,\n            },\n            length: radius * 2,\n        };\n    }\n    getCenter(particle, radius) {\n        return {\n            x: -radius,\n            y: radius / 1.66,\n        };\n    }\n}\nexports.TriangleDrawer = TriangleDrawer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StarDrawer = void 0;\nclass StarDrawer {\n    getSidesCount(particle) {\n        var _a, _b;\n        const star = particle.shapeData;\n        return (_b = (_a = star === null || star === void 0 ? void 0 : star.sides) !== null && _a !== void 0 ? _a : star === null || star === void 0 ? void 0 : star.nb_sides) !== null && _b !== void 0 ? _b : 5;\n    }\n    draw(context, particle, radius) {\n        var _a;\n        const star = particle.shapeData;\n        const sides = this.getSidesCount(particle);\n        const inset = (_a = star === null || star === void 0 ? void 0 : star.inset) !== null && _a !== void 0 ? _a : 2;\n        context.moveTo(0, 0 - radius);\n        for (let i = 0; i < sides; i++) {\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius * inset);\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius);\n        }\n    }\n}\nexports.StarDrawer = StarDrawer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PolygonDrawer = void 0;\nconst PolygonDrawerBase_1 = require(\"./PolygonDrawerBase\");\nclass PolygonDrawer extends PolygonDrawerBase_1.PolygonDrawerBase {\n    getSidesData(particle, radius) {\n        var _a, _b;\n        const polygon = particle.shapeData;\n        const sides = (_b = (_a = polygon === null || polygon === void 0 ? void 0 : polygon.sides) !== null && _a !== void 0 ? _a : polygon === null || polygon === void 0 ? void 0 : polygon.nb_sides) !== null && _b !== void 0 ? _b : 5;\n        return {\n            count: {\n                denominator: 1,\n                numerator: sides,\n            },\n            length: (radius * 2.66) / (sides / 3),\n        };\n    }\n    getCenter(particle, radius) {\n        const sides = this.getSidesCount(particle);\n        return {\n            x: -radius / (sides / 3.5),\n            y: -radius / (2.66 / 3.5),\n        };\n    }\n}\nexports.PolygonDrawer = PolygonDrawer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Canvas = void 0;\nconst Utils_1 = require(\"../Utils\");\nclass Canvas {\n    constructor(container) {\n        this.container = container;\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this.context = null;\n        this.generatedCanvas = false;\n    }\n    init() {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n        this.resize();\n        const options = this.container.actualOptions;\n        const element = this.element;\n        if (element) {\n            if (options.fullScreen.enable) {\n                this.originalStyle = Utils_1.Utils.deepExtend({}, element.style);\n                element.style.position = \"fixed\";\n                element.style.zIndex = options.fullScreen.zIndex.toString(10);\n                element.style.top = \"0\";\n                element.style.left = \"0\";\n                element.style.width = \"100%\";\n                element.style.height = \"100%\";\n            }\n            else {\n                element.style.position = (_b = (_a = this.originalStyle) === null || _a === void 0 ? void 0 : _a.position) !== null && _b !== void 0 ? _b : \"\";\n                element.style.zIndex = (_d = (_c = this.originalStyle) === null || _c === void 0 ? void 0 : _c.zIndex) !== null && _d !== void 0 ? _d : \"\";\n                element.style.top = (_f = (_e = this.originalStyle) === null || _e === void 0 ? void 0 : _e.top) !== null && _f !== void 0 ? _f : \"\";\n                element.style.left = (_h = (_g = this.originalStyle) === null || _g === void 0 ? void 0 : _g.left) !== null && _h !== void 0 ? _h : \"\";\n                element.style.width = (_k = (_j = this.originalStyle) === null || _j === void 0 ? void 0 : _j.width) !== null && _k !== void 0 ? _k : \"\";\n                element.style.height = (_m = (_l = this.originalStyle) === null || _l === void 0 ? void 0 : _l.height) !== null && _m !== void 0 ? _m : \"\";\n            }\n        }\n        const cover = options.backgroundMask.cover;\n        const color = cover.color;\n        const trail = options.particles.move.trail;\n        const coverRgb = Utils_1.ColorUtils.colorToRgb(color);\n        this.coverColor =\n            coverRgb !== undefined\n                ? {\n                    r: coverRgb.r,\n                    g: coverRgb.g,\n                    b: coverRgb.b,\n                    a: cover.opacity,\n                }\n                : undefined;\n        this.trailFillColor = Utils_1.ColorUtils.colorToRgb(trail.fillColor);\n        this.initBackground();\n        this.paint();\n    }\n    loadCanvas(canvas, generatedCanvas) {\n        var _a;\n        if (!canvas.className) {\n            canvas.className = Utils_1.Constants.canvasClass;\n        }\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this.generatedCanvas = generatedCanvas !== null && generatedCanvas !== void 0 ? generatedCanvas : this.generatedCanvas;\n        this.element = canvas;\n        this.originalStyle = Utils_1.Utils.deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this.context = this.element.getContext(\"2d\");\n        this.container.retina.init();\n        this.initBackground();\n    }\n    destroy() {\n        var _a;\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        if (this.context) {\n            Utils_1.CanvasUtils.clear(this.context, this.size);\n        }\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        if (!this.context) {\n            return;\n        }\n        if (options.backgroundMask.enable && options.backgroundMask.cover && this.coverColor) {\n            Utils_1.CanvasUtils.clear(this.context, this.size);\n            this.paintBase(Utils_1.ColorUtils.getStyleFromRgb(this.coverColor, this.coverColor.a));\n        }\n        else {\n            this.paintBase();\n        }\n    }\n    clear() {\n        const options = this.container.actualOptions;\n        const trail = options.particles.move.trail;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n            this.paintBase(Utils_1.ColorUtils.getStyleFromRgb(this.trailFillColor, 1 / trail.length));\n        }\n        else if (this.context) {\n            Utils_1.CanvasUtils.clear(this.context, this.size);\n        }\n    }\n    windowResize() {\n        if (!this.element) {\n            return;\n        }\n        const container = this.container;\n        container.canvas.resize();\n        container.actualOptions.setResponsive(this.size.width, container.retina.pixelRatio, container.options);\n        container.particles.setDensity();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.resize !== undefined) {\n                plugin.resize();\n            }\n        }\n    }\n    resize() {\n        if (!this.element) {\n            return;\n        }\n        const container = this.container;\n        const pxRatio = container.retina.pixelRatio;\n        const size = container.canvas.size;\n        const oldSize = {\n            width: size.width,\n            height: size.height,\n        };\n        size.width = this.element.offsetWidth * pxRatio;\n        size.height = this.element.offsetHeight * pxRatio;\n        this.element.width = size.width;\n        this.element.height = size.height;\n        this.resizeFactor = {\n            width: size.width / oldSize.width,\n            height: size.height / oldSize.height,\n        };\n    }\n    drawConnectLine(p1, p2) {\n        var _a;\n        const ctx = this.context;\n        if (!ctx) {\n            return;\n        }\n        const lineStyle = this.lineStyle(p1, p2);\n        if (!lineStyle) {\n            return;\n        }\n        const pos1 = p1.getPosition();\n        const pos2 = p2.getPosition();\n        Utils_1.CanvasUtils.drawConnectLine(ctx, (_a = p1.linksWidth) !== null && _a !== void 0 ? _a : this.container.retina.linksWidth, lineStyle, pos1, pos2);\n    }\n    drawGrabLine(particle, lineColor, opacity, mousePos) {\n        var _a;\n        const container = this.container;\n        const ctx = container.canvas.context;\n        if (!ctx) {\n            return;\n        }\n        const beginPos = particle.getPosition();\n        Utils_1.CanvasUtils.drawGrabLine(ctx, (_a = particle.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth, beginPos, mousePos, lineColor, opacity);\n    }\n    drawParticleShadow(particle, mousePos) {\n        if (!this.context) {\n            return;\n        }\n        Utils_1.CanvasUtils.drawParticleShadow(this.container, this.context, particle, mousePos);\n    }\n    drawLinkTriangle(p1, link1, link2) {\n        var _a;\n        const container = this.container;\n        const options = container.actualOptions;\n        const p2 = link1.destination;\n        const p3 = link2.destination;\n        const triangleOptions = p1.options.links.triangles;\n        const opacityTriangle = (_a = triangleOptions.opacity) !== null && _a !== void 0 ? _a : (link1.opacity + link2.opacity) / 2;\n        if (opacityTriangle <= 0) {\n            return;\n        }\n        const pos1 = p1.getPosition();\n        const pos2 = p2.getPosition();\n        const pos3 = p3.getPosition();\n        const ctx = this.context;\n        if (!ctx) {\n            return;\n        }\n        if (Utils_1.NumberUtils.getDistance(pos1, pos2) > container.retina.linksDistance ||\n            Utils_1.NumberUtils.getDistance(pos3, pos2) > container.retina.linksDistance ||\n            Utils_1.NumberUtils.getDistance(pos3, pos1) > container.retina.linksDistance) {\n            return;\n        }\n        let colorTriangle = Utils_1.ColorUtils.colorToRgb(triangleOptions.color);\n        if (!colorTriangle) {\n            const linksOptions = p1.options.links;\n            const linkColor = linksOptions.id !== undefined\n                ? container.particles.linksColors.get(linksOptions.id)\n                : container.particles.linksColor;\n            colorTriangle = Utils_1.ColorUtils.getLinkColor(p1, p2, linkColor);\n        }\n        if (!colorTriangle) {\n            return;\n        }\n        Utils_1.CanvasUtils.drawLinkTriangle(ctx, pos1, pos2, pos3, options.backgroundMask.enable, options.backgroundMask.composite, colorTriangle, opacityTriangle);\n    }\n    drawLinkLine(p1, link) {\n        var _a, _b;\n        const container = this.container;\n        const options = container.actualOptions;\n        const p2 = link.destination;\n        let opacity = link.opacity;\n        const pos1 = p1.getPosition();\n        const pos2 = p2.getPosition();\n        const ctx = this.context;\n        if (!ctx) {\n            return;\n        }\n        let colorLine;\n        const twinkle = p1.options.twinkle.lines;\n        if (twinkle.enable) {\n            const twinkleFreq = twinkle.frequency;\n            const twinkleRgb = Utils_1.ColorUtils.colorToRgb(twinkle.color);\n            const twinkling = Math.random() < twinkleFreq;\n            if (twinkling && twinkleRgb !== undefined) {\n                colorLine = twinkleRgb;\n                opacity = twinkle.opacity;\n            }\n        }\n        if (!colorLine) {\n            const linksOptions = p1.options.links;\n            const linkColor = linksOptions.id !== undefined\n                ? container.particles.linksColors.get(linksOptions.id)\n                : container.particles.linksColor;\n            colorLine = Utils_1.ColorUtils.getLinkColor(p1, p2, linkColor);\n        }\n        if (!colorLine) {\n            return;\n        }\n        const width = (_a = p1.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth;\n        const maxDistance = (_b = p1.linksDistance) !== null && _b !== void 0 ? _b : container.retina.linksDistance;\n        Utils_1.CanvasUtils.drawLinkLine(ctx, width, pos1, pos2, maxDistance, container.canvas.size, p1.options.links.warp, options.backgroundMask.enable, options.backgroundMask.composite, colorLine, opacity, p1.options.links.shadow);\n    }\n    drawParticle(particle, delta) {\n        var _a, _b, _c, _d;\n        if (((_a = particle.image) === null || _a === void 0 ? void 0 : _a.loaded) === false || particle.spawning || particle.destroyed) {\n            return;\n        }\n        const pfColor = particle.getFillColor();\n        const psColor = (_b = particle.getStrokeColor()) !== null && _b !== void 0 ? _b : pfColor;\n        if (!pfColor && !psColor) {\n            return;\n        }\n        const options = this.container.actualOptions;\n        const pOptions = particle.options;\n        const twinkle = pOptions.twinkle.particles;\n        const twinkleFreq = twinkle.frequency;\n        const twinkleRgb = Utils_1.ColorUtils.colorToRgb(twinkle.color);\n        const twinkling = twinkle.enable && Math.random() < twinkleFreq;\n        const radius = particle.getRadius();\n        const opacity = twinkling ? twinkle.opacity : (_c = particle.bubble.opacity) !== null && _c !== void 0 ? _c : particle.opacity.value;\n        const infectionStage = particle.infecter.infectionStage;\n        const infection = options.infection;\n        const infectionStages = infection.stages;\n        const infectionColor = infectionStage !== undefined ? infectionStages[infectionStage].color : undefined;\n        const infectionRgb = Utils_1.ColorUtils.colorToRgb(infectionColor);\n        const fColor = twinkling && twinkleRgb !== undefined\n            ? twinkleRgb\n            : infectionRgb !== null && infectionRgb !== void 0 ? infectionRgb : (pfColor ? Utils_1.ColorUtils.hslToRgb(pfColor) : undefined);\n        const sColor = twinkling && twinkleRgb !== undefined\n            ? twinkleRgb\n            : infectionRgb !== null && infectionRgb !== void 0 ? infectionRgb : (psColor ? Utils_1.ColorUtils.hslToRgb(psColor) : undefined);\n        const fillColorValue = fColor !== undefined ? Utils_1.ColorUtils.getStyleFromRgb(fColor, opacity) : undefined;\n        if (!this.context || (!fillColorValue && !sColor)) {\n            return;\n        }\n        const strokeColorValue = sColor !== undefined\n            ? Utils_1.ColorUtils.getStyleFromRgb(sColor, (_d = particle.stroke.opacity) !== null && _d !== void 0 ? _d : opacity)\n            : fillColorValue;\n        this.drawParticleLinks(particle);\n        if (radius > 0) {\n            Utils_1.CanvasUtils.drawParticle(this.container, this.context, particle, delta, fillColorValue, strokeColorValue, options.backgroundMask.enable, options.backgroundMask.composite, radius, opacity, particle.options.shadow);\n        }\n    }\n    drawParticleLinks(particle) {\n        if (!this.context) {\n            return;\n        }\n        const container = this.container;\n        const particles = container.particles;\n        const pOptions = particle.options;\n        if (particle.links.length > 0) {\n            this.context.save();\n            const p1Links = particle.links.filter((l) => {\n                const linkFreq = container.particles.getLinkFrequency(particle, l.destination);\n                return linkFreq <= pOptions.links.frequency;\n            });\n            for (const link of p1Links) {\n                const p2 = link.destination;\n                if (pOptions.links.triangles.enable) {\n                    const links = p1Links.map((l) => l.destination);\n                    const vertices = p2.links.filter((t) => {\n                        const linkFreq = container.particles.getLinkFrequency(p2, t.destination);\n                        return linkFreq <= p2.options.links.frequency && links.indexOf(t.destination) >= 0;\n                    });\n                    if (vertices.length) {\n                        for (const vertex of vertices) {\n                            const p3 = vertex.destination;\n                            const triangleFreq = particles.getTriangleFrequency(particle, p2, p3);\n                            if (triangleFreq > pOptions.links.triangles.frequency) {\n                                continue;\n                            }\n                            this.drawLinkTriangle(particle, link, vertex);\n                        }\n                    }\n                }\n                if (link.opacity > 0 && container.retina.linksWidth > 0) {\n                    this.drawLinkLine(particle, link);\n                }\n            }\n            this.context.restore();\n        }\n    }\n    drawPlugin(plugin, delta) {\n        if (!this.context) {\n            return;\n        }\n        Utils_1.CanvasUtils.drawPlugin(this.context, plugin, delta);\n    }\n    drawLight(mousePos) {\n        if (!this.context) {\n            return;\n        }\n        Utils_1.CanvasUtils.drawLight(this.container, this.context, mousePos);\n    }\n    paintBase(baseColor) {\n        if (!this.context) {\n            return;\n        }\n        Utils_1.CanvasUtils.paintBase(this.context, this.size, baseColor);\n    }\n    lineStyle(p1, p2) {\n        if (!this.context) {\n            return;\n        }\n        const options = this.container.actualOptions;\n        const connectOptions = options.interactivity.modes.connect;\n        return Utils_1.CanvasUtils.gradient(this.context, p1, p2, connectOptions.links.opacity);\n    }\n    initBackground() {\n        const options = this.container.actualOptions;\n        const background = options.background;\n        const element = this.element;\n        const elementStyle = element === null || element === void 0 ? void 0 : element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = Utils_1.ColorUtils.colorToRgb(background.color);\n            if (color) {\n                elementStyle.backgroundColor = Utils_1.ColorUtils.getStyleFromRgb(color, background.opacity);\n            }\n            else {\n                elementStyle.backgroundColor = \"\";\n            }\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n}\nexports.Canvas = Canvas;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Updater = void 0;\nconst Utils_1 = require(\"../../Utils\");\nconst Enums_1 = require(\"../../Enums\");\nconst OutModeDirection_1 = require(\"../../Enums/Directions/OutModeDirection\");\nfunction bounceHorizontal(data) {\n    if (data.outMode === Enums_1.OutMode.bounce ||\n        data.outMode === Enums_1.OutMode.bounceHorizontal ||\n        data.outMode === \"bounceHorizontal\") {\n        const velocity = data.particle.velocity.x;\n        let bounced = false;\n        if ((data.direction === OutModeDirection_1.OutModeDirection.right && data.bounds.right >= data.canvasSize.width && velocity > 0) ||\n            (data.direction === OutModeDirection_1.OutModeDirection.left && data.bounds.left <= 0 && velocity < 0)) {\n            const newVelocity = Utils_1.NumberUtils.getValue(data.particle.options.bounce.horizontal);\n            data.particle.velocity.x *= -newVelocity;\n            bounced = true;\n        }\n        if (bounced) {\n            const minPos = data.offset.x + data.size;\n            if (data.bounds.right >= data.canvasSize.width) {\n                data.particle.position.x = data.canvasSize.width - minPos;\n            }\n            else if (data.bounds.left <= 0) {\n                data.particle.position.x = minPos;\n            }\n        }\n    }\n}\nfunction bounceVertical(data) {\n    if (data.outMode === Enums_1.OutMode.bounce ||\n        data.outMode === Enums_1.OutMode.bounceVertical ||\n        data.outMode === \"bounceVertical\") {\n        const velocity = data.particle.velocity.y;\n        let bounced = false;\n        if ((data.direction === OutModeDirection_1.OutModeDirection.bottom &&\n            data.bounds.bottom >= data.canvasSize.height &&\n            velocity > 0) ||\n            (data.direction === OutModeDirection_1.OutModeDirection.top && data.bounds.top <= 0 && velocity < 0)) {\n            const newVelocity = Utils_1.NumberUtils.getValue(data.particle.options.bounce.vertical);\n            data.particle.velocity.y *= -newVelocity;\n            bounced = true;\n        }\n        if (bounced) {\n            const minPos = data.offset.y + data.size;\n            if (data.bounds.bottom >= data.canvasSize.height) {\n                data.particle.position.y = data.canvasSize.height - minPos;\n            }\n            else if (data.bounds.top <= 0) {\n                data.particle.position.y = minPos;\n            }\n        }\n    }\n}\nfunction checkDestroy(particle, destroy, value, minValue, maxValue) {\n    switch (destroy) {\n        case Enums_1.DestroyType.max:\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case Enums_1.DestroyType.min:\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nclass Updater {\n    constructor(container, particle) {\n        this.container = container;\n        this.particle = particle;\n    }\n    update(delta) {\n        if (this.particle.destroyed) {\n            return;\n        }\n        this.updateLife(delta);\n        if (this.particle.destroyed || this.particle.spawning) {\n            return;\n        }\n        this.updateOpacity(delta);\n        this.updateSize(delta);\n        this.updateAngle(delta);\n        this.updateColor(delta);\n        this.updateStrokeColor(delta);\n        this.updateOutModes(delta);\n    }\n    updateLife(delta) {\n        const particle = this.particle;\n        let justSpawned = false;\n        if (particle.spawning) {\n            particle.lifeDelayTime += delta.value;\n            if (particle.lifeDelayTime >= particle.lifeDelay) {\n                justSpawned = true;\n                particle.spawning = false;\n                particle.lifeDelayTime = 0;\n                particle.lifeTime = 0;\n            }\n        }\n        if (particle.lifeDuration === -1) {\n            return;\n        }\n        if (!particle.spawning) {\n            if (justSpawned) {\n                particle.lifeTime = 0;\n            }\n            else {\n                particle.lifeTime += delta.value;\n            }\n            if (particle.lifeTime >= particle.lifeDuration) {\n                particle.lifeTime = 0;\n                if (particle.livesRemaining > 0) {\n                    particle.livesRemaining--;\n                }\n                if (particle.livesRemaining === 0) {\n                    particle.destroy();\n                    return;\n                }\n                const canvasSize = this.container.canvas.size;\n                particle.position.x = Utils_1.NumberUtils.randomInRange(Utils_1.NumberUtils.setRangeValue(0, canvasSize.width));\n                particle.position.y = Utils_1.NumberUtils.randomInRange(Utils_1.NumberUtils.setRangeValue(0, canvasSize.height));\n                particle.spawning = true;\n                particle.lifeDelayTime = 0;\n                particle.lifeTime = 0;\n                particle.reset();\n                const lifeOptions = particle.options.life;\n                particle.lifeDelay = Utils_1.NumberUtils.getValue(lifeOptions.delay) * 1000;\n                particle.lifeDuration = Utils_1.NumberUtils.getValue(lifeOptions.duration) * 1000;\n            }\n        }\n    }\n    updateOpacity(delta) {\n        var _a, _b;\n        const particle = this.particle;\n        const opacityOpt = particle.options.opacity;\n        const opacityAnim = opacityOpt.animation;\n        const minValue = Utils_1.NumberUtils.getRangeMin(opacityOpt.value);\n        const maxValue = Utils_1.NumberUtils.getRangeMax(opacityOpt.value);\n        if (!particle.destroyed &&\n            opacityAnim.enable &&\n            (opacityAnim.count <= 0 || particle.loops.size < opacityAnim.count)) {\n            switch (particle.opacity.status) {\n                case Enums_1.AnimationStatus.increasing:\n                    if (particle.opacity.value >= maxValue) {\n                        particle.opacity.status = Enums_1.AnimationStatus.decreasing;\n                        particle.loops.opacity++;\n                    }\n                    else {\n                        particle.opacity.value += ((_a = particle.opacity.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor;\n                    }\n                    break;\n                case Enums_1.AnimationStatus.decreasing:\n                    if (particle.opacity.value <= minValue) {\n                        particle.opacity.status = Enums_1.AnimationStatus.increasing;\n                        particle.loops.opacity++;\n                    }\n                    else {\n                        particle.opacity.value -= ((_b = particle.opacity.velocity) !== null && _b !== void 0 ? _b : 0) * delta.factor;\n                    }\n                    break;\n            }\n            checkDestroy(particle, opacityAnim.destroy, particle.opacity.value, minValue, maxValue);\n            if (!particle.destroyed) {\n                particle.opacity.value = Utils_1.NumberUtils.clamp(particle.opacity.value, minValue, maxValue);\n            }\n        }\n    }\n    updateSize(delta) {\n        var _a;\n        const container = this.container;\n        const particle = this.particle;\n        const sizeOpt = particle.options.size;\n        const sizeAnim = sizeOpt.animation;\n        const sizeVelocity = ((_a = particle.size.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor;\n        const minValue = Utils_1.NumberUtils.getRangeMin(sizeOpt.value) * container.retina.pixelRatio;\n        const maxValue = Utils_1.NumberUtils.getRangeMax(sizeOpt.value) * container.retina.pixelRatio;\n        if (!particle.destroyed && sizeAnim.enable && (sizeAnim.count <= 0 || particle.loops.size < sizeAnim.count)) {\n            switch (particle.size.status) {\n                case Enums_1.AnimationStatus.increasing:\n                    if (particle.size.value >= maxValue) {\n                        particle.size.status = Enums_1.AnimationStatus.decreasing;\n                        particle.loops.size++;\n                    }\n                    else {\n                        particle.size.value += sizeVelocity;\n                    }\n                    break;\n                case Enums_1.AnimationStatus.decreasing:\n                    if (particle.size.value <= minValue) {\n                        particle.size.status = Enums_1.AnimationStatus.increasing;\n                        particle.loops.size++;\n                    }\n                    else {\n                        particle.size.value -= sizeVelocity;\n                    }\n            }\n            checkDestroy(particle, sizeAnim.destroy, particle.size.value, minValue, maxValue);\n            if (!particle.destroyed) {\n                particle.size.value = Utils_1.NumberUtils.clamp(particle.size.value, minValue, maxValue);\n            }\n        }\n    }\n    updateAngle(delta) {\n        var _a;\n        const particle = this.particle;\n        const rotate = particle.options.rotate;\n        const rotateAnimation = rotate.animation;\n        const speed = ((_a = particle.rotate.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor;\n        const max = 2 * Math.PI;\n        if (rotateAnimation.enable) {\n            switch (particle.rotate.status) {\n                case Enums_1.AnimationStatus.increasing:\n                    particle.rotate.value += speed;\n                    if (particle.rotate.value > max) {\n                        particle.rotate.value -= max;\n                    }\n                    break;\n                case Enums_1.AnimationStatus.decreasing:\n                default:\n                    particle.rotate.value -= speed;\n                    if (particle.rotate.value < 0) {\n                        particle.rotate.value += max;\n                    }\n                    break;\n            }\n        }\n    }\n    updateColor(delta) {\n        var _a, _b, _c;\n        const particle = this.particle;\n        const animationOptions = particle.options.color.animation;\n        if (((_a = particle.color) === null || _a === void 0 ? void 0 : _a.h) !== undefined) {\n            this.updateColorValue(particle, delta, particle.color.h, animationOptions.h, 360, false);\n        }\n        if (((_b = particle.color) === null || _b === void 0 ? void 0 : _b.s) !== undefined) {\n            this.updateColorValue(particle, delta, particle.color.s, animationOptions.s, 100, true);\n        }\n        if (((_c = particle.color) === null || _c === void 0 ? void 0 : _c.l) !== undefined) {\n            this.updateColorValue(particle, delta, particle.color.l, animationOptions.l, 100, true);\n        }\n    }\n    updateStrokeColor(delta) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n        const particle = this.particle;\n        if (!particle.stroke.color) {\n            return;\n        }\n        const animationOptions = particle.stroke.color.animation;\n        const valueAnimations = animationOptions;\n        if (valueAnimations.enable !== undefined) {\n            const hue = (_b = (_a = particle.strokeColor) === null || _a === void 0 ? void 0 : _a.h) !== null && _b !== void 0 ? _b : (_c = particle.color) === null || _c === void 0 ? void 0 : _c.h;\n            if (hue) {\n                this.updateColorValue(particle, delta, hue, valueAnimations, 360, false);\n            }\n        }\n        else {\n            const hslAnimations = animationOptions;\n            const h = (_e = (_d = particle.strokeColor) === null || _d === void 0 ? void 0 : _d.h) !== null && _e !== void 0 ? _e : (_f = particle.color) === null || _f === void 0 ? void 0 : _f.h;\n            if (h) {\n                this.updateColorValue(particle, delta, h, hslAnimations.h, 360, false);\n            }\n            const s = (_h = (_g = particle.strokeColor) === null || _g === void 0 ? void 0 : _g.s) !== null && _h !== void 0 ? _h : (_j = particle.color) === null || _j === void 0 ? void 0 : _j.s;\n            if (s) {\n                this.updateColorValue(particle, delta, s, hslAnimations.s, 100, true);\n            }\n            const l = (_l = (_k = particle.strokeColor) === null || _k === void 0 ? void 0 : _k.l) !== null && _l !== void 0 ? _l : (_m = particle.color) === null || _m === void 0 ? void 0 : _m.l;\n            if (l) {\n                this.updateColorValue(particle, delta, l, hslAnimations.l, 100, true);\n            }\n        }\n    }\n    updateColorValue(particle, delta, value, valueAnimation, max, decrease) {\n        var _a;\n        const colorValue = value;\n        if (!colorValue || !valueAnimation.enable) {\n            return;\n        }\n        const offset = Utils_1.NumberUtils.randomInRange(valueAnimation.offset);\n        const velocity = ((_a = value.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor + offset * 3.6;\n        if (!decrease || colorValue.status === Enums_1.AnimationStatus.increasing) {\n            colorValue.value += velocity;\n            if (decrease && colorValue.value > max) {\n                colorValue.status = Enums_1.AnimationStatus.decreasing;\n                colorValue.value -= colorValue.value % max;\n            }\n        }\n        else {\n            colorValue.value -= velocity;\n            if (colorValue.value < 0) {\n                colorValue.status = Enums_1.AnimationStatus.increasing;\n                colorValue.value += colorValue.value;\n            }\n        }\n        if (colorValue.value > max) {\n            colorValue.value %= max;\n        }\n    }\n    updateOutModes(delta) {\n        var _a, _b, _c, _d;\n        const outModes = this.particle.options.move.outModes;\n        this.updateOutMode(delta, (_a = outModes.bottom) !== null && _a !== void 0 ? _a : outModes.default, OutModeDirection_1.OutModeDirection.bottom);\n        this.updateOutMode(delta, (_b = outModes.left) !== null && _b !== void 0 ? _b : outModes.default, OutModeDirection_1.OutModeDirection.left);\n        this.updateOutMode(delta, (_c = outModes.right) !== null && _c !== void 0 ? _c : outModes.default, OutModeDirection_1.OutModeDirection.right);\n        this.updateOutMode(delta, (_d = outModes.top) !== null && _d !== void 0 ? _d : outModes.default, OutModeDirection_1.OutModeDirection.top);\n    }\n    updateOutMode(delta, outMode, direction) {\n        const container = this.container;\n        const particle = this.particle;\n        switch (outMode) {\n            case Enums_1.OutMode.bounce:\n            case Enums_1.OutMode.bounceVertical:\n            case Enums_1.OutMode.bounceHorizontal:\n            case \"bounceVertical\":\n            case \"bounceHorizontal\":\n                this.updateBounce(delta, direction, outMode);\n                break;\n            case Enums_1.OutMode.destroy:\n                if (!Utils_1.Utils.isPointInside(particle.position, container.canvas.size, particle.getRadius(), direction)) {\n                    container.particles.remove(particle);\n                }\n                break;\n            case Enums_1.OutMode.out:\n                if (!Utils_1.Utils.isPointInside(particle.position, container.canvas.size, particle.getRadius(), direction)) {\n                    this.fixOutOfCanvasPosition(direction);\n                }\n                break;\n            case Enums_1.OutMode.none:\n                this.bounceNone(direction);\n                break;\n        }\n    }\n    fixOutOfCanvasPosition(direction) {\n        const container = this.container;\n        const particle = this.particle;\n        const wrap = particle.options.move.warp;\n        const canvasSize = container.canvas.size;\n        const newPos = {\n            bottom: canvasSize.height + particle.getRadius() - particle.offset.y,\n            left: -particle.getRadius() - particle.offset.x,\n            right: canvasSize.width + particle.getRadius() + particle.offset.x,\n            top: -particle.getRadius() - particle.offset.y,\n        };\n        const sizeValue = particle.getRadius();\n        const nextBounds = Utils_1.Utils.calculateBounds(particle.position, sizeValue);\n        if (direction === OutModeDirection_1.OutModeDirection.right && nextBounds.left > canvasSize.width - particle.offset.x) {\n            particle.position.x = newPos.left;\n            if (!wrap) {\n                particle.position.y = Math.random() * canvasSize.height;\n            }\n        }\n        else if (direction === OutModeDirection_1.OutModeDirection.left && nextBounds.right < -particle.offset.x) {\n            particle.position.x = newPos.right;\n            if (!wrap) {\n                particle.position.y = Math.random() * canvasSize.height;\n            }\n        }\n        if (direction === OutModeDirection_1.OutModeDirection.bottom && nextBounds.top > canvasSize.height - particle.offset.y) {\n            if (!wrap) {\n                particle.position.x = Math.random() * canvasSize.width;\n            }\n            particle.position.y = newPos.top;\n        }\n        else if (direction === OutModeDirection_1.OutModeDirection.top && nextBounds.bottom < -particle.offset.y) {\n            if (!wrap) {\n                particle.position.x = Math.random() * canvasSize.width;\n            }\n            particle.position.y = newPos.bottom;\n        }\n    }\n    updateBounce(delta, direction, outMode) {\n        const container = this.container;\n        const particle = this.particle;\n        let handled = false;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleBounce !== undefined) {\n                handled = plugin.particleBounce(particle, delta, direction);\n            }\n            if (handled) {\n                break;\n            }\n        }\n        if (handled) {\n            return;\n        }\n        const pos = particle.getPosition(), offset = particle.offset, size = particle.getRadius(), bounds = Utils_1.Utils.calculateBounds(pos, size), canvasSize = container.canvas.size;\n        bounceHorizontal({ particle, outMode, direction, bounds, canvasSize, offset, size });\n        bounceVertical({ particle, outMode, direction, bounds, canvasSize, offset, size });\n    }\n    bounceNone(direction) {\n        const particle = this.particle;\n        if (particle.options.move.distance) {\n            return;\n        }\n        const gravityOptions = particle.options.move.gravity;\n        const container = this.container;\n        if (!gravityOptions.enable) {\n            if (!Utils_1.Utils.isPointInside(particle.position, container.canvas.size, particle.getRadius(), direction)) {\n                container.particles.remove(particle);\n            }\n        }\n        else {\n            const position = particle.position;\n            if ((gravityOptions.acceleration >= 0 &&\n                position.y > container.canvas.size.height &&\n                direction === OutModeDirection_1.OutModeDirection.bottom) ||\n                (gravityOptions.acceleration < 0 && position.y < 0 && direction === OutModeDirection_1.OutModeDirection.top)) {\n                container.particles.remove(particle);\n            }\n        }\n    }\n}\nexports.Updater = Updater;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OptionsColor = void 0;\nclass OptionsColor {\n    constructor() {\n        this.value = \"#fff\";\n    }\n    static create(source, data) {\n        const color = source !== null && source !== void 0 ? source : new OptionsColor();\n        if (data !== undefined) {\n            color.load(typeof data === \"string\" ? { value: data } : data);\n        }\n        return color;\n    }\n    load(data) {\n        if ((data === null || data === void 0 ? void 0 : data.value) === undefined) {\n            return;\n        }\n        this.value = data.value;\n    }\n}\nexports.OptionsColor = OptionsColor;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LinksShadow = void 0;\nconst OptionsColor_1 = require(\"../../OptionsColor\");\nclass LinksShadow {\n    constructor() {\n        this.blur = 5;\n        this.color = new OptionsColor_1.OptionsColor();\n        this.enable = false;\n        this.color.value = \"#00ff00\";\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor_1.OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\nexports.LinksShadow = LinksShadow;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LinksTriangle = void 0;\nconst OptionsColor_1 = require(\"../../OptionsColor\");\nclass LinksTriangle {\n    constructor() {\n        this.enable = false;\n        this.frequency = 1;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor_1.OptionsColor.create(this.color, data.color);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\nexports.LinksTriangle = LinksTriangle;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Links = void 0;\nconst LinksShadow_1 = require(\"./LinksShadow\");\nconst LinksTriangle_1 = require(\"./LinksTriangle\");\nconst OptionsColor_1 = require(\"../../OptionsColor\");\nclass Links {\n    constructor() {\n        this.blink = false;\n        this.color = new OptionsColor_1.OptionsColor();\n        this.consent = false;\n        this.distance = 100;\n        this.enable = false;\n        this.frequency = 1;\n        this.opacity = 1;\n        this.shadow = new LinksShadow_1.LinksShadow();\n        this.triangles = new LinksTriangle_1.LinksTriangle();\n        this.width = 1;\n        this.warp = false;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.id !== undefined) {\n            this.id = data.id;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        this.color = OptionsColor_1.OptionsColor.create(this.color, data.color);\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        this.shadow.load(data.shadow);\n        this.triangles.load(data.triangles);\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\nexports.Links = Links;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Attract = void 0;\nclass Attract {\n    constructor() {\n        this.enable = false;\n        this.rotate = {\n            x: 3000,\n            y: 3000,\n        };\n    }\n    get rotateX() {\n        return this.rotate.x;\n    }\n    set rotateX(value) {\n        this.rotate.x = value;\n    }\n    get rotateY() {\n        return this.rotate.y;\n    }\n    set rotateY(value) {\n        this.rotate.y = value;\n    }\n    load(data) {\n        var _a, _b, _c, _d;\n        if (data === undefined) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const rotateX = (_b = (_a = data.rotate) === null || _a === void 0 ? void 0 : _a.x) !== null && _b !== void 0 ? _b : data.rotateX;\n        if (rotateX !== undefined) {\n            this.rotate.x = rotateX;\n        }\n        const rotateY = (_d = (_c = data.rotate) === null || _c === void 0 ? void 0 : _c.y) !== null && _d !== void 0 ? _d : data.rotateY;\n        if (rotateY !== undefined) {\n            this.rotate.y = rotateY;\n        }\n    }\n}\nexports.Attract = Attract;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Trail = void 0;\nconst OptionsColor_1 = require(\"../../OptionsColor\");\nclass Trail {\n    constructor() {\n        this.enable = false;\n        this.length = 10;\n        this.fillColor = new OptionsColor_1.OptionsColor();\n        this.fillColor.value = \"#000000\";\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.fillColor = OptionsColor_1.OptionsColor.create(this.fillColor, data.fillColor);\n        if (data.length !== undefined) {\n            this.length = data.length;\n        }\n    }\n}\nexports.Trail = Trail;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Random = void 0;\nclass Random {\n    constructor() {\n        this.enable = false;\n        this.minimumValue = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.minimumValue !== undefined) {\n            this.minimumValue = data.minimumValue;\n        }\n    }\n}\nexports.Random = Random;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ValueWithRandom = void 0;\nconst Random_1 = require(\"./Random\");\nconst Utils_1 = require(\"../../Utils\");\nclass ValueWithRandom {\n    constructor() {\n        this.random = new Random_1.Random();\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (typeof data.random === \"boolean\") {\n            this.random.enable = data.random;\n        }\n        else {\n            this.random.load(data.random);\n        }\n        if (data.value !== undefined) {\n            this.value = Utils_1.NumberUtils.setRangeValue(data.value, this.random.enable ? this.random.minimumValue : undefined);\n        }\n    }\n}\nexports.ValueWithRandom = ValueWithRandom;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PathDelay = void 0;\nconst ValueWithRandom_1 = require(\"../../../ValueWithRandom\");\nclass PathDelay extends ValueWithRandom_1.ValueWithRandom {\n    constructor() {\n        super();\n    }\n}\nexports.PathDelay = PathDelay;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Path = void 0;\nconst PathDelay_1 = require(\"./PathDelay\");\nclass Path {\n    constructor() {\n        this.clamp = true;\n        this.delay = new PathDelay_1.PathDelay();\n        this.enable = false;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.clamp !== undefined) {\n            this.clamp = data.clamp;\n        }\n        this.delay.load(data.delay);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.generator = data.generator;\n    }\n}\nexports.Path = Path;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MoveAngle = void 0;\nclass MoveAngle {\n    constructor() {\n        this.offset = 45;\n        this.value = 90;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = data.offset;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\nexports.MoveAngle = MoveAngle;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MoveGravity = void 0;\nclass MoveGravity {\n    constructor() {\n        this.acceleration = 9.81;\n        this.enable = false;\n        this.maxSpeed = 50;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = data.acceleration;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n    }\n}\nexports.MoveGravity = MoveGravity;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OutModes = void 0;\nconst Modes_1 = require(\"../../../../Enums/Modes\");\nclass OutModes {\n    constructor() {\n        this.default = Modes_1.OutMode.out;\n    }\n    load(data) {\n        var _a, _b, _c, _d;\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        this.bottom = (_a = data.bottom) !== null && _a !== void 0 ? _a : data.default;\n        this.left = (_b = data.left) !== null && _b !== void 0 ? _b : data.default;\n        this.right = (_c = data.right) !== null && _c !== void 0 ? _c : data.default;\n        this.top = (_d = data.top) !== null && _d !== void 0 ? _d : data.default;\n    }\n}\nexports.OutModes = OutModes;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Move = void 0;\nconst Attract_1 = require(\"./Attract\");\nconst Enums_1 = require(\"../../../../Enums\");\nconst Trail_1 = require(\"./Trail\");\nconst Path_1 = require(\"./Path/Path\");\nconst MoveAngle_1 = require(\"./MoveAngle\");\nconst MoveGravity_1 = require(\"./MoveGravity\");\nconst OutModes_1 = require(\"./OutModes\");\nconst Utils_1 = require(\"../../../../Utils\");\nclass Move {\n    constructor() {\n        this.angle = new MoveAngle_1.MoveAngle();\n        this.attract = new Attract_1.Attract();\n        this.decay = 0;\n        this.distance = 0;\n        this.direction = Enums_1.MoveDirection.none;\n        this.drift = 0;\n        this.enable = false;\n        this.gravity = new MoveGravity_1.MoveGravity();\n        this.path = new Path_1.Path();\n        this.outModes = new OutModes_1.OutModes();\n        this.random = false;\n        this.size = false;\n        this.speed = 2;\n        this.straight = false;\n        this.trail = new Trail_1.Trail();\n        this.vibrate = false;\n        this.warp = false;\n    }\n    get collisions() {\n        return false;\n    }\n    set collisions(value) {\n    }\n    get bounce() {\n        return this.collisions;\n    }\n    set bounce(value) {\n        this.collisions = value;\n    }\n    get out_mode() {\n        return this.outMode;\n    }\n    set out_mode(value) {\n        this.outMode = value;\n    }\n    get outMode() {\n        return this.outModes.default;\n    }\n    set outMode(value) {\n        this.outModes.default = value;\n    }\n    get noise() {\n        return this.path;\n    }\n    set noise(value) {\n        this.path = value;\n    }\n    load(data) {\n        var _a, _b, _c;\n        if (data === undefined) {\n            return;\n        }\n        if (data.angle !== undefined) {\n            if (typeof data.angle === \"number\") {\n                this.angle.value = data.angle;\n            }\n            else {\n                this.angle.load(data.angle);\n            }\n        }\n        this.attract.load(data.attract);\n        if (data.decay !== undefined) {\n            this.decay = data.decay;\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.drift !== undefined) {\n            this.drift = Utils_1.NumberUtils.setRangeValue(data.drift);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.gravity.load(data.gravity);\n        const outMode = (_a = data.outMode) !== null && _a !== void 0 ? _a : data.out_mode;\n        if (data.outModes !== undefined || outMode !== undefined) {\n            if (typeof data.outModes === \"string\" || (data.outModes === undefined && outMode !== undefined)) {\n                this.outModes.load({\n                    default: (_b = data.outModes) !== null && _b !== void 0 ? _b : outMode,\n                });\n            }\n            else {\n                this.outModes.load(data.outModes);\n            }\n        }\n        this.path.load((_c = data.path) !== null && _c !== void 0 ? _c : data.noise);\n        if (data.random !== undefined) {\n            this.random = data.random;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.speed !== undefined) {\n            this.speed = Utils_1.NumberUtils.setRangeValue(data.speed);\n        }\n        if (data.straight !== undefined) {\n            this.straight = data.straight;\n        }\n        this.trail.load(data.trail);\n        if (data.vibrate !== undefined) {\n            this.vibrate = data.vibrate;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\nexports.Move = Move;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Density = void 0;\nclass Density {\n    constructor() {\n        this.enable = false;\n        this.area = 800;\n        this.factor = 1000;\n    }\n    get value_area() {\n        return this.area;\n    }\n    set value_area(value) {\n        this.area = value;\n    }\n    load(data) {\n        var _a;\n        if (data === undefined) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const area = (_a = data.area) !== null && _a !== void 0 ? _a : data.value_area;\n        if (area !== undefined) {\n            this.area = area;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n    }\n}\nexports.Density = Density;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ParticlesNumber = void 0;\nconst Density_1 = require(\"./Density\");\nclass ParticlesNumber {\n    constructor() {\n        this.density = new Density_1.Density();\n        this.limit = 0;\n        this.value = 100;\n    }\n    get max() {\n        return this.limit;\n    }\n    set max(value) {\n        this.limit = value;\n    }\n    load(data) {\n        var _a;\n        if (data === undefined) {\n            return;\n        }\n        this.density.load(data.density);\n        const limit = (_a = data.limit) !== null && _a !== void 0 ? _a : data.max;\n        if (limit !== undefined) {\n            this.limit = limit;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\nexports.ParticlesNumber = ParticlesNumber;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AnimationOptions = void 0;\nclass AnimationOptions {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.speed = 1;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\nexports.AnimationOptions = AnimationOptions;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OpacityAnimation = void 0;\nconst Types_1 = require(\"../../../../Enums/Types\");\nconst AnimationOptions_1 = require(\"../../AnimationOptions\");\nclass OpacityAnimation extends AnimationOptions_1.AnimationOptions {\n    constructor() {\n        super();\n        this.destroy = Types_1.DestroyType.none;\n        this.enable = false;\n        this.minimumValue = 0;\n        this.speed = 2;\n        this.startValue = Types_1.StartValueType.random;\n        this.sync = false;\n    }\n    get opacity_min() {\n        return this.minimumValue;\n    }\n    set opacity_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        var _a;\n        if (data === undefined) {\n            return;\n        }\n        super.load(data);\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const minimumValue = (_a = data.minimumValue) !== null && _a !== void 0 ? _a : data.opacity_min;\n        if (minimumValue !== undefined) {\n            this.minimumValue = minimumValue;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.startValue !== undefined) {\n            this.startValue = data.startValue;\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\nexports.OpacityAnimation = OpacityAnimation;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Opacity = void 0;\nconst OpacityAnimation_1 = require(\"./OpacityAnimation\");\nconst ValueWithRandom_1 = require(\"../../ValueWithRandom\");\nconst Utils_1 = require(\"../../../../Utils\");\nclass Opacity extends ValueWithRandom_1.ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new OpacityAnimation_1.OpacityAnimation();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        const animation = (_a = data.animation) !== null && _a !== void 0 ? _a : data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = Utils_1.NumberUtils.setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\nexports.Opacity = Opacity;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Shape = void 0;\nconst Enums_1 = require(\"../../../../Enums\");\nconst Utils_1 = require(\"../../../../Utils\");\nclass Shape {\n    constructor() {\n        this.options = {};\n        this.type = Enums_1.ShapeType.circle;\n    }\n    get image() {\n        var _a;\n        return ((_a = this.options[Enums_1.ShapeType.image]) !== null && _a !== void 0 ? _a : this.options[Enums_1.ShapeType.images]);\n    }\n    set image(value) {\n        this.options[Enums_1.ShapeType.image] = value;\n        this.options[Enums_1.ShapeType.images] = value;\n    }\n    get custom() {\n        return this.options;\n    }\n    set custom(value) {\n        this.options = value;\n    }\n    get images() {\n        return this.image instanceof Array ? this.image : [this.image];\n    }\n    set images(value) {\n        this.image = value;\n    }\n    get stroke() {\n        return [];\n    }\n    set stroke(_value) {\n    }\n    get character() {\n        var _a;\n        return ((_a = this.options[Enums_1.ShapeType.character]) !== null && _a !== void 0 ? _a : this.options[Enums_1.ShapeType.char]);\n    }\n    set character(value) {\n        this.options[Enums_1.ShapeType.character] = value;\n        this.options[Enums_1.ShapeType.char] = value;\n    }\n    get polygon() {\n        var _a;\n        return ((_a = this.options[Enums_1.ShapeType.polygon]) !== null && _a !== void 0 ? _a : this.options[Enums_1.ShapeType.star]);\n    }\n    set polygon(value) {\n        this.options[Enums_1.ShapeType.polygon] = value;\n        this.options[Enums_1.ShapeType.star] = value;\n    }\n    load(data) {\n        var _a, _b, _c;\n        if (data === undefined) {\n            return;\n        }\n        const options = (_a = data.options) !== null && _a !== void 0 ? _a : data.custom;\n        if (options !== undefined) {\n            for (const shape in options) {\n                const item = options[shape];\n                if (item !== undefined) {\n                    this.options[shape] = Utils_1.Utils.deepExtend((_b = this.options[shape]) !== null && _b !== void 0 ? _b : {}, item);\n                }\n            }\n        }\n        this.loadShape(data.character, Enums_1.ShapeType.character, Enums_1.ShapeType.char, true);\n        this.loadShape(data.polygon, Enums_1.ShapeType.polygon, Enums_1.ShapeType.star, false);\n        this.loadShape((_c = data.image) !== null && _c !== void 0 ? _c : data.images, Enums_1.ShapeType.image, Enums_1.ShapeType.images, true);\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n    loadShape(item, mainKey, altKey, altOverride) {\n        var _a, _b, _c, _d;\n        if (item === undefined) {\n            return;\n        }\n        if (item instanceof Array) {\n            if (!(this.options[mainKey] instanceof Array)) {\n                this.options[mainKey] = [];\n                if (!this.options[altKey] || altOverride) {\n                    this.options[altKey] = [];\n                }\n            }\n            this.options[mainKey] = Utils_1.Utils.deepExtend((_a = this.options[mainKey]) !== null && _a !== void 0 ? _a : [], item);\n            if (!this.options[altKey] || altOverride) {\n                this.options[altKey] = Utils_1.Utils.deepExtend((_b = this.options[altKey]) !== null && _b !== void 0 ? _b : [], item);\n            }\n        }\n        else {\n            if (this.options[mainKey] instanceof Array) {\n                this.options[mainKey] = {};\n                if (!this.options[altKey] || altOverride) {\n                    this.options[altKey] = {};\n                }\n            }\n            this.options[mainKey] = Utils_1.Utils.deepExtend((_c = this.options[mainKey]) !== null && _c !== void 0 ? _c : {}, item);\n            if (!this.options[altKey] || altOverride) {\n                this.options[altKey] = Utils_1.Utils.deepExtend((_d = this.options[altKey]) !== null && _d !== void 0 ? _d : {}, item);\n            }\n        }\n    }\n}\nexports.Shape = Shape;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SizeAnimation = void 0;\nconst Enums_1 = require(\"../../../../Enums\");\nconst AnimationOptions_1 = require(\"../../AnimationOptions\");\nclass SizeAnimation extends AnimationOptions_1.AnimationOptions {\n    constructor() {\n        super();\n        this.destroy = Enums_1.DestroyType.none;\n        this.enable = false;\n        this.minimumValue = 0;\n        this.speed = 5;\n        this.startValue = Enums_1.StartValueType.random;\n        this.sync = false;\n    }\n    get size_min() {\n        return this.minimumValue;\n    }\n    set size_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        var _a;\n        if (data === undefined) {\n            return;\n        }\n        super.load(data);\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const minimumValue = (_a = data.minimumValue) !== null && _a !== void 0 ? _a : data.size_min;\n        if (minimumValue !== undefined) {\n            this.minimumValue = minimumValue;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.startValue !== undefined) {\n            this.startValue = data.startValue;\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\nexports.SizeAnimation = SizeAnimation;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Size = void 0;\nconst SizeAnimation_1 = require(\"./SizeAnimation\");\nconst ValueWithRandom_1 = require(\"../../ValueWithRandom\");\nconst Utils_1 = require(\"../../../../Utils\");\nclass Size extends ValueWithRandom_1.ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new SizeAnimation_1.SizeAnimation();\n        this.random.minimumValue = 1;\n        this.value = 3;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        const animation = (_a = data.animation) !== null && _a !== void 0 ? _a : data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = Utils_1.NumberUtils.setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\nexports.Size = Size;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RotateAnimation = void 0;\nclass RotateAnimation {\n    constructor() {\n        this.enable = false;\n        this.speed = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\nexports.RotateAnimation = RotateAnimation;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Rotate = void 0;\nconst RotateAnimation_1 = require(\"./RotateAnimation\");\nconst Enums_1 = require(\"../../../../Enums\");\nconst ValueWithRandom_1 = require(\"../../ValueWithRandom\");\nclass Rotate extends ValueWithRandom_1.ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RotateAnimation_1.RotateAnimation();\n        this.direction = Enums_1.RotateDirection.clockwise;\n        this.path = false;\n        this.value = {\n            min: 0,\n            max: 360,\n        };\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        this.animation.load(data.animation);\n        if (data.path !== undefined) {\n            this.path = data.path;\n        }\n    }\n}\nexports.Rotate = Rotate;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Shadow = void 0;\nconst OptionsColor_1 = require(\"../OptionsColor\");\nclass Shadow {\n    constructor() {\n        this.blur = 0;\n        this.color = new OptionsColor_1.OptionsColor();\n        this.enable = false;\n        this.offset = {\n            x: 0,\n            y: 0,\n        };\n        this.color.value = \"#000000\";\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor_1.OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset === undefined) {\n            return;\n        }\n        if (data.offset.x !== undefined) {\n            this.offset.x = data.offset.x;\n        }\n        if (data.offset.y !== undefined) {\n            this.offset.y = data.offset.y;\n        }\n    }\n}\nexports.Shadow = Shadow;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ColorAnimation = void 0;\nconst Utils_1 = require(\"../../Utils\");\nclass ColorAnimation {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.offset = 0;\n        this.speed = 1;\n        this.sync = true;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset !== undefined) {\n            this.offset = Utils_1.NumberUtils.setRangeValue(data.offset);\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\nexports.ColorAnimation = ColorAnimation;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HslAnimation = void 0;\nconst ColorAnimation_1 = require(\"../ColorAnimation\");\nclass HslAnimation {\n    constructor() {\n        this.h = new ColorAnimation_1.ColorAnimation();\n        this.s = new ColorAnimation_1.ColorAnimation();\n        this.l = new ColorAnimation_1.ColorAnimation();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.h.load(data.h);\n        this.s.load(data.s);\n        this.l.load(data.l);\n    }\n}\nexports.HslAnimation = HslAnimation;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AnimatableColor = void 0;\nconst OptionsColor_1 = require(\"../OptionsColor\");\nconst HslAnimation_1 = require(\"./HslAnimation\");\nclass AnimatableColor extends OptionsColor_1.OptionsColor {\n    constructor() {\n        super();\n        this.animation = new HslAnimation_1.HslAnimation();\n    }\n    static create(source, data) {\n        const color = source !== null && source !== void 0 ? source : new AnimatableColor();\n        if (data !== undefined) {\n            color.load(typeof data === \"string\" ? { value: data } : data);\n        }\n        return color;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const colorAnimation = data.animation;\n        if (colorAnimation !== undefined) {\n            if (colorAnimation.enable !== undefined) {\n                this.animation.h.load(colorAnimation);\n            }\n            else {\n                this.animation.load(data.animation);\n            }\n        }\n    }\n}\nexports.AnimatableColor = AnimatableColor;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Stroke = void 0;\nconst AnimatableColor_1 = require(\"./AnimatableColor\");\nclass Stroke {\n    constructor() {\n        this.width = 0;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = AnimatableColor_1.AnimatableColor.create(this.color, data.color);\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\nexports.Stroke = Stroke;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BounceFactor = void 0;\nconst ValueWithRandom_1 = require(\"../../ValueWithRandom\");\nclass BounceFactor extends ValueWithRandom_1.ValueWithRandom {\n    constructor() {\n        super();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n}\nexports.BounceFactor = BounceFactor;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Bounce = void 0;\nconst BounceFactor_1 = require(\"./BounceFactor\");\nclass Bounce {\n    constructor() {\n        this.horizontal = new BounceFactor_1.BounceFactor();\n        this.vertical = new BounceFactor_1.BounceFactor();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.horizontal.load(data.horizontal);\n        this.vertical.load(data.vertical);\n    }\n}\nexports.Bounce = Bounce;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CollisionsOverlap = void 0;\nclass CollisionsOverlap {\n    constructor() {\n        this.enable = true;\n        this.retries = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.retries !== undefined) {\n            this.retries = data.retries;\n        }\n    }\n}\nexports.CollisionsOverlap = CollisionsOverlap;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Collisions = void 0;\nconst Enums_1 = require(\"../../../../Enums\");\nconst Bounce_1 = require(\"../Bounce/Bounce\");\nconst CollisionsOverlap_1 = require(\"./CollisionsOverlap\");\nclass Collisions {\n    constructor() {\n        this.bounce = new Bounce_1.Bounce();\n        this.enable = false;\n        this.mode = Enums_1.CollisionMode.bounce;\n        this.overlap = new CollisionsOverlap_1.CollisionsOverlap();\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        this.bounce.load(data.bounce);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.overlap.load(data.overlap);\n    }\n}\nexports.Collisions = Collisions;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TwinkleValues = void 0;\nconst OptionsColor_1 = require(\"../../OptionsColor\");\nclass TwinkleValues {\n    constructor() {\n        this.enable = false;\n        this.frequency = 0.05;\n        this.opacity = 1;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor_1.OptionsColor.create(this.color, data.color);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\nexports.TwinkleValues = TwinkleValues;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Twinkle = void 0;\nconst TwinkleValues_1 = require(\"./TwinkleValues\");\nclass Twinkle {\n    constructor() {\n        this.lines = new TwinkleValues_1.TwinkleValues();\n        this.particles = new TwinkleValues_1.TwinkleValues();\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        this.lines.load(data.lines);\n        this.particles.load(data.particles);\n    }\n}\nexports.Twinkle = Twinkle;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LifeDelay = void 0;\nconst ValueWithRandom_1 = require(\"../../ValueWithRandom\");\nclass LifeDelay extends ValueWithRandom_1.ValueWithRandom {\n    constructor() {\n        super();\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\nexports.LifeDelay = LifeDelay;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LifeDuration = void 0;\nconst ValueWithRandom_1 = require(\"../../ValueWithRandom\");\nclass LifeDuration extends ValueWithRandom_1.ValueWithRandom {\n    constructor() {\n        super();\n        this.random.minimumValue = 0.0001;\n        this.sync = false;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\nexports.LifeDuration = LifeDuration;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Life = void 0;\nconst LifeDelay_1 = require(\"./LifeDelay\");\nconst LifeDuration_1 = require(\"./LifeDuration\");\nclass Life {\n    constructor() {\n        this.count = 0;\n        this.delay = new LifeDelay_1.LifeDelay();\n        this.duration = new LifeDuration_1.LifeDuration();\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        this.delay.load(data.delay);\n        this.duration.load(data.duration);\n    }\n}\nexports.Life = Life;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Particles = void 0;\nconst Links_1 = require(\"./Links/Links\");\nconst Move_1 = require(\"./Move/Move\");\nconst ParticlesNumber_1 = require(\"./Number/ParticlesNumber\");\nconst Opacity_1 = require(\"./Opacity/Opacity\");\nconst Shape_1 = require(\"./Shape/Shape\");\nconst Size_1 = require(\"./Size/Size\");\nconst Rotate_1 = require(\"./Rotate/Rotate\");\nconst Shadow_1 = require(\"./Shadow\");\nconst Stroke_1 = require(\"./Stroke\");\nconst Collisions_1 = require(\"./Collisions/Collisions\");\nconst Twinkle_1 = require(\"./Twinkle/Twinkle\");\nconst AnimatableColor_1 = require(\"./AnimatableColor\");\nconst Life_1 = require(\"./Life/Life\");\nconst Bounce_1 = require(\"./Bounce/Bounce\");\nclass Particles {\n    constructor() {\n        this.bounce = new Bounce_1.Bounce();\n        this.collisions = new Collisions_1.Collisions();\n        this.color = new AnimatableColor_1.AnimatableColor();\n        this.life = new Life_1.Life();\n        this.links = new Links_1.Links();\n        this.move = new Move_1.Move();\n        this.number = new ParticlesNumber_1.ParticlesNumber();\n        this.opacity = new Opacity_1.Opacity();\n        this.reduceDuplicates = false;\n        this.rotate = new Rotate_1.Rotate();\n        this.shadow = new Shadow_1.Shadow();\n        this.shape = new Shape_1.Shape();\n        this.size = new Size_1.Size();\n        this.stroke = new Stroke_1.Stroke();\n        this.twinkle = new Twinkle_1.Twinkle();\n    }\n    get line_linked() {\n        return this.links;\n    }\n    set line_linked(value) {\n        this.links = value;\n    }\n    get lineLinked() {\n        return this.links;\n    }\n    set lineLinked(value) {\n        this.links = value;\n    }\n    load(data) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        if (data === undefined) {\n            return;\n        }\n        this.bounce.load(data.bounce);\n        this.color = AnimatableColor_1.AnimatableColor.create(this.color, data.color);\n        this.life.load(data.life);\n        const links = (_b = (_a = data.links) !== null && _a !== void 0 ? _a : data.lineLinked) !== null && _b !== void 0 ? _b : data.line_linked;\n        if (links !== undefined) {\n            this.links.load(links);\n        }\n        this.move.load(data.move);\n        this.number.load(data.number);\n        this.opacity.load(data.opacity);\n        if (data.reduceDuplicates !== undefined) {\n            this.reduceDuplicates = data.reduceDuplicates;\n        }\n        this.rotate.load(data.rotate);\n        this.shape.load(data.shape);\n        this.size.load(data.size);\n        this.shadow.load(data.shadow);\n        this.twinkle.load(data.twinkle);\n        const collisions = (_d = (_c = data.move) === null || _c === void 0 ? void 0 : _c.collisions) !== null && _d !== void 0 ? _d : (_e = data.move) === null || _e === void 0 ? void 0 : _e.bounce;\n        if (collisions !== undefined) {\n            this.collisions.enable = collisions;\n        }\n        this.collisions.load(data.collisions);\n        const strokeToLoad = (_f = data.stroke) !== null && _f !== void 0 ? _f : (_g = data.shape) === null || _g === void 0 ? void 0 : _g.stroke;\n        if (strokeToLoad === undefined) {\n            return;\n        }\n        if (strokeToLoad instanceof Array) {\n            this.stroke = strokeToLoad.map((s) => {\n                const tmp = new Stroke_1.Stroke();\n                tmp.load(s);\n                return tmp;\n            });\n        }\n        else {\n            if (this.stroke instanceof Array) {\n                this.stroke = new Stroke_1.Stroke();\n            }\n            this.stroke.load(strokeToLoad);\n        }\n    }\n}\nexports.Particles = Particles;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Infecter = void 0;\nclass Infecter {\n    constructor(container) {\n        this.container = container;\n    }\n    startInfection(stage) {\n        const options = this.container.actualOptions;\n        const stages = options.infection.stages;\n        const stagesCount = stages.length;\n        if (stage > stagesCount || stage < 0) {\n            return;\n        }\n        this.infectionDelay = 0;\n        this.infectionDelayStage = stage;\n    }\n    updateInfectionStage(stage) {\n        const options = this.container.actualOptions;\n        const stagesCount = options.infection.stages.length;\n        if (stage > stagesCount || stage < 0 || (this.infectionStage !== undefined && this.infectionStage > stage)) {\n            return;\n        }\n        this.infectionStage = stage;\n        this.infectionTime = 0;\n    }\n    updateInfection(delta) {\n        const options = this.container.actualOptions;\n        const infection = options.infection;\n        const stages = options.infection.stages;\n        const stagesCount = stages.length;\n        if (this.infectionDelay !== undefined && this.infectionDelayStage !== undefined) {\n            const stage = this.infectionDelayStage;\n            if (stage > stagesCount || stage < 0) {\n                return;\n            }\n            if (this.infectionDelay > infection.delay * 1000) {\n                this.infectionStage = stage;\n                this.infectionTime = 0;\n                delete this.infectionDelay;\n                delete this.infectionDelayStage;\n            }\n            else {\n                this.infectionDelay += delta;\n            }\n        }\n        else {\n            delete this.infectionDelay;\n            delete this.infectionDelayStage;\n        }\n        if (this.infectionStage !== undefined && this.infectionTime !== undefined) {\n            const infectionStage = stages[this.infectionStage];\n            if (infectionStage.duration !== undefined && infectionStage.duration >= 0) {\n                if (this.infectionTime > infectionStage.duration * 1000) {\n                    this.nextInfectionStage();\n                }\n                else {\n                    this.infectionTime += delta;\n                }\n            }\n            else {\n                this.infectionTime += delta;\n            }\n        }\n        else {\n            delete this.infectionStage;\n            delete this.infectionTime;\n        }\n    }\n    nextInfectionStage() {\n        const options = this.container.actualOptions;\n        const stagesCount = options.infection.stages.length;\n        if (stagesCount <= 0 || this.infectionStage === undefined) {\n            return;\n        }\n        this.infectionTime = 0;\n        if (stagesCount <= ++this.infectionStage) {\n            if (options.infection.cure) {\n                delete this.infectionStage;\n                delete this.infectionTime;\n                return;\n            }\n            else {\n                this.infectionStage = 0;\n                this.infectionTime = 0;\n            }\n        }\n    }\n}\nexports.Infecter = Infecter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Mover = void 0;\nconst Utils_1 = require(\"../../Utils\");\nconst Enums_1 = require(\"../../Enums\");\nclass Mover {\n    constructor(container, particle) {\n        this.container = container;\n        this.particle = particle;\n    }\n    move(delta) {\n        const particle = this.particle;\n        particle.bubble.inRange = false;\n        particle.links = [];\n        for (const [, plugin] of this.container.plugins) {\n            if (particle.destroyed) {\n                break;\n            }\n            if (plugin.particleUpdate) {\n                plugin.particleUpdate(particle, delta);\n            }\n        }\n        if (particle.destroyed) {\n            return;\n        }\n        this.moveParticle(delta);\n        this.moveParallax();\n    }\n    moveParticle(delta) {\n        var _a, _b;\n        const particle = this.particle;\n        const particlesOptions = particle.options;\n        if (!particlesOptions.move.enable) {\n            return;\n        }\n        const container = this.container;\n        const slowFactor = this.getProximitySpeedFactor();\n        const baseSpeed = ((_a = particle.moveSpeed) !== null && _a !== void 0 ? _a : Utils_1.NumberUtils.getRangeValue(particle.options.move.speed) * container.retina.pixelRatio) *\n            container.retina.reduceFactor;\n        const maxSize = Utils_1.NumberUtils.getRangeMax(particle.options.size.value) * container.retina.pixelRatio;\n        const sizeFactor = particlesOptions.move.size ? particle.getRadius() / maxSize : 1;\n        const moveSpeed = (baseSpeed / 2) * sizeFactor * slowFactor * delta.factor;\n        const moveDrift = (_b = particle.moveDrift) !== null && _b !== void 0 ? _b : Utils_1.NumberUtils.getRangeValue(particle.options.move.drift) * container.retina.pixelRatio;\n        this.applyPath(delta);\n        const gravityOptions = particlesOptions.move.gravity;\n        if (gravityOptions.enable) {\n            particle.velocity.y += (gravityOptions.acceleration * delta.factor) / (60 * moveSpeed);\n        }\n        particle.velocity.x += (moveDrift * delta.factor) / (60 * moveSpeed);\n        const decay = 1 - particle.options.move.decay;\n        particle.velocity.multTo(decay);\n        const velocity = particle.velocity.mult(moveSpeed);\n        if (gravityOptions.enable && velocity.y >= gravityOptions.maxSpeed && gravityOptions.maxSpeed > 0) {\n            velocity.y = gravityOptions.maxSpeed;\n            particle.velocity.y = velocity.y / moveSpeed;\n        }\n        particle.position.addTo(velocity);\n        if (particlesOptions.move.vibrate) {\n            particle.position.x += Math.sin(particle.position.x * Math.cos(particle.position.y));\n            particle.position.y += Math.cos(particle.position.y * Math.sin(particle.position.x));\n        }\n        const initialPosition = particle.initialPosition;\n        const initialDistance = Utils_1.NumberUtils.getDistance(initialPosition, particle.position);\n        if (particle.maxDistance) {\n            if (initialDistance >= particle.maxDistance && !particle.misplaced) {\n                particle.misplaced = initialDistance > particle.maxDistance;\n                particle.velocity.x = particle.velocity.y / 2 - particle.velocity.x;\n                particle.velocity.y = particle.velocity.x / 2 - particle.velocity.y;\n            }\n            else if (initialDistance < particle.maxDistance && particle.misplaced) {\n                particle.misplaced = false;\n            }\n            else if (particle.misplaced) {\n                if ((particle.position.x < initialPosition.x && particle.velocity.x < 0) ||\n                    (particle.position.x > initialPosition.x && particle.velocity.x > 0)) {\n                    particle.velocity.x *= -Math.random();\n                }\n                if ((particle.position.y < initialPosition.y && particle.velocity.y < 0) ||\n                    (particle.position.y > initialPosition.y && particle.velocity.y > 0)) {\n                    particle.velocity.y *= -Math.random();\n                }\n            }\n        }\n    }\n    applyPath(delta) {\n        const particle = this.particle;\n        const particlesOptions = particle.options;\n        const pathOptions = particlesOptions.move.path;\n        const pathEnabled = pathOptions.enable;\n        if (!pathEnabled) {\n            return;\n        }\n        const container = this.container;\n        if (particle.lastPathTime <= particle.pathDelay) {\n            particle.lastPathTime += delta.value;\n            return;\n        }\n        let generator = container.pathGenerator;\n        if (pathOptions.generator) {\n            const customGenerator = Utils_1.Plugins.getPathGenerator(pathOptions.generator);\n            if (customGenerator) {\n                generator = customGenerator;\n            }\n        }\n        const path = generator.generate(particle);\n        particle.velocity.addTo(path);\n        if (pathOptions.clamp) {\n            particle.velocity.x = Utils_1.NumberUtils.clamp(particle.velocity.x, -1, 1);\n            particle.velocity.y = Utils_1.NumberUtils.clamp(particle.velocity.y, -1, 1);\n        }\n        particle.lastPathTime -= particle.pathDelay;\n    }\n    moveParallax() {\n        const container = this.container;\n        const options = container.actualOptions;\n        if (Utils_1.Utils.isSsr() || !options.interactivity.events.onHover.parallax.enable) {\n            return;\n        }\n        const particle = this.particle;\n        const parallaxForce = options.interactivity.events.onHover.parallax.force;\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const canvasCenter = {\n            x: container.canvas.size.width / 2,\n            y: container.canvas.size.height / 2,\n        };\n        const parallaxSmooth = options.interactivity.events.onHover.parallax.smooth;\n        const factor = particle.getRadius() / parallaxForce;\n        const tmp = {\n            x: (mousePos.x - canvasCenter.x) * factor,\n            y: (mousePos.y - canvasCenter.y) * factor,\n        };\n        particle.offset.x += (tmp.x - particle.offset.x) / parallaxSmooth;\n        particle.offset.y += (tmp.y - particle.offset.y) / parallaxSmooth;\n    }\n    getProximitySpeedFactor() {\n        const container = this.container;\n        const options = container.actualOptions;\n        const active = Utils_1.Utils.isInArray(Enums_1.HoverMode.slow, options.interactivity.events.onHover.mode);\n        if (!active) {\n            return 1;\n        }\n        const mousePos = this.container.interactivity.mouse.position;\n        if (!mousePos) {\n            return 1;\n        }\n        const particlePos = this.particle.getPosition();\n        const dist = Utils_1.NumberUtils.getDistance(mousePos, particlePos);\n        const radius = container.retina.slowModeRadius;\n        if (dist > radius) {\n            return 1;\n        }\n        const proximityFactor = dist / radius || 0;\n        const slowFactor = options.interactivity.modes.slow.factor;\n        return proximityFactor / slowFactor;\n    }\n}\nexports.Mover = Mover;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Particle = void 0;\nconst Updater_1 = require(\"./Particle/Updater\");\nconst Particles_1 = require(\"../Options/Classes/Particles/Particles\");\nconst Shape_1 = require(\"../Options/Classes/Particles/Shape/Shape\");\nconst Enums_1 = require(\"../Enums\");\nconst Utils_1 = require(\"../Utils\");\nconst Infecter_1 = require(\"./Particle/Infecter\");\nconst Mover_1 = require(\"./Particle/Mover\");\nconst Vector_1 = require(\"./Particle/Vector\");\nclass Particle {\n    constructor(id, container, position, overrideOptions) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        this.id = id;\n        this.container = container;\n        this.links = [];\n        this.fill = true;\n        this.close = true;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.misplaced = false;\n        this.loops = {\n            opacity: 0,\n            size: 0,\n        };\n        const pxRatio = container.retina.pixelRatio;\n        const options = container.actualOptions;\n        const particlesOptions = new Particles_1.Particles();\n        particlesOptions.load(options.particles);\n        const shapeType = particlesOptions.shape.type;\n        const reduceDuplicates = particlesOptions.reduceDuplicates;\n        this.shape = shapeType instanceof Array ? Utils_1.Utils.itemFromArray(shapeType, this.id, reduceDuplicates) : shapeType;\n        if (overrideOptions === null || overrideOptions === void 0 ? void 0 : overrideOptions.shape) {\n            if (overrideOptions.shape.type) {\n                const overrideShapeType = overrideOptions.shape.type;\n                this.shape =\n                    overrideShapeType instanceof Array\n                        ? Utils_1.Utils.itemFromArray(overrideShapeType, this.id, reduceDuplicates)\n                        : overrideShapeType;\n            }\n            const shapeOptions = new Shape_1.Shape();\n            shapeOptions.load(overrideOptions.shape);\n            if (this.shape) {\n                const shapeData = shapeOptions.options[this.shape];\n                if (shapeData) {\n                    this.shapeData = Utils_1.Utils.deepExtend({}, shapeData instanceof Array\n                        ? Utils_1.Utils.itemFromArray(shapeData, this.id, reduceDuplicates)\n                        : shapeData);\n                }\n            }\n        }\n        else {\n            const shapeData = particlesOptions.shape.options[this.shape];\n            if (shapeData) {\n                this.shapeData = Utils_1.Utils.deepExtend({}, shapeData instanceof Array ? Utils_1.Utils.itemFromArray(shapeData, this.id, reduceDuplicates) : shapeData);\n            }\n        }\n        if (overrideOptions !== undefined) {\n            particlesOptions.load(overrideOptions);\n        }\n        if (((_a = this.shapeData) === null || _a === void 0 ? void 0 : _a.particles) !== undefined) {\n            particlesOptions.load((_b = this.shapeData) === null || _b === void 0 ? void 0 : _b.particles);\n        }\n        this.fill = (_d = (_c = this.shapeData) === null || _c === void 0 ? void 0 : _c.fill) !== null && _d !== void 0 ? _d : this.fill;\n        this.close = (_f = (_e = this.shapeData) === null || _e === void 0 ? void 0 : _e.close) !== null && _f !== void 0 ? _f : this.close;\n        this.options = particlesOptions;\n        this.pathDelay = Utils_1.NumberUtils.getValue(this.options.move.path.delay) * 1000;\n        container.retina.initParticle(this);\n        const color = this.options.color;\n        const sizeOptions = this.options.size;\n        const sizeValue = Utils_1.NumberUtils.getValue(sizeOptions) * container.retina.pixelRatio;\n        const randomSize = typeof sizeOptions.random === \"boolean\" ? sizeOptions.random : sizeOptions.random.enable;\n        this.size = {\n            value: sizeValue,\n        };\n        this.direction = this.options.move.direction;\n        this.bubble = {\n            inRange: false,\n        };\n        this.initialVelocity = this.calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        const rotateOptions = this.options.rotate;\n        this.rotate = {\n            value: (Utils_1.NumberUtils.getRangeValue(rotateOptions.value) * Math.PI) / 180,\n        };\n        let rotateDirection = rotateOptions.direction;\n        if (rotateDirection === Enums_1.RotateDirection.random) {\n            const index = Math.floor(Math.random() * 2);\n            rotateDirection = index > 0 ? Enums_1.RotateDirection.counterClockwise : Enums_1.RotateDirection.clockwise;\n        }\n        switch (rotateDirection) {\n            case Enums_1.RotateDirection.counterClockwise:\n            case \"counterClockwise\":\n                this.rotate.status = Enums_1.AnimationStatus.decreasing;\n                break;\n            case Enums_1.RotateDirection.clockwise:\n                this.rotate.status = Enums_1.AnimationStatus.increasing;\n                break;\n        }\n        const rotateAnimation = this.options.rotate.animation;\n        if (rotateAnimation.enable) {\n            this.rotate.velocity = (rotateAnimation.speed / 360) * container.retina.reduceFactor;\n            if (!rotateAnimation.sync) {\n                this.rotate.velocity *= Math.random();\n            }\n        }\n        const sizeAnimation = this.options.size.animation;\n        if (sizeAnimation.enable) {\n            this.size.status = Enums_1.AnimationStatus.increasing;\n            if (!randomSize) {\n                switch (sizeAnimation.startValue) {\n                    case Enums_1.StartValueType.min:\n                        this.size.value = sizeAnimation.minimumValue * pxRatio;\n                        break;\n                    case Enums_1.StartValueType.random:\n                        this.size.value = Utils_1.NumberUtils.randomInRange(Utils_1.NumberUtils.setRangeValue(sizeAnimation.minimumValue * pxRatio, this.size.value));\n                        break;\n                    case Enums_1.StartValueType.max:\n                    default:\n                        this.size.status = Enums_1.AnimationStatus.decreasing;\n                        break;\n                }\n            }\n            this.size.velocity =\n                (((_g = this.sizeAnimationSpeed) !== null && _g !== void 0 ? _g : container.retina.sizeAnimationSpeed) / 100) *\n                    container.retina.reduceFactor;\n            if (!sizeAnimation.sync) {\n                this.size.velocity *= Math.random();\n            }\n        }\n        const hslColor = Utils_1.ColorUtils.colorToHsl(color, this.id, reduceDuplicates);\n        if (hslColor) {\n            this.color = {\n                h: {\n                    value: hslColor.h,\n                },\n                s: {\n                    value: hslColor.s,\n                },\n                l: {\n                    value: hslColor.l,\n                },\n            };\n            const colorAnimation = this.options.color.animation;\n            this.setColorAnimation(colorAnimation.h, this.color.h);\n            this.setColorAnimation(colorAnimation.s, this.color.s);\n            this.setColorAnimation(colorAnimation.l, this.color.l);\n        }\n        this.position = this.calcPosition(this.container, position);\n        this.initialPosition = this.position.copy();\n        this.offset = Vector_1.Vector.create(0, 0);\n        const opacityOptions = this.options.opacity;\n        const randomOpacity = typeof opacityOptions.random === \"boolean\" ? opacityOptions.random : opacityOptions.random.enable;\n        this.opacity = {\n            value: Utils_1.NumberUtils.getValue(opacityOptions),\n        };\n        const opacityAnimation = opacityOptions.animation;\n        if (opacityAnimation.enable) {\n            this.opacity.status = Enums_1.AnimationStatus.increasing;\n            if (!randomOpacity) {\n                switch (opacityAnimation.startValue) {\n                    case Enums_1.StartValueType.min:\n                        this.opacity.value = opacityAnimation.minimumValue;\n                        break;\n                    case Enums_1.StartValueType.random:\n                        this.opacity.value = Utils_1.NumberUtils.randomInRange(Utils_1.NumberUtils.setRangeValue(opacityAnimation.minimumValue, this.opacity.value));\n                        break;\n                    case Enums_1.StartValueType.max:\n                    default:\n                        this.opacity.status = Enums_1.AnimationStatus.decreasing;\n                        break;\n                }\n            }\n            this.opacity.velocity = (opacityAnimation.speed / 100) * container.retina.reduceFactor;\n            if (!opacityAnimation.sync) {\n                this.opacity.velocity *= Math.random();\n            }\n        }\n        this.sides = 24;\n        let drawer = container.drawers.get(this.shape);\n        if (!drawer) {\n            drawer = Utils_1.Plugins.getShapeDrawer(this.shape);\n            if (drawer) {\n                container.drawers.set(this.shape, drawer);\n            }\n        }\n        const sideCountFunc = drawer === null || drawer === void 0 ? void 0 : drawer.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        const imageShape = this.loadImageShape(container, drawer);\n        if (imageShape) {\n            this.image = imageShape.image;\n            this.fill = imageShape.fill;\n            this.close = imageShape.close;\n        }\n        this.stroke =\n            this.options.stroke instanceof Array\n                ? Utils_1.Utils.itemFromArray(this.options.stroke, this.id, reduceDuplicates)\n                : this.options.stroke;\n        this.strokeWidth = this.stroke.width * container.retina.pixelRatio;\n        const strokeHslColor = (_h = Utils_1.ColorUtils.colorToHsl(this.stroke.color)) !== null && _h !== void 0 ? _h : this.getFillColor();\n        if (strokeHslColor) {\n            this.strokeColor = {\n                h: {\n                    value: strokeHslColor.h,\n                },\n                s: {\n                    value: strokeHslColor.s,\n                },\n                l: {\n                    value: strokeHslColor.l,\n                },\n            };\n            const strokeColorAnimation = (_j = this.stroke.color) === null || _j === void 0 ? void 0 : _j.animation;\n            if (strokeColorAnimation && this.strokeColor) {\n                this.setColorAnimation(strokeColorAnimation.h, this.strokeColor.h);\n                this.setColorAnimation(strokeColorAnimation.s, this.strokeColor.s);\n                this.setColorAnimation(strokeColorAnimation.l, this.strokeColor.l);\n            }\n        }\n        const lifeOptions = particlesOptions.life;\n        this.lifeDelay = container.retina.reduceFactor\n            ? ((Utils_1.NumberUtils.getValue(lifeOptions.delay) * (lifeOptions.delay.sync ? 1 : Math.random())) /\n                container.retina.reduceFactor) *\n                1000\n            : 0;\n        this.lifeDelayTime = 0;\n        this.lifeDuration = container.retina.reduceFactor\n            ? ((Utils_1.NumberUtils.getValue(lifeOptions.duration) * (lifeOptions.duration.sync ? 1 : Math.random())) /\n                container.retina.reduceFactor) *\n                1000\n            : 0;\n        this.lifeTime = 0;\n        this.livesRemaining = particlesOptions.life.count;\n        this.spawning = this.lifeDelay > 0;\n        if (this.lifeDuration <= 0) {\n            this.lifeDuration = -1;\n        }\n        if (this.livesRemaining <= 0) {\n            this.livesRemaining = -1;\n        }\n        this.shadowColor = Utils_1.ColorUtils.colorToRgb(this.options.shadow.color);\n        this.updater = new Updater_1.Updater(container, this);\n        this.infecter = new Infecter_1.Infecter(container);\n        this.mover = new Mover_1.Mover(container, this);\n    }\n    move(delta) {\n        this.mover.move(delta);\n    }\n    update(delta) {\n        this.updater.update(delta);\n    }\n    draw(delta) {\n        this.container.canvas.drawParticle(this, delta);\n    }\n    getPosition() {\n        return this.position.add(this.offset);\n    }\n    getRadius() {\n        return this.bubble.radius || this.size.value;\n    }\n    getMass() {\n        const radius = this.getRadius();\n        return (Math.pow(radius, 2) * Math.PI) / 2;\n    }\n    getFillColor() {\n        var _a;\n        return (_a = this.bubble.color) !== null && _a !== void 0 ? _a : Utils_1.ColorUtils.getHslFromAnimation(this.color);\n    }\n    getStrokeColor() {\n        var _a, _b;\n        return (_b = (_a = this.bubble.color) !== null && _a !== void 0 ? _a : Utils_1.ColorUtils.getHslFromAnimation(this.strokeColor)) !== null && _b !== void 0 ? _b : this.getFillColor();\n    }\n    destroy() {\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        this.links = [];\n    }\n    reset() {\n        this.loops.opacity = 0;\n        this.loops.size = 0;\n    }\n    setColorAnimation(colorAnimation, colorValue) {\n        if (colorAnimation.enable) {\n            colorValue.velocity = (colorAnimation.speed / 100) * this.container.retina.reduceFactor;\n            if (colorAnimation.sync) {\n                return;\n            }\n            colorValue.status = Enums_1.AnimationStatus.increasing;\n            colorValue.velocity *= Math.random();\n            if (colorValue.value) {\n                colorValue.value *= Math.random();\n            }\n        }\n        else {\n            colorValue.velocity = 0;\n        }\n    }\n    calcPosition(container, position, tryCount = 0) {\n        var _a, _b;\n        for (const [, plugin] of container.plugins) {\n            const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n            if (pluginPos !== undefined) {\n                return Vector_1.Vector.create(pluginPos.x, pluginPos.y);\n            }\n        }\n        const pos = Vector_1.Vector.create((_a = position === null || position === void 0 ? void 0 : position.x) !== null && _a !== void 0 ? _a : Math.random() * container.canvas.size.width, (_b = position === null || position === void 0 ? void 0 : position.y) !== null && _b !== void 0 ? _b : Math.random() * container.canvas.size.height);\n        const outMode = this.options.move.outMode;\n        if (Utils_1.Utils.isInArray(outMode, Enums_1.OutMode.bounce) || Utils_1.Utils.isInArray(outMode, Enums_1.OutMode.bounceHorizontal)) {\n            if (pos.x > container.canvas.size.width - this.size.value * 2) {\n                pos.x -= this.size.value;\n            }\n            else if (pos.x < this.size.value * 2) {\n                pos.x += this.size.value;\n            }\n        }\n        if (Utils_1.Utils.isInArray(outMode, Enums_1.OutMode.bounce) || Utils_1.Utils.isInArray(outMode, Enums_1.OutMode.bounceVertical)) {\n            if (pos.y > container.canvas.size.height - this.size.value * 2) {\n                pos.y -= this.size.value;\n            }\n            else if (pos.y < this.size.value * 2) {\n                pos.y += this.size.value;\n            }\n        }\n        if (this.checkOverlap(pos, tryCount)) {\n            return this.calcPosition(container, undefined, tryCount + 1);\n        }\n        return pos;\n    }\n    checkOverlap(pos, tryCount = 0) {\n        const overlapOptions = this.options.collisions.overlap;\n        if (!overlapOptions.enable) {\n            const retries = overlapOptions.retries;\n            if (retries >= 0 && tryCount > retries) {\n                throw new Error(\"Particle is overlapping and can't be placed\");\n            }\n            let overlaps = false;\n            for (const particle of this.container.particles.array) {\n                if (Utils_1.NumberUtils.getDistance(pos, particle.position) < this.size.value + particle.size.value) {\n                    overlaps = true;\n                    break;\n                }\n            }\n            return overlaps;\n        }\n        return false;\n    }\n    calculateVelocity() {\n        const baseVelocity = Utils_1.NumberUtils.getParticleBaseVelocity(this.direction);\n        const res = baseVelocity.copy();\n        const moveOptions = this.options.move;\n        let rad;\n        let radOffset = Math.PI / 4;\n        if (typeof moveOptions.angle === \"number\") {\n            rad = (Math.PI / 180) * moveOptions.angle;\n        }\n        else {\n            rad = (Math.PI / 180) * moveOptions.angle.value;\n            radOffset = (Math.PI / 180) * moveOptions.angle.offset;\n        }\n        const range = {\n            left: Math.sin(radOffset + rad / 2) - Math.sin(radOffset - rad / 2),\n            right: Math.cos(radOffset + rad / 2) - Math.cos(radOffset - rad / 2),\n        };\n        if (!moveOptions.straight || moveOptions.random) {\n            res.x += Utils_1.NumberUtils.randomInRange(Utils_1.NumberUtils.setRangeValue(range.left, range.right)) / 2;\n            res.y += Utils_1.NumberUtils.randomInRange(Utils_1.NumberUtils.setRangeValue(range.left, range.right)) / 2;\n        }\n        return res;\n    }\n    loadImageShape(container, drawer) {\n        var _a, _b, _c, _d, _e;\n        if (!(this.shape === Enums_1.ShapeType.image || this.shape === Enums_1.ShapeType.images)) {\n            return;\n        }\n        const imageDrawer = drawer;\n        const images = imageDrawer.getImages(container).images;\n        const imageData = this.shapeData;\n        const image = (_a = images.find((t) => t.source === imageData.src)) !== null && _a !== void 0 ? _a : images[0];\n        const color = this.getFillColor();\n        let imageRes;\n        if (!image) {\n            return;\n        }\n        if (image.svgData !== undefined && imageData.replaceColor && color) {\n            const svgColoredData = Utils_1.ColorUtils.replaceColorSvg(image, color, this.opacity.value);\n            const svg = new Blob([svgColoredData], { type: \"image/svg+xml\" });\n            const domUrl = URL || window.URL || window.webkitURL || window;\n            const url = domUrl.createObjectURL(svg);\n            const img = new Image();\n            imageRes = {\n                data: image,\n                loaded: false,\n                ratio: imageData.width / imageData.height,\n                replaceColor: (_b = imageData.replaceColor) !== null && _b !== void 0 ? _b : imageData.replace_color,\n                source: imageData.src,\n            };\n            img.addEventListener(\"load\", () => {\n                if (this.image) {\n                    this.image.loaded = true;\n                    image.element = img;\n                }\n                domUrl.revokeObjectURL(url);\n            });\n            img.addEventListener(\"error\", () => {\n                domUrl.revokeObjectURL(url);\n                Utils_1.Utils.loadImage(imageData.src).then((img2) => {\n                    if (this.image && img2) {\n                        image.element = img2.element;\n                        this.image.loaded = true;\n                    }\n                });\n            });\n            img.src = url;\n        }\n        else {\n            imageRes = {\n                data: image,\n                loaded: true,\n                ratio: imageData.width / imageData.height,\n                replaceColor: (_c = imageData.replaceColor) !== null && _c !== void 0 ? _c : imageData.replace_color,\n                source: imageData.src,\n            };\n        }\n        if (!imageRes.ratio) {\n            imageRes.ratio = 1;\n        }\n        const fill = (_d = imageData.fill) !== null && _d !== void 0 ? _d : this.fill;\n        const close = (_e = imageData.close) !== null && _e !== void 0 ? _e : this.close;\n        return {\n            image: imageRes,\n            fill,\n            close,\n        };\n    }\n}\nexports.Particle = Particle;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Grabber = void 0;\nconst Utils_1 = require(\"../../Utils\");\nconst Modes_1 = require(\"../../Enums/Modes\");\nclass Grabber {\n    constructor(container) {\n        this.container = container;\n    }\n    isEnabled() {\n        const container = this.container;\n        const mouse = container.interactivity.mouse;\n        const events = container.actualOptions.interactivity.events;\n        if (!(events.onHover.enable && mouse.position)) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode;\n        return Utils_1.Utils.isInArray(Modes_1.HoverMode.grab, hoverMode);\n    }\n    reset() {\n    }\n    interact() {\n        var _a;\n        const container = this.container;\n        const options = container.actualOptions;\n        const interactivity = options.interactivity;\n        if (interactivity.events.onHover.enable && container.interactivity.status === Utils_1.Constants.mouseMoveEvent) {\n            const mousePos = container.interactivity.mouse.position;\n            if (mousePos === undefined) {\n                return;\n            }\n            const distance = container.retina.grabModeDistance;\n            const query = container.particles.quadTree.queryCircle(mousePos, distance);\n            for (const particle of query) {\n                const pos = particle.getPosition();\n                const pointDistance = Utils_1.NumberUtils.getDistance(pos, mousePos);\n                if (pointDistance <= distance) {\n                    const grabLineOptions = interactivity.modes.grab.links;\n                    const lineOpacity = grabLineOptions.opacity;\n                    const opacityLine = lineOpacity - (pointDistance * lineOpacity) / distance;\n                    if (opacityLine > 0) {\n                        const optColor = (_a = grabLineOptions.color) !== null && _a !== void 0 ? _a : particle.options.links.color;\n                        if (!container.particles.grabLineColor) {\n                            const linksOptions = container.actualOptions.interactivity.modes.grab.links;\n                            container.particles.grabLineColor = Utils_1.ColorUtils.getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n                        }\n                        const colorLine = Utils_1.ColorUtils.getLinkColor(particle, undefined, container.particles.grabLineColor);\n                        if (colorLine === undefined) {\n                            return;\n                        }\n                        container.canvas.drawGrabLine(particle, colorLine, opacityLine, mousePos);\n                    }\n                }\n            }\n        }\n    }\n}\nexports.Grabber = Grabber;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Repulser = void 0;\nconst Enums_1 = require(\"../../Enums\");\nconst Utils_1 = require(\"../../Utils\");\nconst Vector_1 = require(\"../../Core/Particle/Vector\");\nclass Repulser {\n    constructor(container) {\n        this.container = container;\n    }\n    isEnabled() {\n        const container = this.container;\n        const options = container.actualOptions;\n        const mouse = container.interactivity.mouse;\n        const events = options.interactivity.events;\n        const divs = events.onDiv;\n        const divRepulse = Utils_1.Utils.isDivModeEnabled(Enums_1.DivMode.repulse, divs);\n        if (!(divRepulse || (events.onHover.enable && mouse.position) || (events.onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode;\n        const clickMode = events.onClick.mode;\n        return (Utils_1.Utils.isInArray(Enums_1.HoverMode.repulse, hoverMode) || Utils_1.Utils.isInArray(Enums_1.ClickMode.repulse, clickMode) || divRepulse);\n    }\n    reset() {\n    }\n    interact() {\n        const container = this.container;\n        const options = container.actualOptions;\n        const mouseMoveStatus = container.interactivity.status === Utils_1.Constants.mouseMoveEvent;\n        const events = options.interactivity.events;\n        const hoverEnabled = events.onHover.enable;\n        const hoverMode = events.onHover.mode;\n        const clickEnabled = events.onClick.enable;\n        const clickMode = events.onClick.mode;\n        const divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && Utils_1.Utils.isInArray(Enums_1.HoverMode.repulse, hoverMode)) {\n            this.hoverRepulse();\n        }\n        else if (clickEnabled && Utils_1.Utils.isInArray(Enums_1.ClickMode.repulse, clickMode)) {\n            this.clickRepulse();\n        }\n        else {\n            Utils_1.Utils.divModeExecute(Enums_1.DivMode.repulse, divs, (selector, div) => this.singleSelectorRepulse(selector, div));\n        }\n    }\n    singleSelectorRepulse(selector, div) {\n        const container = this.container;\n        const query = document.querySelectorAll(selector);\n        if (!query.length) {\n            return;\n        }\n        query.forEach((item) => {\n            const elem = item;\n            const pxRatio = container.retina.pixelRatio;\n            const pos = {\n                x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n            };\n            const repulseRadius = (elem.offsetWidth / 2) * pxRatio;\n            const area = div.type === Enums_1.DivType.circle\n                ? new Utils_1.Circle(pos.x, pos.y, repulseRadius)\n                : new Utils_1.Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio);\n            const divs = container.actualOptions.interactivity.modes.repulse.divs;\n            const divRepulse = Utils_1.Utils.divMode(divs, elem);\n            this.processRepulse(pos, repulseRadius, area, divRepulse);\n        });\n    }\n    hoverRepulse() {\n        const container = this.container;\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const repulseRadius = container.retina.repulseModeDistance;\n        this.processRepulse(mousePos, repulseRadius, new Utils_1.Circle(mousePos.x, mousePos.y, repulseRadius));\n    }\n    processRepulse(position, repulseRadius, area, divRepulse) {\n        var _a;\n        const container = this.container;\n        const query = container.particles.quadTree.query(area);\n        for (const particle of query) {\n            const { dx, dy, distance } = Utils_1.NumberUtils.getDistances(particle.position, position);\n            const normVec = {\n                x: dx / distance,\n                y: dy / distance,\n            };\n            const velocity = ((_a = divRepulse === null || divRepulse === void 0 ? void 0 : divRepulse.speed) !== null && _a !== void 0 ? _a : container.actualOptions.interactivity.modes.repulse.speed) * 100;\n            const repulseFactor = Utils_1.NumberUtils.clamp((1 - Math.pow(distance / repulseRadius, 2)) * velocity, 0, 50);\n            particle.position.x += normVec.x * repulseFactor;\n            particle.position.y += normVec.y * repulseFactor;\n        }\n    }\n    clickRepulse() {\n        const container = this.container;\n        if (!container.repulse.finish) {\n            if (!container.repulse.count) {\n                container.repulse.count = 0;\n            }\n            container.repulse.count++;\n            if (container.repulse.count === container.particles.count) {\n                container.repulse.finish = true;\n            }\n        }\n        if (container.repulse.clicking) {\n            const repulseDistance = container.retina.repulseModeDistance;\n            const repulseRadius = Math.pow(repulseDistance / 6, 3);\n            const mouseClickPos = container.interactivity.mouse.clickPosition;\n            if (mouseClickPos === undefined) {\n                return;\n            }\n            const range = new Utils_1.Circle(mouseClickPos.x, mouseClickPos.y, repulseRadius);\n            const query = container.particles.quadTree.query(range);\n            for (const particle of query) {\n                const { dx, dy, distance } = Utils_1.NumberUtils.getDistances(mouseClickPos, particle.position);\n                const d = distance * distance;\n                if (d <= repulseRadius) {\n                    container.repulse.particles.push(particle);\n                    const velocity = container.actualOptions.interactivity.modes.repulse.speed;\n                    const v = Vector_1.Vector.create(dx, dy);\n                    v.length = (-repulseRadius * velocity) / d;\n                    particle.velocity.setTo(v);\n                }\n            }\n        }\n        else if (container.repulse.clicking === false) {\n            for (const particle of container.repulse.particles) {\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.repulse.particles = [];\n        }\n    }\n}\nexports.Repulser = Repulser;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Bubbler = void 0;\nconst Utils_1 = require(\"../../Utils\");\nconst Enums_1 = require(\"../../Enums\");\nfunction calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {\n    if (modeValue > optionsValue) {\n        const size = particleValue + (modeValue - optionsValue) * ratio;\n        return Utils_1.NumberUtils.clamp(size, particleValue, modeValue);\n    }\n    else if (modeValue < optionsValue) {\n        const size = particleValue - (optionsValue - modeValue) * ratio;\n        return Utils_1.NumberUtils.clamp(size, modeValue, particleValue);\n    }\n}\nclass Bubbler {\n    constructor(container) {\n        this.container = container;\n    }\n    isEnabled() {\n        const container = this.container;\n        const options = container.actualOptions;\n        const mouse = container.interactivity.mouse;\n        const events = options.interactivity.events;\n        const divs = events.onDiv;\n        const divBubble = Utils_1.Utils.isDivModeEnabled(Enums_1.DivMode.bubble, divs);\n        if (!(divBubble || (events.onHover.enable && mouse.position) || (events.onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode;\n        const clickMode = events.onClick.mode;\n        return (Utils_1.Utils.isInArray(Enums_1.HoverMode.bubble, hoverMode) || Utils_1.Utils.isInArray(Enums_1.ClickMode.bubble, clickMode) || divBubble);\n    }\n    reset(particle, force) {\n        if (!particle.bubble.inRange || force) {\n            delete particle.bubble.div;\n            delete particle.bubble.opacity;\n            delete particle.bubble.radius;\n            delete particle.bubble.color;\n        }\n    }\n    interact() {\n        const options = this.container.actualOptions;\n        const events = options.interactivity.events;\n        const onHover = events.onHover;\n        const onClick = events.onClick;\n        const hoverEnabled = onHover.enable;\n        const hoverMode = onHover.mode;\n        const clickEnabled = onClick.enable;\n        const clickMode = onClick.mode;\n        const divs = events.onDiv;\n        if (hoverEnabled && Utils_1.Utils.isInArray(Enums_1.HoverMode.bubble, hoverMode)) {\n            this.hoverBubble();\n        }\n        else if (clickEnabled && Utils_1.Utils.isInArray(Enums_1.ClickMode.bubble, clickMode)) {\n            this.clickBubble();\n        }\n        else {\n            Utils_1.Utils.divModeExecute(Enums_1.DivMode.bubble, divs, (selector, div) => this.singleSelectorHover(selector, div));\n        }\n    }\n    singleSelectorHover(selector, div) {\n        const container = this.container;\n        const selectors = document.querySelectorAll(selector);\n        if (!selectors.length) {\n            return;\n        }\n        selectors.forEach((item) => {\n            const elem = item;\n            const pxRatio = container.retina.pixelRatio;\n            const pos = {\n                x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n            };\n            const repulseRadius = (elem.offsetWidth / 2) * pxRatio;\n            const area = div.type === Enums_1.DivType.circle\n                ? new Utils_1.Circle(pos.x, pos.y, repulseRadius)\n                : new Utils_1.Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio);\n            const query = container.particles.quadTree.query(area);\n            for (const particle of query) {\n                if (!area.contains(particle.getPosition())) {\n                    continue;\n                }\n                particle.bubble.inRange = true;\n                const divs = container.actualOptions.interactivity.modes.bubble.divs;\n                const divBubble = Utils_1.Utils.divMode(divs, elem);\n                if (!particle.bubble.div || particle.bubble.div !== elem) {\n                    this.reset(particle, true);\n                    particle.bubble.div = elem;\n                }\n                this.hoverBubbleSize(particle, 1, divBubble);\n                this.hoverBubbleOpacity(particle, 1, divBubble);\n                this.hoverBubbleColor(particle, divBubble);\n            }\n        });\n    }\n    process(particle, distMouse, timeSpent, data) {\n        const container = this.container;\n        const bubbleParam = data.bubbleObj.optValue;\n        if (bubbleParam === undefined) {\n            return;\n        }\n        const options = container.actualOptions;\n        const bubbleDuration = options.interactivity.modes.bubble.duration;\n        const bubbleDistance = container.retina.bubbleModeDistance;\n        const particlesParam = data.particlesObj.optValue;\n        const pObjBubble = data.bubbleObj.value;\n        const pObj = data.particlesObj.value || 0;\n        const type = data.type;\n        if (bubbleParam !== particlesParam) {\n            if (!container.bubble.durationEnd) {\n                if (distMouse <= bubbleDistance) {\n                    const obj = pObjBubble !== null && pObjBubble !== void 0 ? pObjBubble : pObj;\n                    if (obj !== bubbleParam) {\n                        const value = pObj - (timeSpent * (pObj - bubbleParam)) / bubbleDuration;\n                        if (type === Enums_1.ProcessBubbleType.size) {\n                            particle.bubble.radius = value;\n                        }\n                        if (type === Enums_1.ProcessBubbleType.opacity) {\n                            particle.bubble.opacity = value;\n                        }\n                    }\n                }\n                else {\n                    if (type === Enums_1.ProcessBubbleType.size) {\n                        delete particle.bubble.radius;\n                    }\n                    if (type === Enums_1.ProcessBubbleType.opacity) {\n                        delete particle.bubble.opacity;\n                    }\n                }\n            }\n            else if (pObjBubble) {\n                if (type === Enums_1.ProcessBubbleType.size) {\n                    delete particle.bubble.radius;\n                }\n                if (type === Enums_1.ProcessBubbleType.opacity) {\n                    delete particle.bubble.opacity;\n                }\n            }\n        }\n    }\n    clickBubble() {\n        const container = this.container;\n        const options = container.actualOptions;\n        const mouseClickPos = container.interactivity.mouse.clickPosition;\n        if (mouseClickPos === undefined) {\n            return;\n        }\n        const distance = container.retina.bubbleModeDistance;\n        const query = container.particles.quadTree.queryCircle(mouseClickPos, distance);\n        for (const particle of query) {\n            if (!container.bubble.clicking) {\n                continue;\n            }\n            particle.bubble.inRange = !container.bubble.durationEnd;\n            const pos = particle.getPosition();\n            const distMouse = Utils_1.NumberUtils.getDistance(pos, mouseClickPos);\n            const timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime || 0)) / 1000;\n            if (timeSpent > options.interactivity.modes.bubble.duration) {\n                container.bubble.durationEnd = true;\n            }\n            if (timeSpent > options.interactivity.modes.bubble.duration * 2) {\n                container.bubble.clicking = false;\n                container.bubble.durationEnd = false;\n            }\n            const sizeData = {\n                bubbleObj: {\n                    optValue: container.retina.bubbleModeSize,\n                    value: particle.bubble.radius,\n                },\n                particlesObj: {\n                    optValue: Utils_1.NumberUtils.getRangeMax(particle.options.size.value) * container.retina.pixelRatio,\n                    value: particle.size.value,\n                },\n                type: Enums_1.ProcessBubbleType.size,\n            };\n            this.process(particle, distMouse, timeSpent, sizeData);\n            const opacityData = {\n                bubbleObj: {\n                    optValue: options.interactivity.modes.bubble.opacity,\n                    value: particle.bubble.opacity,\n                },\n                particlesObj: {\n                    optValue: Utils_1.NumberUtils.getRangeMax(particle.options.opacity.value),\n                    value: particle.opacity.value,\n                },\n                type: Enums_1.ProcessBubbleType.opacity,\n            };\n            this.process(particle, distMouse, timeSpent, opacityData);\n            if (!container.bubble.durationEnd) {\n                if (distMouse <= container.retina.bubbleModeDistance) {\n                    this.hoverBubbleColor(particle);\n                }\n                else {\n                    delete particle.bubble.color;\n                }\n            }\n            else {\n                delete particle.bubble.color;\n            }\n        }\n    }\n    hoverBubble() {\n        const container = this.container;\n        const mousePos = container.interactivity.mouse.position;\n        if (mousePos === undefined) {\n            return;\n        }\n        const distance = container.retina.bubbleModeDistance;\n        const query = container.particles.quadTree.queryCircle(mousePos, distance);\n        for (const particle of query) {\n            particle.bubble.inRange = true;\n            const pos = particle.getPosition();\n            const pointDistance = Utils_1.NumberUtils.getDistance(pos, mousePos);\n            const ratio = 1 - pointDistance / distance;\n            if (pointDistance <= distance) {\n                if (ratio >= 0 && container.interactivity.status === Utils_1.Constants.mouseMoveEvent) {\n                    this.hoverBubbleSize(particle, ratio);\n                    this.hoverBubbleOpacity(particle, ratio);\n                    this.hoverBubbleColor(particle);\n                }\n            }\n            else {\n                this.reset(particle);\n            }\n            if (container.interactivity.status === Utils_1.Constants.mouseLeaveEvent) {\n                this.reset(particle);\n            }\n        }\n    }\n    hoverBubbleSize(particle, ratio, divBubble) {\n        const container = this.container;\n        const modeSize = (divBubble === null || divBubble === void 0 ? void 0 : divBubble.size)\n            ? divBubble.size * container.retina.pixelRatio\n            : container.retina.bubbleModeSize;\n        if (modeSize === undefined) {\n            return;\n        }\n        const optSize = Utils_1.NumberUtils.getRangeMax(particle.options.size.value) * container.retina.pixelRatio;\n        const pSize = particle.size.value;\n        const size = calculateBubbleValue(pSize, modeSize, optSize, ratio);\n        if (size !== undefined) {\n            particle.bubble.radius = size;\n        }\n    }\n    hoverBubbleOpacity(particle, ratio, divBubble) {\n        var _a;\n        const options = this.container.actualOptions;\n        const modeOpacity = (_a = divBubble === null || divBubble === void 0 ? void 0 : divBubble.opacity) !== null && _a !== void 0 ? _a : options.interactivity.modes.bubble.opacity;\n        if (modeOpacity === undefined) {\n            return;\n        }\n        const optOpacity = particle.options.opacity.value;\n        const pOpacity = particle.opacity.value;\n        const opacity = calculateBubbleValue(pOpacity, modeOpacity, Utils_1.NumberUtils.getRangeMax(optOpacity), ratio);\n        if (opacity !== undefined) {\n            particle.bubble.opacity = opacity;\n        }\n    }\n    hoverBubbleColor(particle, divBubble) {\n        var _a;\n        const options = this.container.actualOptions;\n        if (particle.bubble.color === undefined) {\n            const modeColor = (_a = divBubble === null || divBubble === void 0 ? void 0 : divBubble.color) !== null && _a !== void 0 ? _a : options.interactivity.modes.bubble.color;\n            if (modeColor === undefined) {\n                return;\n            }\n            const bubbleColor = modeColor instanceof Array ? Utils_1.Utils.itemFromArray(modeColor) : modeColor;\n            particle.bubble.color = Utils_1.ColorUtils.colorToHsl(bubbleColor);\n        }\n    }\n}\nexports.Bubbler = Bubbler;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Connector = void 0;\nconst Utils_1 = require(\"../../Utils\");\nconst Modes_1 = require(\"../../Enums/Modes\");\nclass Connector {\n    constructor(container) {\n        this.container = container;\n    }\n    isEnabled() {\n        const container = this.container;\n        const mouse = container.interactivity.mouse;\n        const events = container.actualOptions.interactivity.events;\n        if (!(events.onHover.enable && mouse.position)) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode;\n        return Utils_1.Utils.isInArray(Modes_1.HoverMode.connect, hoverMode);\n    }\n    reset() {\n    }\n    interact() {\n        const container = this.container;\n        const options = container.actualOptions;\n        if (options.interactivity.events.onHover.enable && container.interactivity.status === \"mousemove\") {\n            const mousePos = container.interactivity.mouse.position;\n            if (!mousePos) {\n                return;\n            }\n            const distance = Math.abs(container.retina.connectModeRadius);\n            const query = container.particles.quadTree.queryCircle(mousePos, distance);\n            let i = 0;\n            for (const p1 of query) {\n                const pos1 = p1.getPosition();\n                for (const p2 of query.slice(i + 1)) {\n                    const pos2 = p2.getPosition();\n                    const distMax = Math.abs(container.retina.connectModeDistance);\n                    const xDiff = Math.abs(pos1.x - pos2.x);\n                    const yDiff = Math.abs(pos1.y - pos2.y);\n                    if (xDiff < distMax && yDiff < distMax) {\n                        container.canvas.drawConnectLine(p1, p2);\n                    }\n                }\n                ++i;\n            }\n        }\n    }\n}\nexports.Connector = Connector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Linker = void 0;\nconst Utils_1 = require(\"../../Utils\");\nclass Linker {\n    constructor(container) {\n        this.container = container;\n    }\n    isEnabled(particle) {\n        return particle.options.links.enable;\n    }\n    reset() {\n    }\n    interact(p1) {\n        var _a;\n        const container = this.container;\n        const linkOpt1 = p1.options.links;\n        const optOpacity = linkOpt1.opacity;\n        const optDistance = (_a = p1.linksDistance) !== null && _a !== void 0 ? _a : container.retina.linksDistance;\n        const canvasSize = container.canvas.size;\n        const warp = linkOpt1.warp;\n        const pos1 = p1.getPosition();\n        const range = warp\n            ? new Utils_1.CircleWarp(pos1.x, pos1.y, optDistance, canvasSize)\n            : new Utils_1.Circle(pos1.x, pos1.y, optDistance);\n        const query = container.particles.quadTree.query(range);\n        for (const p2 of query) {\n            const linkOpt2 = p2.options.links;\n            if (p1 === p2 || !linkOpt2.enable || linkOpt1.id !== linkOpt2.id || p2.spawning || p2.destroyed) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            let distance = Utils_1.NumberUtils.getDistance(pos1, pos2);\n            if (warp) {\n                if (distance > optDistance) {\n                    const pos2NE = {\n                        x: pos2.x - canvasSize.width,\n                        y: pos2.y,\n                    };\n                    distance = Utils_1.NumberUtils.getDistance(pos1, pos2NE);\n                    if (distance > optDistance) {\n                        const pos2SE = {\n                            x: pos2.x - canvasSize.width,\n                            y: pos2.y - canvasSize.height,\n                        };\n                        distance = Utils_1.NumberUtils.getDistance(pos1, pos2SE);\n                        if (distance > optDistance) {\n                            const pos2SW = {\n                                x: pos2.x,\n                                y: pos2.y - canvasSize.height,\n                            };\n                            distance = Utils_1.NumberUtils.getDistance(pos1, pos2SW);\n                        }\n                    }\n                }\n            }\n            if (distance > optDistance) {\n                return;\n            }\n            const opacityLine = (1 - distance / optDistance) * optOpacity;\n            const linksOptions = p1.options.links;\n            let linkColor = linksOptions.id !== undefined\n                ? container.particles.linksColors.get(linksOptions.id)\n                : container.particles.linksColor;\n            if (!linkColor) {\n                const optColor = linksOptions.color;\n                linkColor = Utils_1.ColorUtils.getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n                if (linksOptions.id !== undefined) {\n                    container.particles.linksColors.set(linksOptions.id, linkColor);\n                }\n                else {\n                    container.particles.linksColor = linkColor;\n                }\n            }\n            if (p2.links.map((t) => t.destination).indexOf(p1) === -1 &&\n                p1.links.map((t) => t.destination).indexOf(p2) === -1) {\n                p1.links.push({\n                    destination: p2,\n                    opacity: opacityLine,\n                });\n            }\n        }\n    }\n}\nexports.Linker = Linker;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Attractor = void 0;\nconst Utils_1 = require(\"../../Utils\");\nclass Attractor {\n    constructor(container) {\n        this.container = container;\n    }\n    interact(p1) {\n        var _a;\n        const container = this.container;\n        const distance = (_a = p1.linksDistance) !== null && _a !== void 0 ? _a : container.retina.linksDistance;\n        const pos1 = p1.getPosition();\n        const query = container.particles.quadTree.queryCircle(pos1, distance);\n        for (const p2 of query) {\n            if (p1 === p2 || !p2.options.move.attract.enable || p2.destroyed || p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            const { dx, dy } = Utils_1.NumberUtils.getDistances(pos1, pos2);\n            const rotate = p1.options.move.attract.rotate;\n            const ax = dx / (rotate.x * 1000);\n            const ay = dy / (rotate.y * 1000);\n            p1.velocity.x -= ax;\n            p1.velocity.y -= ay;\n            p2.velocity.x += ax;\n            p2.velocity.y += ay;\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.move.attract.enable;\n    }\n    reset() {\n    }\n}\nexports.Attractor = Attractor;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Collider = void 0;\nconst Enums_1 = require(\"../../Enums\");\nconst Utils_1 = require(\"../../Utils\");\nfunction bounce(p1, p2) {\n    Utils_1.Utils.circleBounce(Utils_1.Utils.circleBounceDataFromParticle(p1), Utils_1.Utils.circleBounceDataFromParticle(p2));\n}\nfunction destroy(p1, p2) {\n    if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n        p1.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n        p2.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n        if (p1.getRadius() >= p2.getRadius()) {\n            p2.destroy();\n        }\n        else {\n            p1.destroy();\n        }\n    }\n}\nclass Collider {\n    constructor(container) {\n        this.container = container;\n    }\n    isEnabled(particle) {\n        return particle.options.collisions.enable;\n    }\n    reset() {\n    }\n    interact(p1) {\n        const container = this.container;\n        const pos1 = p1.getPosition();\n        const query = container.particles.quadTree.queryCircle(pos1, p1.getRadius() * 2);\n        for (const p2 of query) {\n            if (p1 === p2 ||\n                !p2.options.collisions.enable ||\n                p1.options.collisions.mode !== p2.options.collisions.mode ||\n                p2.destroyed ||\n                p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            const dist = Utils_1.NumberUtils.getDistance(pos1, pos2);\n            const radius1 = p1.getRadius();\n            const radius2 = p2.getRadius();\n            const distP = radius1 + radius2;\n            if (dist <= distP) {\n                this.resolveCollision(p1, p2);\n            }\n        }\n    }\n    resolveCollision(p1, p2) {\n        switch (p1.options.collisions.mode) {\n            case Enums_1.CollisionMode.absorb: {\n                this.absorb(p1, p2);\n                break;\n            }\n            case Enums_1.CollisionMode.bounce: {\n                bounce(p1, p2);\n                break;\n            }\n            case Enums_1.CollisionMode.destroy: {\n                destroy(p1, p2);\n                break;\n            }\n        }\n    }\n    absorb(p1, p2) {\n        const container = this.container;\n        const fps = container.actualOptions.fpsLimit / 1000;\n        if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n            p1.destroy();\n        }\n        else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n            p2.destroy();\n        }\n        else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n            if (p1.getRadius() >= p2.getRadius()) {\n                const factor = Utils_1.NumberUtils.clamp(p1.getRadius() / p2.getRadius(), 0, p2.getRadius()) * fps;\n                p1.size.value += factor;\n                p2.size.value -= factor;\n                if (p2.getRadius() <= container.retina.pixelRatio) {\n                    p2.size.value = 0;\n                    p2.destroy();\n                }\n            }\n            else {\n                const factor = Utils_1.NumberUtils.clamp(p2.getRadius() / p1.getRadius(), 0, p1.getRadius()) * fps;\n                p1.size.value -= factor;\n                p2.size.value += factor;\n                if (p1.getRadius() <= container.retina.pixelRatio) {\n                    p1.size.value = 0;\n                    p1.destroy();\n                }\n            }\n        }\n    }\n}\nexports.Collider = Collider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Infecter = void 0;\nclass Infecter {\n    constructor(container) {\n        this.container = container;\n    }\n    isEnabled() {\n        return this.container.actualOptions.infection.enable;\n    }\n    reset() {\n    }\n    interact(p1, delta) {\n        var _a, _b;\n        const infecter1 = p1.infecter;\n        infecter1.updateInfection(delta.value);\n        if (infecter1.infectionStage === undefined) {\n            return;\n        }\n        const container = this.container;\n        const options = container.actualOptions;\n        const infectionOptions = options.infection;\n        if (!infectionOptions.enable || infectionOptions.stages.length < 1) {\n            return;\n        }\n        const infectionStage1 = infectionOptions.stages[infecter1.infectionStage];\n        const pxRatio = container.retina.pixelRatio;\n        const radius = p1.getRadius() * 2 + infectionStage1.radius * pxRatio;\n        const pos = p1.getPosition();\n        const infectedStage1 = (_a = infectionStage1.infectedStage) !== null && _a !== void 0 ? _a : infecter1.infectionStage;\n        const query = container.particles.quadTree.queryCircle(pos, radius);\n        const infections = infectionStage1.rate;\n        const neighbors = query.length;\n        for (const p2 of query) {\n            if (p2 === p1 ||\n                p2.destroyed ||\n                p2.spawning ||\n                !(p2.infecter.infectionStage === undefined || p2.infecter.infectionStage !== infecter1.infectionStage)) {\n                continue;\n            }\n            const infecter2 = p2.infecter;\n            if (Math.random() < infections / neighbors) {\n                if (infecter2.infectionStage === undefined) {\n                    infecter2.startInfection(infectedStage1);\n                }\n                else if (infecter2.infectionStage < infecter1.infectionStage) {\n                    infecter2.updateInfectionStage(infectedStage1);\n                }\n                else if (infecter2.infectionStage > infecter1.infectionStage) {\n                    const infectionStage2 = infectionOptions.stages[infecter2.infectionStage];\n                    const infectedStage2 = (_b = infectionStage2 === null || infectionStage2 === void 0 ? void 0 : infectionStage2.infectedStage) !== null && _b !== void 0 ? _b : infecter2.infectionStage;\n                    infecter1.updateInfectionStage(infectedStage2);\n                }\n            }\n        }\n    }\n}\nexports.Infecter = Infecter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TrailMaker = void 0;\nconst Utils_1 = require(\"../../Utils\");\nconst Modes_1 = require(\"../../Enums/Modes\");\nclass TrailMaker {\n    constructor(container) {\n        this.container = container;\n        this.delay = 0;\n    }\n    interact(delta) {\n        if (!this.container.retina.reduceFactor) {\n            return;\n        }\n        const container = this.container;\n        const options = container.actualOptions;\n        const trailOptions = options.interactivity.modes.trail;\n        const optDelay = (trailOptions.delay * 1000) / this.container.retina.reduceFactor;\n        if (this.delay < optDelay) {\n            this.delay += delta.value;\n        }\n        if (this.delay >= optDelay) {\n            container.particles.push(trailOptions.quantity, container.interactivity.mouse, trailOptions.particles);\n            this.delay -= optDelay;\n        }\n    }\n    isEnabled() {\n        const container = this.container;\n        const options = container.actualOptions;\n        const mouse = container.interactivity.mouse;\n        const events = options.interactivity.events;\n        return ((mouse.clicking &&\n            mouse.inside &&\n            !!mouse.position &&\n            Utils_1.Utils.isInArray(Modes_1.ClickMode.trail, events.onClick.mode)) ||\n            (mouse.inside && !!mouse.position && Utils_1.Utils.isInArray(Modes_1.HoverMode.trail, events.onHover.mode)));\n    }\n    reset() {\n    }\n}\nexports.TrailMaker = TrailMaker;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Attractor = void 0;\nconst Enums_1 = require(\"../../Enums\");\nconst Utils_1 = require(\"../../Utils\");\nclass Attractor {\n    constructor(container) {\n        this.container = container;\n    }\n    isEnabled() {\n        const container = this.container;\n        const options = container.actualOptions;\n        const mouse = container.interactivity.mouse;\n        const events = options.interactivity.events;\n        if (!((events.onHover.enable && mouse.position) || (events.onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode;\n        const clickMode = events.onClick.mode;\n        return Utils_1.Utils.isInArray(Enums_1.HoverMode.attract, hoverMode) || Utils_1.Utils.isInArray(Enums_1.ClickMode.attract, clickMode);\n    }\n    reset() {\n    }\n    interact() {\n        const container = this.container;\n        const options = container.actualOptions;\n        const mouseMoveStatus = container.interactivity.status === Utils_1.Constants.mouseMoveEvent;\n        const events = options.interactivity.events;\n        const hoverEnabled = events.onHover.enable;\n        const hoverMode = events.onHover.mode;\n        const clickEnabled = events.onClick.enable;\n        const clickMode = events.onClick.mode;\n        if (mouseMoveStatus && hoverEnabled && Utils_1.Utils.isInArray(Enums_1.HoverMode.attract, hoverMode)) {\n            this.hoverAttract();\n        }\n        else if (clickEnabled && Utils_1.Utils.isInArray(Enums_1.ClickMode.attract, clickMode)) {\n            this.clickAttract();\n        }\n    }\n    hoverAttract() {\n        const container = this.container;\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const attractRadius = container.retina.attractModeDistance;\n        this.processAttract(mousePos, attractRadius, new Utils_1.Circle(mousePos.x, mousePos.y, attractRadius));\n    }\n    processAttract(position, attractRadius, area) {\n        const container = this.container;\n        const query = container.particles.quadTree.query(area);\n        for (const particle of query) {\n            const { dx, dy, distance } = Utils_1.NumberUtils.getDistances(particle.position, position);\n            const normVec = {\n                x: dx / distance,\n                y: dy / distance,\n            };\n            const velocity = container.actualOptions.interactivity.modes.attract.speed;\n            const attractFactor = Utils_1.NumberUtils.clamp((1 - Math.pow(distance / attractRadius, 2)) * velocity, 0, 50);\n            particle.position.x -= normVec.x * attractFactor;\n            particle.position.y -= normVec.y * attractFactor;\n        }\n    }\n    clickAttract() {\n        const container = this.container;\n        if (!container.attract.finish) {\n            if (!container.attract.count) {\n                container.attract.count = 0;\n            }\n            container.attract.count++;\n            if (container.attract.count === container.particles.count) {\n                container.attract.finish = true;\n            }\n        }\n        if (container.attract.clicking) {\n            const mousePos = container.interactivity.mouse.clickPosition;\n            if (!mousePos) {\n                return;\n            }\n            const attractRadius = container.retina.attractModeDistance;\n            this.processAttract(mousePos, attractRadius, new Utils_1.Circle(mousePos.x, mousePos.y, attractRadius));\n        }\n        else if (container.attract.clicking === false) {\n            container.attract.particles = [];\n        }\n        return;\n    }\n}\nexports.Attractor = Attractor;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Lighter = void 0;\nconst Utils_1 = require(\"../../Utils\");\nconst Modes_1 = require(\"../../Enums/Modes\");\nclass Lighter {\n    constructor(container) {\n        this.container = container;\n    }\n    interact(particle) {\n        const container = this.container;\n        const options = container.actualOptions;\n        if (options.interactivity.events.onHover.enable && container.interactivity.status === \"mousemove\") {\n            const mousePos = this.container.interactivity.mouse.position;\n            if (mousePos) {\n                container.canvas.drawParticleShadow(particle, mousePos);\n            }\n        }\n    }\n    isEnabled() {\n        const container = this.container;\n        const mouse = container.interactivity.mouse;\n        const events = container.actualOptions.interactivity.events;\n        if (!(events.onHover.enable && mouse.position)) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode;\n        return Utils_1.Utils.isInArray(Modes_1.HoverMode.light, hoverMode);\n    }\n    reset() {\n    }\n}\nexports.Lighter = Lighter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Lighter = void 0;\nconst Utils_1 = require(\"../../Utils\");\nconst Modes_1 = require(\"../../Enums/Modes\");\nclass Lighter {\n    constructor(container) {\n        this.container = container;\n    }\n    interact() {\n        const container = this.container;\n        const options = container.actualOptions;\n        if (options.interactivity.events.onHover.enable && container.interactivity.status === \"mousemove\") {\n            const mousePos = container.interactivity.mouse.position;\n            if (!mousePos) {\n                return;\n            }\n            container.canvas.drawLight(mousePos);\n        }\n    }\n    isEnabled() {\n        const container = this.container;\n        const mouse = container.interactivity.mouse;\n        const events = container.actualOptions.interactivity.events;\n        if (!(events.onHover.enable && mouse.position)) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode;\n        return Utils_1.Utils.isInArray(Modes_1.HoverMode.light, hoverMode);\n    }\n    reset() {\n    }\n}\nexports.Lighter = Lighter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Bouncer = void 0;\nconst Utils_1 = require(\"../../Utils\");\nconst Enums_1 = require(\"../../Enums\");\nconst Vector_1 = require(\"../../Core/Particle/Vector\");\nclass Bouncer {\n    constructor(container) {\n        this.container = container;\n    }\n    isEnabled() {\n        const container = this.container;\n        const options = container.actualOptions;\n        const mouse = container.interactivity.mouse;\n        const events = options.interactivity.events;\n        const divs = events.onDiv;\n        return ((mouse.position && events.onHover.enable && Utils_1.Utils.isInArray(Enums_1.HoverMode.bounce, events.onHover.mode)) ||\n            Utils_1.Utils.isDivModeEnabled(Enums_1.DivMode.bounce, divs));\n    }\n    interact() {\n        const container = this.container;\n        const options = container.actualOptions;\n        const events = options.interactivity.events;\n        const mouseMoveStatus = container.interactivity.status === Utils_1.Constants.mouseMoveEvent;\n        const hoverEnabled = events.onHover.enable;\n        const hoverMode = events.onHover.mode;\n        const divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && Utils_1.Utils.isInArray(Enums_1.HoverMode.bounce, hoverMode)) {\n            this.processMouseBounce();\n        }\n        else {\n            Utils_1.Utils.divModeExecute(Enums_1.DivMode.bounce, divs, (selector, div) => this.singleSelectorBounce(selector, div));\n        }\n    }\n    reset() {\n    }\n    processMouseBounce() {\n        const container = this.container;\n        const pxRatio = container.retina.pixelRatio;\n        const tolerance = 10 * pxRatio;\n        const mousePos = container.interactivity.mouse.position;\n        const radius = container.retina.bounceModeDistance;\n        if (mousePos) {\n            this.processBounce(mousePos, radius, new Utils_1.Circle(mousePos.x, mousePos.y, radius + tolerance));\n        }\n    }\n    singleSelectorBounce(selector, div) {\n        const container = this.container;\n        const query = document.querySelectorAll(selector);\n        if (!query.length) {\n            return;\n        }\n        query.forEach((item) => {\n            const elem = item;\n            const pxRatio = container.retina.pixelRatio;\n            const pos = {\n                x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n            };\n            const radius = (elem.offsetWidth / 2) * pxRatio;\n            const tolerance = 10 * pxRatio;\n            const area = div.type === Enums_1.DivType.circle\n                ? new Utils_1.Circle(pos.x, pos.y, radius + tolerance)\n                : new Utils_1.Rectangle(elem.offsetLeft * pxRatio - tolerance, elem.offsetTop * pxRatio - tolerance, elem.offsetWidth * pxRatio + tolerance * 2, elem.offsetHeight * pxRatio + tolerance * 2);\n            this.processBounce(pos, radius, area);\n        });\n    }\n    processBounce(position, radius, area) {\n        const query = this.container.particles.quadTree.query(area);\n        for (const particle of query) {\n            if (area instanceof Utils_1.Circle) {\n                Utils_1.Utils.circleBounce(Utils_1.Utils.circleBounceDataFromParticle(particle), {\n                    position,\n                    radius,\n                    mass: (Math.pow(radius, 2) * Math.PI) / 2,\n                    velocity: Vector_1.Vector.create(0, 0),\n                    factor: {\n                        horizontal: 0,\n                        vertical: 0,\n                    },\n                });\n            }\n            else if (area instanceof Utils_1.Rectangle) {\n                Utils_1.Utils.rectBounce(particle, Utils_1.Utils.calculateBounds(position, radius));\n            }\n        }\n    }\n}\nexports.Bouncer = Bouncer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InteractionManager = void 0;\nconst Grabber_1 = require(\"../../Interactions/External/Grabber\");\nconst Repulser_1 = require(\"../../Interactions/External/Repulser\");\nconst Bubbler_1 = require(\"../../Interactions/External/Bubbler\");\nconst Connector_1 = require(\"../../Interactions/External/Connector\");\nconst Linker_1 = require(\"../../Interactions/Particles/Linker\");\nconst Attractor_1 = require(\"../../Interactions/Particles/Attractor\");\nconst Collider_1 = require(\"../../Interactions/Particles/Collider\");\nconst Infecter_1 = require(\"../../Interactions/Particles/Infecter\");\nconst TrailMaker_1 = require(\"../../Interactions/External/TrailMaker\");\nconst Attractor_2 = require(\"../../Interactions/External/Attractor\");\nconst Lighter_1 = require(\"../../Interactions/Particles/Lighter\");\nconst Lighter_2 = require(\"../../Interactions/External/Lighter\");\nconst Bouncer_1 = require(\"../../Interactions/External/Bouncer\");\nclass InteractionManager {\n    constructor(container) {\n        this.container = container;\n        this.externalInteractors = [\n            new Bouncer_1.Bouncer(container),\n            new Bubbler_1.Bubbler(container),\n            new Connector_1.Connector(container),\n            new Grabber_1.Grabber(container),\n            new Lighter_2.Lighter(container),\n            new Attractor_2.Attractor(container),\n            new Repulser_1.Repulser(container),\n            new TrailMaker_1.TrailMaker(container),\n        ];\n        this.particleInteractors = [\n            new Attractor_1.Attractor(container),\n            new Lighter_1.Lighter(container),\n            new Collider_1.Collider(container),\n            new Infecter_1.Infecter(container),\n            new Linker_1.Linker(container),\n        ];\n    }\n    init() {\n    }\n    externalInteract(delta) {\n        for (const interactor of this.externalInteractors) {\n            if (interactor.isEnabled()) {\n                interactor.interact(delta);\n            }\n        }\n    }\n    particlesInteract(particle, delta) {\n        for (const interactor of this.externalInteractors) {\n            interactor.reset(particle);\n        }\n        for (const interactor of this.particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                interactor.interact(particle, delta);\n            }\n        }\n    }\n}\nexports.InteractionManager = InteractionManager;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Particles = void 0;\nconst Particle_1 = require(\"./Particle\");\nconst Utils_1 = require(\"../Utils\");\nconst InteractionManager_1 = require(\"./Particle/InteractionManager\");\nclass Particles {\n    constructor(container) {\n        this.container = container;\n        this.nextId = 0;\n        this.array = [];\n        this.limit = 0;\n        this.linksFreq = new Map();\n        this.trianglesFreq = new Map();\n        this.interactionManager = new InteractionManager_1.InteractionManager(container);\n        const canvasSize = this.container.canvas.size;\n        this.linksColors = new Map();\n        this.quadTree = new Utils_1.QuadTree(new Utils_1.Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2), 4);\n    }\n    get count() {\n        return this.array.length;\n    }\n    init() {\n        const container = this.container;\n        const options = container.actualOptions;\n        this.linksFreq = new Map();\n        this.trianglesFreq = new Map();\n        let handled = false;\n        for (const particle of options.manualParticles) {\n            const pos = particle.position\n                ? {\n                    x: (particle.position.x * container.canvas.size.width) / 100,\n                    y: (particle.position.y * container.canvas.size.height) / 100,\n                }\n                : undefined;\n            this.addParticle(pos, particle.options);\n        }\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particlesInitialization !== undefined) {\n                handled = plugin.particlesInitialization();\n            }\n            if (handled) {\n                break;\n            }\n        }\n        if (!handled) {\n            for (let i = this.count; i < options.particles.number.value; i++) {\n                this.addParticle();\n            }\n        }\n        if (options.infection.enable) {\n            for (let i = 0; i < options.infection.infections; i++) {\n                const notInfected = this.array.filter((p) => p.infecter.infectionStage === undefined);\n                const infected = Utils_1.Utils.itemFromArray(notInfected);\n                infected.infecter.startInfection(0);\n            }\n        }\n        this.interactionManager.init();\n        container.pathGenerator.init();\n    }\n    redraw() {\n        this.clear();\n        this.init();\n        this.draw({ value: 0, factor: 0 });\n    }\n    removeAt(index, quantity) {\n        if (index >= 0 && index <= this.count) {\n            for (const particle of this.array.splice(index, quantity !== null && quantity !== void 0 ? quantity : 1)) {\n                particle.destroy();\n            }\n        }\n    }\n    remove(particle) {\n        this.removeAt(this.array.indexOf(particle));\n    }\n    update(delta) {\n        const container = this.container;\n        const particlesToDelete = [];\n        container.pathGenerator.update();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.update !== undefined) {\n                plugin.update(delta);\n            }\n        }\n        for (const particle of this.array) {\n            const resizeFactor = this.container.canvas.resizeFactor;\n            if (resizeFactor) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n            }\n            particle.move(delta);\n            if (particle.destroyed) {\n                particlesToDelete.push(particle);\n                continue;\n            }\n            this.quadTree.insert(new Utils_1.Point(particle.getPosition(), particle));\n        }\n        for (const particle of particlesToDelete) {\n            this.remove(particle);\n        }\n        this.interactionManager.externalInteract(delta);\n        for (const particle of this.container.particles.array) {\n            particle.update(delta);\n            if (!particle.destroyed && !particle.spawning) {\n                this.interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete container.canvas.resizeFactor;\n    }\n    draw(delta) {\n        const container = this.container;\n        container.canvas.clear();\n        const canvasSize = this.container.canvas.size;\n        this.quadTree = new Utils_1.QuadTree(new Utils_1.Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2), 4);\n        this.update(delta);\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this.array) {\n            p.draw(delta);\n        }\n    }\n    clear() {\n        this.array = [];\n    }\n    push(nb, mouse, overrideOptions) {\n        const container = this.container;\n        const options = container.actualOptions;\n        const limit = options.particles.number.limit * container.density;\n        this.pushing = true;\n        if (limit > 0) {\n            const countToRemove = this.count + nb - limit;\n            if (countToRemove > 0) {\n                this.removeQuantity(countToRemove);\n            }\n        }\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse === null || mouse === void 0 ? void 0 : mouse.position, overrideOptions);\n        }\n        this.pushing = false;\n    }\n    addParticle(position, overrideOptions) {\n        try {\n            const particle = new Particle_1.Particle(this.nextId, this.container, position, overrideOptions);\n            this.array.push(particle);\n            this.nextId++;\n            return particle;\n        }\n        catch (_a) {\n            console.warn(\"error adding particle\");\n            return;\n        }\n    }\n    removeQuantity(quantity) {\n        this.removeAt(0, quantity);\n    }\n    getLinkFrequency(p1, p2) {\n        const key = `${Math.min(p1.id, p2.id)}_${Math.max(p1.id, p2.id)}`;\n        let res = this.linksFreq.get(key);\n        if (res === undefined) {\n            res = Math.random();\n            this.linksFreq.set(key, res);\n        }\n        return res;\n    }\n    getTriangleFrequency(p1, p2, p3) {\n        let [id1, id2, id3] = [p1.id, p2.id, p3.id];\n        if (id1 > id2) {\n            [id2, id1] = [id1, id2];\n        }\n        if (id2 > id3) {\n            [id3, id2] = [id2, id3];\n        }\n        if (id1 > id3) {\n            [id3, id1] = [id1, id3];\n        }\n        const key = `${id1}_${id2}_${id3}`;\n        let res = this.trianglesFreq.get(key);\n        if (res === undefined) {\n            res = Math.random();\n            this.trianglesFreq.set(key, res);\n        }\n        return res;\n    }\n    setDensity() {\n        const options = this.container.actualOptions;\n        this.applyDensity(options.particles);\n    }\n    applyDensity(options) {\n        var _a;\n        if (!((_a = options.number.density) === null || _a === void 0 ? void 0 : _a.enable)) {\n            return;\n        }\n        const numberOptions = options.number;\n        const densityFactor = this.initDensityFactor(numberOptions.density);\n        const optParticlesNumber = numberOptions.value;\n        const optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber;\n        const particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor;\n        const particlesCount = this.count;\n        this.limit = numberOptions.limit * densityFactor;\n        if (particlesCount < particlesNumber) {\n            this.push(Math.abs(particlesNumber - particlesCount), undefined, options);\n        }\n        else if (particlesCount > particlesNumber) {\n            this.removeQuantity(particlesCount - particlesNumber);\n        }\n    }\n    initDensityFactor(densityOptions) {\n        const container = this.container;\n        if (!container.canvas.element || !densityOptions.enable) {\n            return 1;\n        }\n        const canvas = container.canvas.element;\n        const pxRatio = container.retina.pixelRatio;\n        return (canvas.width * canvas.height) / (densityOptions.factor * pxRatio * pxRatio * densityOptions.area);\n    }\n}\nexports.Particles = Particles;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Retina = void 0;\nconst Utils_1 = require(\"../Utils\");\nclass Retina {\n    constructor(container) {\n        this.container = container;\n    }\n    init() {\n        const container = this.container;\n        const options = container.actualOptions;\n        if (options.detectRetina) {\n            this.pixelRatio = Utils_1.Utils.isSsr() ? 1 : window.devicePixelRatio;\n        }\n        else {\n            this.pixelRatio = 1;\n        }\n        const motionOptions = this.container.actualOptions.motion;\n        if (motionOptions && (motionOptions.disable || motionOptions.reduce.value)) {\n            if (Utils_1.Utils.isSsr() || typeof matchMedia === \"undefined\" || !matchMedia) {\n                this.reduceFactor = 1;\n            }\n            else {\n                const mediaQuery = matchMedia(\"(prefers-reduced-motion: reduce)\");\n                if (mediaQuery) {\n                    this.handleMotionChange(mediaQuery);\n                    const handleChange = () => {\n                        this.handleMotionChange(mediaQuery);\n                        container.refresh().catch(() => {\n                        });\n                    };\n                    if (mediaQuery.addEventListener !== undefined) {\n                        mediaQuery.addEventListener(\"change\", handleChange);\n                    }\n                    else if (mediaQuery.addListener !== undefined) {\n                        mediaQuery.addListener(handleChange);\n                    }\n                }\n            }\n        }\n        else {\n            this.reduceFactor = 1;\n        }\n        const ratio = this.pixelRatio;\n        if (container.canvas.element) {\n            const element = container.canvas.element;\n            container.canvas.size.width = element.offsetWidth * ratio;\n            container.canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles;\n        this.linksDistance = particles.links.distance * ratio;\n        this.linksWidth = particles.links.width * ratio;\n        this.sizeAnimationSpeed = particles.size.animation.speed * ratio;\n        const modes = options.interactivity.modes;\n        this.connectModeDistance = modes.connect.distance * ratio;\n        this.connectModeRadius = modes.connect.radius * ratio;\n        this.grabModeDistance = modes.grab.distance * ratio;\n        this.repulseModeDistance = modes.repulse.distance * ratio;\n        this.bounceModeDistance = modes.bounce.distance * ratio;\n        this.attractModeDistance = modes.attract.distance * ratio;\n        this.slowModeRadius = modes.slow.radius * ratio;\n        this.bubbleModeDistance = modes.bubble.distance * ratio;\n        if (modes.bubble.size) {\n            this.bubbleModeSize = modes.bubble.size * ratio;\n        }\n    }\n    initParticle(particle) {\n        const particlesOptions = particle.options;\n        const ratio = this.pixelRatio;\n        particle.linksDistance = particlesOptions.links.distance * ratio;\n        particle.linksWidth = particlesOptions.links.width * ratio;\n        particle.moveDrift = Utils_1.NumberUtils.getRangeValue(particlesOptions.move.drift) * ratio;\n        particle.moveSpeed = Utils_1.NumberUtils.getRangeValue(particlesOptions.move.speed) * ratio;\n        particle.sizeAnimationSpeed = particlesOptions.size.animation.speed * ratio;\n        particle.maxDistance = particlesOptions.move.distance * ratio;\n    }\n    handleMotionChange(mediaQuery) {\n        const options = this.container.actualOptions;\n        if (mediaQuery.matches) {\n            const motion = options.motion;\n            this.reduceFactor = motion.disable ? 0 : motion.reduce.value ? 1 / motion.reduce.factor : 1;\n        }\n        else {\n            this.reduceFactor = 1;\n        }\n    }\n}\nexports.Retina = Retina;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FrameManager = void 0;\nclass FrameManager {\n    constructor(container) {\n        this.container = container;\n    }\n    nextFrame(timestamp) {\n        try {\n            const container = this.container;\n            if (container.lastFrameTime !== undefined &&\n                timestamp < container.lastFrameTime + 1000 / container.fpsLimit) {\n                container.draw();\n                return;\n            }\n            const deltaValue = timestamp - container.lastFrameTime;\n            const delta = {\n                value: deltaValue,\n                factor: (60 * deltaValue) / 1000,\n            };\n            container.lastFrameTime = timestamp;\n            container.particles.draw(delta);\n            if (container.getAnimationStatus()) {\n                container.draw();\n            }\n        }\n        catch (e) {\n            console.error(\"tsParticles error in animation loop\", e);\n        }\n    }\n}\nexports.FrameManager = FrameManager;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ClickEvent = void 0;\nclass ClickEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n    }\n}\nexports.ClickEvent = ClickEvent;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DivEvent = void 0;\nconst Enums_1 = require(\"../../../../Enums\");\nclass DivEvent {\n    constructor() {\n        this.selectors = [];\n        this.enable = false;\n        this.mode = [];\n        this.type = Enums_1.DivType.circle;\n    }\n    get elementId() {\n        return this.ids;\n    }\n    set elementId(value) {\n        this.ids = value;\n    }\n    get el() {\n        return this.elementId;\n    }\n    set el(value) {\n        this.elementId = value;\n    }\n    get ids() {\n        if (this.selectors instanceof Array) {\n            return this.selectors.map((t) => t.replace(\"#\", \"\"));\n        }\n        else {\n            return this.selectors.replace(\"#\", \"\");\n        }\n    }\n    set ids(value) {\n        if (value instanceof Array) {\n            this.selectors = value.map((t) => `#${t}`);\n        }\n        else {\n            this.selectors = `#${value}`;\n        }\n    }\n    load(data) {\n        var _a, _b;\n        if (data === undefined) {\n            return;\n        }\n        const ids = (_b = (_a = data.ids) !== null && _a !== void 0 ? _a : data.elementId) !== null && _b !== void 0 ? _b : data.el;\n        if (ids !== undefined) {\n            this.ids = ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\nexports.DivEvent = DivEvent;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Parallax = void 0;\nclass Parallax {\n    constructor() {\n        this.enable = false;\n        this.force = 2;\n        this.smooth = 10;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.force !== undefined) {\n            this.force = data.force;\n        }\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n    }\n}\nexports.Parallax = Parallax;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HoverEvent = void 0;\nconst Parallax_1 = require(\"./Parallax\");\nclass HoverEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n        this.parallax = new Parallax_1.Parallax();\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.parallax.load(data.parallax);\n    }\n}\nexports.HoverEvent = HoverEvent;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Events = void 0;\nconst ClickEvent_1 = require(\"./ClickEvent\");\nconst DivEvent_1 = require(\"./DivEvent\");\nconst HoverEvent_1 = require(\"./HoverEvent\");\nclass Events {\n    constructor() {\n        this.onClick = new ClickEvent_1.ClickEvent();\n        this.onDiv = new DivEvent_1.DivEvent();\n        this.onHover = new HoverEvent_1.HoverEvent();\n        this.resize = true;\n    }\n    get onclick() {\n        return this.onClick;\n    }\n    set onclick(value) {\n        this.onClick = value;\n    }\n    get ondiv() {\n        return this.onDiv;\n    }\n    set ondiv(value) {\n        this.onDiv = value;\n    }\n    get onhover() {\n        return this.onHover;\n    }\n    set onhover(value) {\n        this.onHover = value;\n    }\n    load(data) {\n        var _a, _b, _c;\n        if (data === undefined) {\n            return;\n        }\n        this.onClick.load((_a = data.onClick) !== null && _a !== void 0 ? _a : data.onclick);\n        const onDiv = (_b = data.onDiv) !== null && _b !== void 0 ? _b : data.ondiv;\n        if (onDiv !== undefined) {\n            if (onDiv instanceof Array) {\n                this.onDiv = onDiv.map((div) => {\n                    const tmp = new DivEvent_1.DivEvent();\n                    tmp.load(div);\n                    return tmp;\n                });\n            }\n            else {\n                this.onDiv = new DivEvent_1.DivEvent();\n                this.onDiv.load(onDiv);\n            }\n        }\n        this.onHover.load((_c = data.onHover) !== null && _c !== void 0 ? _c : data.onhover);\n        if (data.resize !== undefined) {\n            this.resize = data.resize;\n        }\n    }\n}\nexports.Events = Events;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BubbleBase = void 0;\nconst OptionsColor_1 = require(\"../../OptionsColor\");\nclass BubbleBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.color !== undefined) {\n            if (data.color instanceof Array) {\n                this.color = data.color.map((s) => OptionsColor_1.OptionsColor.create(undefined, s));\n            }\n            else {\n                if (this.color instanceof Array) {\n                    this.color = new OptionsColor_1.OptionsColor();\n                }\n                this.color = OptionsColor_1.OptionsColor.create(this.color, data.color);\n            }\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n    }\n}\nexports.BubbleBase = BubbleBase;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BubbleDiv = void 0;\nconst BubbleBase_1 = require(\"./BubbleBase\");\nclass BubbleDiv extends BubbleBase_1.BubbleBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    get ids() {\n        if (this.selectors instanceof Array) {\n            return this.selectors.map((t) => t.replace(\"#\", \"\"));\n        }\n        else {\n            return this.selectors.replace(\"#\", \"\");\n        }\n    }\n    set ids(value) {\n        if (value instanceof Array) {\n            this.selectors = value.map((t) => `#${t}`);\n        }\n        else {\n            this.selectors = `#${value}`;\n        }\n    }\n    load(data) {\n        super.load(data);\n        if (data === undefined) {\n            return;\n        }\n        if (data.ids !== undefined) {\n            this.ids = data.ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\nexports.BubbleDiv = BubbleDiv;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Bubble = void 0;\nconst BubbleDiv_1 = require(\"./BubbleDiv\");\nconst BubbleBase_1 = require(\"./BubbleBase\");\nclass Bubble extends BubbleBase_1.BubbleBase {\n    load(data) {\n        super.load(data);\n        if (!(data !== undefined && data.divs !== undefined)) {\n            return;\n        }\n        if (data.divs instanceof Array) {\n            this.divs = data.divs.map((s) => {\n                const tmp = new BubbleDiv_1.BubbleDiv();\n                tmp.load(s);\n                return tmp;\n            });\n        }\n        else {\n            if (this.divs instanceof Array || !this.divs) {\n                this.divs = new BubbleDiv_1.BubbleDiv();\n            }\n            this.divs.load(data.divs);\n        }\n    }\n}\nexports.Bubble = Bubble;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectLinks = void 0;\nclass ConnectLinks {\n    constructor() {\n        this.opacity = 0.5;\n    }\n    load(data) {\n        if (!(data !== undefined && data.opacity !== undefined)) {\n            return;\n        }\n        this.opacity = data.opacity;\n    }\n}\nexports.ConnectLinks = ConnectLinks;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Connect = void 0;\nconst ConnectLinks_1 = require(\"./ConnectLinks\");\nclass Connect {\n    constructor() {\n        this.distance = 80;\n        this.links = new ConnectLinks_1.ConnectLinks();\n        this.radius = 60;\n    }\n    get line_linked() {\n        return this.links;\n    }\n    set line_linked(value) {\n        this.links = value;\n    }\n    get lineLinked() {\n        return this.links;\n    }\n    set lineLinked(value) {\n        this.links = value;\n    }\n    load(data) {\n        var _a, _b;\n        if (data === undefined) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load((_b = (_a = data.links) !== null && _a !== void 0 ? _a : data.lineLinked) !== null && _b !== void 0 ? _b : data.line_linked);\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\nexports.Connect = Connect;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GrabLinks = void 0;\nconst OptionsColor_1 = require(\"../../OptionsColor\");\nclass GrabLinks {\n    constructor() {\n        this.blink = false;\n        this.consent = false;\n        this.opacity = 1;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor_1.OptionsColor.create(this.color, data.color);\n        }\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\nexports.GrabLinks = GrabLinks;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Grab = void 0;\nconst GrabLinks_1 = require(\"./GrabLinks\");\nclass Grab {\n    constructor() {\n        this.distance = 100;\n        this.links = new GrabLinks_1.GrabLinks();\n    }\n    get line_linked() {\n        return this.links;\n    }\n    set line_linked(value) {\n        this.links = value;\n    }\n    get lineLinked() {\n        return this.links;\n    }\n    set lineLinked(value) {\n        this.links = value;\n    }\n    load(data) {\n        var _a, _b;\n        if (data === undefined) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load((_b = (_a = data.links) !== null && _a !== void 0 ? _a : data.lineLinked) !== null && _b !== void 0 ? _b : data.line_linked);\n    }\n}\nexports.Grab = Grab;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Remove = void 0;\nclass Remove {\n    constructor() {\n        this.quantity = 2;\n    }\n    get particles_nb() {\n        return this.quantity;\n    }\n    set particles_nb(value) {\n        this.quantity = value;\n    }\n    load(data) {\n        var _a;\n        if (data === undefined) {\n            return;\n        }\n        const quantity = (_a = data.quantity) !== null && _a !== void 0 ? _a : data.particles_nb;\n        if (quantity !== undefined) {\n            this.quantity = quantity;\n        }\n    }\n}\nexports.Remove = Remove;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Push = void 0;\nclass Push {\n    constructor() {\n        this.quantity = 4;\n    }\n    get particles_nb() {\n        return this.quantity;\n    }\n    set particles_nb(value) {\n        this.quantity = value;\n    }\n    load(data) {\n        var _a;\n        if (data === undefined) {\n            return;\n        }\n        const quantity = (_a = data.quantity) !== null && _a !== void 0 ? _a : data.particles_nb;\n        if (quantity !== undefined) {\n            this.quantity = quantity;\n        }\n    }\n}\nexports.Push = Push;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RepulseBase = void 0;\nclass RepulseBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.speed = 1;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\nexports.RepulseBase = RepulseBase;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RepulseDiv = void 0;\nconst RepulseBase_1 = require(\"./RepulseBase\");\nclass RepulseDiv extends RepulseBase_1.RepulseBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    get ids() {\n        if (this.selectors instanceof Array) {\n            return this.selectors.map((t) => t.replace(\"#\", \"\"));\n        }\n        else {\n            return this.selectors.replace(\"#\", \"\");\n        }\n    }\n    set ids(value) {\n        if (value instanceof Array) {\n            this.selectors = value.map(() => `#${value}`);\n        }\n        else {\n            this.selectors = `#${value}`;\n        }\n    }\n    load(data) {\n        super.load(data);\n        if (data === undefined) {\n            return;\n        }\n        if (data.ids !== undefined) {\n            this.ids = data.ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\nexports.RepulseDiv = RepulseDiv;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Repulse = void 0;\nconst RepulseDiv_1 = require(\"./RepulseDiv\");\nconst RepulseBase_1 = require(\"./RepulseBase\");\nclass Repulse extends RepulseBase_1.RepulseBase {\n    load(data) {\n        super.load(data);\n        if ((data === null || data === void 0 ? void 0 : data.divs) === undefined) {\n            return;\n        }\n        if (data.divs instanceof Array) {\n            this.divs = data.divs.map((s) => {\n                const tmp = new RepulseDiv_1.RepulseDiv();\n                tmp.load(s);\n                return tmp;\n            });\n        }\n        else {\n            if (this.divs instanceof Array || !this.divs) {\n                this.divs = new RepulseDiv_1.RepulseDiv();\n            }\n            this.divs.load(data.divs);\n        }\n    }\n}\nexports.Repulse = Repulse;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Slow = void 0;\nclass Slow {\n    constructor() {\n        this.factor = 3;\n        this.radius = 200;\n    }\n    get active() {\n        return false;\n    }\n    set active(_value) {\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\nexports.Slow = Slow;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Trail = void 0;\nconst Utils_1 = require(\"../../../../Utils\");\nclass Trail {\n    constructor() {\n        this.delay = 1;\n        this.quantity = 1;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.quantity !== undefined) {\n            this.quantity = data.quantity;\n        }\n        if (data.particles !== undefined) {\n            this.particles = Utils_1.Utils.deepExtend({}, data.particles);\n        }\n    }\n}\nexports.Trail = Trail;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Attract = void 0;\nclass Attract {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.speed = 1;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\nexports.Attract = Attract;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LightGradient = void 0;\nconst OptionsColor_1 = require(\"../../OptionsColor\");\nclass LightGradient {\n    constructor() {\n        this.start = new OptionsColor_1.OptionsColor();\n        this.stop = new OptionsColor_1.OptionsColor();\n        this.start.value = \"#ffffff\";\n        this.stop.value = \"#000000\";\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        this.start = OptionsColor_1.OptionsColor.create(this.start, data.start);\n        this.stop = OptionsColor_1.OptionsColor.create(this.stop, data.stop);\n    }\n}\nexports.LightGradient = LightGradient;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LightArea = void 0;\nconst LightGradient_1 = require(\"./LightGradient\");\nclass LightArea {\n    constructor() {\n        this.gradient = new LightGradient_1.LightGradient();\n        this.radius = 1000;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        this.gradient.load(data.gradient);\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\nexports.LightArea = LightArea;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LightShadow = void 0;\nconst OptionsColor_1 = require(\"../../OptionsColor\");\nclass LightShadow {\n    constructor() {\n        this.color = new OptionsColor_1.OptionsColor();\n        this.color.value = \"#000000\";\n        this.length = 2000;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        this.color = OptionsColor_1.OptionsColor.create(this.color, data.color);\n        if (data.length !== undefined) {\n            this.length = data.length;\n        }\n    }\n}\nexports.LightShadow = LightShadow;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Light = void 0;\nconst LightArea_1 = require(\"./LightArea\");\nconst LightShadow_1 = require(\"./LightShadow\");\nclass Light {\n    constructor() {\n        this.area = new LightArea_1.LightArea();\n        this.shadow = new LightShadow_1.LightShadow();\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        this.area.load(data.area);\n        this.shadow.load(data.shadow);\n    }\n}\nexports.Light = Light;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Bounce = void 0;\nclass Bounce {\n    constructor() {\n        this.distance = 200;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n    }\n}\nexports.Bounce = Bounce;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Modes = void 0;\nconst Bubble_1 = require(\"./Bubble\");\nconst Connect_1 = require(\"./Connect\");\nconst Grab_1 = require(\"./Grab\");\nconst Remove_1 = require(\"./Remove\");\nconst Push_1 = require(\"./Push\");\nconst Repulse_1 = require(\"./Repulse\");\nconst Slow_1 = require(\"./Slow\");\nconst Trail_1 = require(\"./Trail\");\nconst Attract_1 = require(\"./Attract\");\nconst Light_1 = require(\"./Light\");\nconst Bounce_1 = require(\"./Bounce\");\nclass Modes {\n    constructor() {\n        this.attract = new Attract_1.Attract();\n        this.bounce = new Bounce_1.Bounce();\n        this.bubble = new Bubble_1.Bubble();\n        this.connect = new Connect_1.Connect();\n        this.grab = new Grab_1.Grab();\n        this.light = new Light_1.Light();\n        this.push = new Push_1.Push();\n        this.remove = new Remove_1.Remove();\n        this.repulse = new Repulse_1.Repulse();\n        this.slow = new Slow_1.Slow();\n        this.trail = new Trail_1.Trail();\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        this.attract.load(data.attract);\n        this.bubble.load(data.bubble);\n        this.connect.load(data.connect);\n        this.grab.load(data.grab);\n        this.light.load(data.light);\n        this.push.load(data.push);\n        this.remove.load(data.remove);\n        this.repulse.load(data.repulse);\n        this.slow.load(data.slow);\n        this.trail.load(data.trail);\n    }\n}\nexports.Modes = Modes;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Interactivity = void 0;\nconst Enums_1 = require(\"../../../Enums\");\nconst Events_1 = require(\"./Events/Events\");\nconst Modes_1 = require(\"./Modes/Modes\");\nclass Interactivity {\n    constructor() {\n        this.detectsOn = Enums_1.InteractivityDetect.canvas;\n        this.events = new Events_1.Events();\n        this.modes = new Modes_1.Modes();\n    }\n    get detect_on() {\n        return this.detectsOn;\n    }\n    set detect_on(value) {\n        this.detectsOn = value;\n    }\n    load(data) {\n        var _a, _b, _c;\n        if (data === undefined) {\n            return;\n        }\n        const detectsOn = (_a = data.detectsOn) !== null && _a !== void 0 ? _a : data.detect_on;\n        if (detectsOn !== undefined) {\n            this.detectsOn = detectsOn;\n        }\n        this.events.load(data.events);\n        this.modes.load(data.modes);\n        if (((_c = (_b = data.modes) === null || _b === void 0 ? void 0 : _b.slow) === null || _c === void 0 ? void 0 : _c.active) === true) {\n            if (this.events.onHover.mode instanceof Array) {\n                if (this.events.onHover.mode.indexOf(Enums_1.HoverMode.slow) < 0) {\n                    this.events.onHover.mode.push(Enums_1.HoverMode.slow);\n                }\n            }\n            else if (this.events.onHover.mode !== Enums_1.HoverMode.slow) {\n                this.events.onHover.mode = [this.events.onHover.mode, Enums_1.HoverMode.slow];\n            }\n        }\n    }\n}\nexports.Interactivity = Interactivity;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BackgroundMaskCover = void 0;\nconst OptionsColor_1 = require(\"../OptionsColor\");\nclass BackgroundMaskCover {\n    constructor() {\n        this.color = new OptionsColor_1.OptionsColor();\n        this.opacity = 1;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor_1.OptionsColor.create(this.color, data.color);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\nexports.BackgroundMaskCover = BackgroundMaskCover;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BackgroundMask = void 0;\nconst BackgroundMaskCover_1 = require(\"./BackgroundMaskCover\");\nclass BackgroundMask {\n    constructor() {\n        this.composite = \"destination-out\";\n        this.cover = new BackgroundMaskCover_1.BackgroundMaskCover();\n        this.enable = false;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.composite !== undefined) {\n            this.composite = data.composite;\n        }\n        if (data.cover !== undefined) {\n            const cover = data.cover;\n            const color = (typeof data.cover === \"string\" ? { color: data.cover } : data.cover);\n            this.cover.load(cover.color !== undefined ? cover : { color: color });\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\nexports.BackgroundMask = BackgroundMask;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Background = void 0;\nconst OptionsColor_1 = require(\"../OptionsColor\");\nclass Background {\n    constructor() {\n        this.color = new OptionsColor_1.OptionsColor();\n        this.color.value = \"\";\n        this.image = \"\";\n        this.position = \"\";\n        this.repeat = \"\";\n        this.size = \"\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor_1.OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        if (data.position !== undefined) {\n            this.position = data.position;\n        }\n        if (data.repeat !== undefined) {\n            this.repeat = data.repeat;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\nexports.Background = Background;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InfectionStage = void 0;\nconst OptionsColor_1 = require(\"../OptionsColor\");\nclass InfectionStage {\n    constructor() {\n        this.color = new OptionsColor_1.OptionsColor();\n        this.color.value = \"#ff0000\";\n        this.radius = 0;\n        this.rate = 1;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor_1.OptionsColor.create(this.color, data.color);\n        }\n        this.duration = data.duration;\n        this.infectedStage = data.infectedStage;\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n        if (data.rate !== undefined) {\n            this.rate = data.rate;\n        }\n    }\n}\nexports.InfectionStage = InfectionStage;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Infection = void 0;\nconst InfectionStage_1 = require(\"./InfectionStage\");\nclass Infection {\n    constructor() {\n        this.cure = false;\n        this.delay = 0;\n        this.enable = false;\n        this.infections = 0;\n        this.stages = [];\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.cure !== undefined) {\n            this.cure = data.cure;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.infections !== undefined) {\n            this.infections = data.infections;\n        }\n        if (data.stages === undefined) {\n            return;\n        }\n        this.stages = data.stages.map((t) => {\n            const s = new InfectionStage_1.InfectionStage();\n            s.load(t);\n            return s;\n        });\n    }\n}\nexports.Infection = Infection;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ThemeDefault = void 0;\nconst Modes_1 = require(\"../../../Enums/Modes\");\nclass ThemeDefault {\n    constructor() {\n        this.mode = Modes_1.ThemeMode.any;\n        this.value = false;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\nexports.ThemeDefault = ThemeDefault;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Theme = void 0;\nconst Utils_1 = require(\"../../../Utils\");\nconst ThemeDefault_1 = require(\"./ThemeDefault\");\nclass Theme {\n    constructor() {\n        this.name = \"\";\n        this.default = new ThemeDefault_1.ThemeDefault();\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        this.default.load(data.default);\n        if (data.options !== undefined) {\n            this.options = Utils_1.Utils.deepExtend({}, data.options);\n        }\n    }\n}\nexports.Theme = Theme;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FullScreen = void 0;\nclass FullScreen {\n    constructor() {\n        this.enable = false;\n        this.zIndex = -1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.zIndex !== undefined) {\n            this.zIndex = data.zIndex;\n        }\n    }\n}\nexports.FullScreen = FullScreen;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MotionReduce = void 0;\nclass MotionReduce {\n    constructor() {\n        this.factor = 4;\n        this.value = true;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\nexports.MotionReduce = MotionReduce;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Motion = void 0;\nconst MotionReduce_1 = require(\"./MotionReduce\");\nclass Motion {\n    constructor() {\n        this.disable = false;\n        this.reduce = new MotionReduce_1.MotionReduce();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.disable !== undefined) {\n            this.disable = data.disable;\n        }\n        this.reduce.load(data.reduce);\n    }\n}\nexports.Motion = Motion;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ManualParticle = void 0;\nconst Utils_1 = require(\"../../Utils\");\nclass ManualParticle {\n    load(data) {\n        var _a, _b;\n        if (!data) {\n            return;\n        }\n        if (data.position !== undefined) {\n            this.position = {\n                x: (_a = data.position.x) !== null && _a !== void 0 ? _a : 50,\n                y: (_b = data.position.y) !== null && _b !== void 0 ? _b : 50,\n            };\n        }\n        if (data.options !== undefined) {\n            this.options = Utils_1.Utils.deepExtend({}, data.options);\n        }\n    }\n}\nexports.ManualParticle = ManualParticle;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Responsive = void 0;\nconst Utils_1 = require(\"../../Utils\");\nclass Responsive {\n    constructor() {\n        this.maxWidth = Infinity;\n        this.options = {};\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.maxWidth !== undefined) {\n            this.maxWidth = data.maxWidth;\n        }\n        if (data.options !== undefined) {\n            this.options = Utils_1.Utils.deepExtend({}, data.options);\n        }\n    }\n}\nexports.Responsive = Responsive;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Options = void 0;\nconst Interactivity_1 = require(\"./Interactivity/Interactivity\");\nconst Particles_1 = require(\"./Particles/Particles\");\nconst BackgroundMask_1 = require(\"./BackgroundMask/BackgroundMask\");\nconst Background_1 = require(\"./Background/Background\");\nconst Infection_1 = require(\"./Infection/Infection\");\nconst Utils_1 = require(\"../../Utils\");\nconst Theme_1 = require(\"./Theme/Theme\");\nconst Modes_1 = require(\"../../Enums/Modes\");\nconst FullScreen_1 = require(\"./FullScreen/FullScreen\");\nconst Motion_1 = require(\"./Motion/Motion\");\nconst ManualParticle_1 = require(\"./ManualParticle\");\nconst Responsive_1 = require(\"./Responsive\");\nclass Options {\n    constructor() {\n        this.autoPlay = true;\n        this.background = new Background_1.Background();\n        this.backgroundMask = new BackgroundMask_1.BackgroundMask();\n        this.fullScreen = new FullScreen_1.FullScreen();\n        this.detectRetina = true;\n        this.fpsLimit = 60;\n        this.infection = new Infection_1.Infection();\n        this.interactivity = new Interactivity_1.Interactivity();\n        this.manualParticles = [];\n        this.motion = new Motion_1.Motion();\n        this.particles = new Particles_1.Particles();\n        this.pauseOnBlur = true;\n        this.pauseOnOutsideViewport = true;\n        this.responsive = [];\n        this.themes = [];\n    }\n    get fps_limit() {\n        return this.fpsLimit;\n    }\n    set fps_limit(value) {\n        this.fpsLimit = value;\n    }\n    get retina_detect() {\n        return this.detectRetina;\n    }\n    set retina_detect(value) {\n        this.detectRetina = value;\n    }\n    get backgroundMode() {\n        return this.fullScreen;\n    }\n    set backgroundMode(value) {\n        this.fullScreen.load(value);\n    }\n    load(data) {\n        var _a, _b, _c;\n        if (data === undefined) {\n            return;\n        }\n        if (data.preset !== undefined) {\n            if (data.preset instanceof Array) {\n                for (const preset of data.preset) {\n                    this.importPreset(preset);\n                }\n            }\n            else {\n                this.importPreset(data.preset);\n            }\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        const detectRetina = (_a = data.detectRetina) !== null && _a !== void 0 ? _a : data.retina_detect;\n        if (detectRetina !== undefined) {\n            this.detectRetina = detectRetina;\n        }\n        const fpsLimit = (_b = data.fpsLimit) !== null && _b !== void 0 ? _b : data.fps_limit;\n        if (fpsLimit !== undefined) {\n            this.fpsLimit = fpsLimit;\n        }\n        if (data.pauseOnBlur !== undefined) {\n            this.pauseOnBlur = data.pauseOnBlur;\n        }\n        if (data.pauseOnOutsideViewport !== undefined) {\n            this.pauseOnOutsideViewport = data.pauseOnOutsideViewport;\n        }\n        this.background.load(data.background);\n        this.fullScreen.load((_c = data.fullScreen) !== null && _c !== void 0 ? _c : data.backgroundMode);\n        this.backgroundMask.load(data.backgroundMask);\n        this.infection.load(data.infection);\n        this.interactivity.load(data.interactivity);\n        if (data.manualParticles !== undefined) {\n            this.manualParticles = data.manualParticles.map((t) => {\n                const tmp = new ManualParticle_1.ManualParticle();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.motion.load(data.motion);\n        this.particles.load(data.particles);\n        Utils_1.Plugins.loadOptions(this, data);\n        if (data.responsive !== undefined) {\n            for (const responsive of data.responsive) {\n                const optResponsive = new Responsive_1.Responsive();\n                optResponsive.load(responsive);\n                this.responsive.push(optResponsive);\n            }\n        }\n        this.responsive.sort((a, b) => a.maxWidth - b.maxWidth);\n        if (data.themes !== undefined) {\n            for (const theme of data.themes) {\n                const optTheme = new Theme_1.Theme();\n                optTheme.load(theme);\n                this.themes.push(optTheme);\n            }\n        }\n    }\n    setTheme(name) {\n        if (name) {\n            const chosenTheme = this.themes.find((theme) => theme.name === name);\n            if (chosenTheme) {\n                this.load(chosenTheme.options);\n            }\n        }\n        else {\n            const clientDarkMode = typeof matchMedia !== \"undefined\" && matchMedia(\"(prefers-color-scheme: dark)\").matches;\n            let defaultTheme = this.themes.find((theme) => theme.default.value &&\n                ((theme.default.mode === Modes_1.ThemeMode.dark && clientDarkMode) ||\n                    (theme.default.mode === Modes_1.ThemeMode.light && !clientDarkMode)));\n            if (!defaultTheme) {\n                defaultTheme = this.themes.find((theme) => theme.default.value && theme.default.mode === Modes_1.ThemeMode.any);\n            }\n            if (defaultTheme) {\n                this.load(defaultTheme.options);\n            }\n        }\n    }\n    importPreset(preset) {\n        this.load(Utils_1.Plugins.getPreset(preset));\n    }\n    setResponsive(width, pxRatio, defaultOptions) {\n        var _a;\n        this.load(defaultOptions);\n        this.load((_a = this.responsive.find((t) => t.maxWidth * pxRatio > width)) === null || _a === void 0 ? void 0 : _a.options);\n    }\n}\nexports.Options = Options;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Container = void 0;\nconst Canvas_1 = require(\"./Canvas\");\nconst Particles_1 = require(\"./Particles\");\nconst Retina_1 = require(\"./Retina\");\nconst FrameManager_1 = require(\"./FrameManager\");\nconst Options_1 = require(\"../Options/Classes/Options\");\nconst Utils_1 = require(\"../Utils\");\nconst Vector_1 = require(\"./Particle/Vector\");\nclass Container {\n    constructor(id, sourceOptions, ...presets) {\n        this.id = id;\n        this.fpsLimit = 60;\n        this.firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this.paused = true;\n        this.lastFrameTime = 0;\n        this.pageHidden = false;\n        this._sourceOptions = sourceOptions;\n        this.retina = new Retina_1.Retina(this);\n        this.canvas = new Canvas_1.Canvas(this);\n        this.particles = new Particles_1.Particles(this);\n        this.drawer = new FrameManager_1.FrameManager(this);\n        this.pathGenerator = {\n            generate: () => {\n                const v = Vector_1.Vector.create(0, 0);\n                v.length = Math.random();\n                v.angle = Math.random() * Math.PI * 2;\n                return v;\n            },\n            init: () => {\n            },\n            update: () => {\n            },\n        };\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.bubble = {};\n        this.repulse = { particles: [] };\n        this.attract = { particles: [] };\n        this.plugins = new Map();\n        this.drawers = new Map();\n        this.density = 1;\n        this._options = new Options_1.Options();\n        this.actualOptions = new Options_1.Options();\n        for (const preset of presets) {\n            this._options.load(Utils_1.Plugins.getPreset(preset));\n        }\n        const shapes = Utils_1.Plugins.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = Utils_1.Plugins.getShapeDrawer(type);\n            if (drawer) {\n                this.drawers.set(type, drawer);\n            }\n        }\n        if (this._options) {\n            this._options.load(this._sourceOptions);\n        }\n        this.eventListeners = new Utils_1.EventListeners(this);\n        if (typeof IntersectionObserver !== \"undefined\" && IntersectionObserver) {\n            this.intersectionObserver = new IntersectionObserver((entries) => this.intersectionManager(entries));\n        }\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    play(force) {\n        const needsUpdate = this.paused || force;\n        if (this.firstStart && !this.actualOptions.autoPlay) {\n            this.firstStart = false;\n            return;\n        }\n        if (this.paused) {\n            this.paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n            this.lastFrameTime = performance.now();\n        }\n        this.draw();\n    }\n    pause() {\n        if (this.drawAnimationFrame !== undefined) {\n            Utils_1.Utils.cancelAnimation(this.drawAnimationFrame);\n            delete this.drawAnimationFrame;\n        }\n        if (this.paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            if (plugin.pause) {\n                plugin.pause();\n            }\n        }\n        if (!this.pageHidden) {\n            this.paused = true;\n        }\n    }\n    draw() {\n        this.drawAnimationFrame = Utils_1.Utils.animate((timestamp) => this.drawer.nextFrame(timestamp));\n    }\n    getAnimationStatus() {\n        return !this.paused;\n    }\n    setNoise(noiseOrGenerator, init, update) {\n        this.setPath(noiseOrGenerator, init, update);\n    }\n    setPath(pathOrGenerator, init, update) {\n        if (!pathOrGenerator) {\n            return;\n        }\n        if (typeof pathOrGenerator === \"function\") {\n            this.pathGenerator.generate = pathOrGenerator;\n            if (init) {\n                this.pathGenerator.init = init;\n            }\n            if (update) {\n                this.pathGenerator.update = update;\n            }\n        }\n        else {\n            if (pathOrGenerator.generate) {\n                this.pathGenerator.generate = pathOrGenerator.generate;\n            }\n            if (pathOrGenerator.init) {\n                this.pathGenerator.init = pathOrGenerator.init;\n            }\n            if (pathOrGenerator.update) {\n                this.pathGenerator.update = pathOrGenerator.update;\n            }\n        }\n    }\n    destroy() {\n        this.stop();\n        this.canvas.destroy();\n        for (const [, drawer] of this.drawers) {\n            if (drawer.destroy) {\n                drawer.destroy(this);\n            }\n        }\n        for (const key of this.drawers.keys()) {\n            this.drawers.delete(key);\n        }\n        this.destroyed = true;\n    }\n    exportImg(callback) {\n        this.exportImage(callback);\n    }\n    exportImage(callback, type, quality) {\n        var _a;\n        return (_a = this.canvas.element) === null || _a === void 0 ? void 0 : _a.toBlob(callback, type !== null && type !== void 0 ? type : \"image/png\", quality);\n    }\n    exportConfiguration() {\n        return JSON.stringify(this.actualOptions, undefined, 2);\n    }\n    refresh() {\n        this.stop();\n        return this.start();\n    }\n    reset() {\n        this._options = new Options_1.Options();\n        return this.refresh();\n    }\n    stop() {\n        if (!this.started) {\n            return;\n        }\n        this.firstStart = true;\n        this.started = false;\n        this.eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.clear();\n        if (this.interactivity.element instanceof HTMLElement && this.intersectionObserver) {\n            this.intersectionObserver.observe(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            if (plugin.stop) {\n                plugin.stop();\n            }\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this.particles.linksColors = new Map();\n        delete this.particles.grabLineColor;\n        delete this.particles.linksColor;\n    }\n    loadTheme(name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.actualOptions.setTheme(name);\n            yield this.refresh();\n        });\n    }\n    start() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.started) {\n                return;\n            }\n            yield this.init();\n            this.started = true;\n            this.eventListeners.addListeners();\n            if (this.interactivity.element instanceof HTMLElement && this.intersectionObserver) {\n                this.intersectionObserver.observe(this.interactivity.element);\n            }\n            for (const [, plugin] of this.plugins) {\n                if (plugin.startAsync !== undefined) {\n                    yield plugin.startAsync();\n                }\n                else if (plugin.start !== undefined) {\n                    plugin.start();\n                }\n            }\n            this.play();\n        });\n    }\n    init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.actualOptions = new Options_1.Options();\n            this.actualOptions.load(this._options);\n            this.retina.init();\n            this.canvas.init();\n            this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n            this.actualOptions.setTheme(undefined);\n            this.fpsLimit = this.actualOptions.fpsLimit > 0 ? this.actualOptions.fpsLimit : 60;\n            const availablePlugins = Utils_1.Plugins.getAvailablePlugins(this);\n            for (const [id, plugin] of availablePlugins) {\n                this.plugins.set(id, plugin);\n            }\n            for (const [, drawer] of this.drawers) {\n                if (drawer.init) {\n                    yield drawer.init(this);\n                }\n            }\n            for (const [, plugin] of this.plugins) {\n                if (plugin.init) {\n                    plugin.init(this.actualOptions);\n                }\n                else if (plugin.initAsync !== undefined) {\n                    yield plugin.initAsync(this.actualOptions);\n                }\n            }\n            this.canvas.resize();\n            this.particles.init();\n            this.particles.setDensity();\n        });\n    }\n    intersectionManager(entries) {\n        if (!this.actualOptions.pauseOnOutsideViewport) {\n            return;\n        }\n        for (const entry of entries) {\n            if (entry.target !== this.interactivity.element) {\n                continue;\n            }\n            if (entry.isIntersecting) {\n                this.play();\n            }\n            else {\n                this.pause();\n            }\n        }\n    }\n}\nexports.Container = Container;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Loader = void 0;\nconst Container_1 = require(\"./Container\");\nconst Utils_1 = require(\"../Utils\");\nconst tsParticlesDom = [];\nfunction fetchError(statusCode) {\n    console.error(`Error tsParticles - fetch status: ${statusCode}`);\n    console.error(\"Error tsParticles - File config not found\");\n}\nclass Loader {\n    static dom() {\n        return tsParticlesDom;\n    }\n    static domItem(index) {\n        const dom = Loader.dom();\n        const item = dom[index];\n        if (item && !item.destroyed) {\n            return item;\n        }\n        dom.splice(index, 1);\n    }\n    static load(tagId, options, index) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const domContainer = document.getElementById(tagId);\n            if (!domContainer) {\n                return;\n            }\n            return Loader.set(tagId, domContainer, options, index);\n        });\n    }\n    static set(id, domContainer, options, index) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const currentOptions = options instanceof Array ? Utils_1.Utils.itemFromArray(options, index) : options;\n            const dom = Loader.dom();\n            const oldIndex = dom.findIndex((v) => v.id === id);\n            if (oldIndex >= 0) {\n                const old = Loader.domItem(oldIndex);\n                if (old && !old.destroyed) {\n                    old.destroy();\n                    dom.splice(oldIndex, 1);\n                }\n            }\n            let canvasEl;\n            let generatedCanvas;\n            if (domContainer.tagName.toLowerCase() === \"canvas\") {\n                canvasEl = domContainer;\n                generatedCanvas = false;\n            }\n            else {\n                const existingCanvases = domContainer.getElementsByTagName(\"canvas\");\n                if (existingCanvases.length) {\n                    canvasEl = existingCanvases[0];\n                    if (!canvasEl.className) {\n                        canvasEl.className = Utils_1.Constants.canvasClass;\n                    }\n                    generatedCanvas = false;\n                }\n                else {\n                    generatedCanvas = true;\n                    canvasEl = document.createElement(\"canvas\");\n                    canvasEl.className = Utils_1.Constants.canvasClass;\n                    canvasEl.style.width = \"100%\";\n                    canvasEl.style.height = \"100%\";\n                    domContainer.appendChild(canvasEl);\n                }\n            }\n            const newItem = new Container_1.Container(id, currentOptions);\n            if (oldIndex >= 0) {\n                dom.splice(oldIndex, 0, newItem);\n            }\n            else {\n                dom.push(newItem);\n            }\n            newItem.canvas.loadCanvas(canvasEl, generatedCanvas);\n            yield newItem.start();\n            return newItem;\n        });\n    }\n    static loadJSON(tagId, jsonUrl, index) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const url = jsonUrl instanceof Array ? Utils_1.Utils.itemFromArray(jsonUrl, index) : jsonUrl;\n            const response = yield fetch(url);\n            if (response.ok) {\n                return Loader.load(tagId, yield response.json());\n            }\n            else {\n                fetchError(response.status);\n            }\n        });\n    }\n    static setJSON(id, domContainer, jsonUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield fetch(jsonUrl);\n            if (response.ok) {\n                const options = yield response.json();\n                return Loader.set(id, domContainer, options);\n            }\n            else {\n                fetchError(response.status);\n            }\n        });\n    }\n    static setOnClickHandler(callback) {\n        const dom = Loader.dom();\n        if (dom.length === 0) {\n            throw new Error(\"Can only set click handlers after calling tsParticles.load() or tsParticles.loadJSON()\");\n        }\n        for (const domItem of dom) {\n            const el = domItem.interactivity.element;\n            if (!el) {\n                continue;\n            }\n            const clickOrTouchHandler = (e, pos) => {\n                if (domItem.destroyed) {\n                    return;\n                }\n                const pxRatio = domItem.retina.pixelRatio;\n                const posRetina = {\n                    x: pos.x * pxRatio,\n                    y: pos.y * pxRatio,\n                };\n                const particles = domItem.particles.quadTree.queryCircle(posRetina, domItem.retina.sizeValue);\n                callback(e, particles);\n            };\n            const clickHandler = (e) => {\n                if (domItem.destroyed) {\n                    return;\n                }\n                const mouseEvent = e;\n                const pos = {\n                    x: mouseEvent.offsetX || mouseEvent.clientX,\n                    y: mouseEvent.offsetY || mouseEvent.clientY,\n                };\n                clickOrTouchHandler(e, pos);\n            };\n            const touchStartHandler = () => {\n                if (domItem.destroyed) {\n                    return;\n                }\n                touched = true;\n                touchMoved = false;\n            };\n            const touchMoveHandler = () => {\n                if (domItem.destroyed) {\n                    return;\n                }\n                touchMoved = true;\n            };\n            const touchEndHandler = (e) => {\n                var _a, _b, _c;\n                if (domItem.destroyed) {\n                    return;\n                }\n                if (touched && !touchMoved) {\n                    const touchEvent = e;\n                    const lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n                    const canvasRect = (_a = domItem.canvas.element) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect();\n                    const pos = {\n                        x: lastTouch.clientX - ((_b = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.left) !== null && _b !== void 0 ? _b : 0),\n                        y: lastTouch.clientY - ((_c = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.top) !== null && _c !== void 0 ? _c : 0),\n                    };\n                    clickOrTouchHandler(e, pos);\n                }\n                touched = false;\n                touchMoved = false;\n            };\n            const touchCancelHandler = () => {\n                if (domItem.destroyed) {\n                    return;\n                }\n                touched = false;\n                touchMoved = false;\n            };\n            let touched = false;\n            let touchMoved = false;\n            el.addEventListener(\"click\", clickHandler);\n            el.addEventListener(\"touchstart\", touchStartHandler);\n            el.addEventListener(\"touchmove\", touchMoveHandler);\n            el.addEventListener(\"touchend\", touchEndHandler);\n            el.addEventListener(\"touchcancel\", touchCancelHandler);\n        }\n    }\n}\nexports.Loader = Loader;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to set private field on non-instance\");\n    }\n    privateMap.set(receiver, value);\n    return value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to get private field on non-instance\");\n    }\n    return privateMap.get(receiver);\n};\nvar _initialized;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MainSlim = void 0;\nconst SquareDrawer_1 = require(\"./ShapeDrawers/SquareDrawer\");\nconst TextDrawer_1 = require(\"./ShapeDrawers/TextDrawer\");\nconst ImageDrawer_1 = require(\"./ShapeDrawers/ImageDrawer\");\nconst Utils_1 = require(\"./Utils\");\nconst Types_1 = require(\"./Enums/Types\");\nconst LineDrawer_1 = require(\"./ShapeDrawers/LineDrawer\");\nconst CircleDrawer_1 = require(\"./ShapeDrawers/CircleDrawer\");\nconst TriangleDrawer_1 = require(\"./ShapeDrawers/TriangleDrawer\");\nconst StarDrawer_1 = require(\"./ShapeDrawers/StarDrawer\");\nconst PolygonDrawer_1 = require(\"./ShapeDrawers/PolygonDrawer\");\nconst Loader_1 = require(\"./Core/Loader\");\nclass MainSlim {\n    constructor() {\n        _initialized.set(this, void 0);\n        __classPrivateFieldSet(this, _initialized, false);\n        const squareDrawer = new SquareDrawer_1.SquareDrawer();\n        const textDrawer = new TextDrawer_1.TextDrawer();\n        const imageDrawer = new ImageDrawer_1.ImageDrawer();\n        Utils_1.Plugins.addShapeDrawer(Types_1.ShapeType.line, new LineDrawer_1.LineDrawer());\n        Utils_1.Plugins.addShapeDrawer(Types_1.ShapeType.circle, new CircleDrawer_1.CircleDrawer());\n        Utils_1.Plugins.addShapeDrawer(Types_1.ShapeType.edge, squareDrawer);\n        Utils_1.Plugins.addShapeDrawer(Types_1.ShapeType.square, squareDrawer);\n        Utils_1.Plugins.addShapeDrawer(Types_1.ShapeType.triangle, new TriangleDrawer_1.TriangleDrawer());\n        Utils_1.Plugins.addShapeDrawer(Types_1.ShapeType.star, new StarDrawer_1.StarDrawer());\n        Utils_1.Plugins.addShapeDrawer(Types_1.ShapeType.polygon, new PolygonDrawer_1.PolygonDrawer());\n        Utils_1.Plugins.addShapeDrawer(Types_1.ShapeType.char, textDrawer);\n        Utils_1.Plugins.addShapeDrawer(Types_1.ShapeType.character, textDrawer);\n        Utils_1.Plugins.addShapeDrawer(Types_1.ShapeType.image, imageDrawer);\n        Utils_1.Plugins.addShapeDrawer(Types_1.ShapeType.images, imageDrawer);\n    }\n    init() {\n        if (!__classPrivateFieldGet(this, _initialized)) {\n            __classPrivateFieldSet(this, _initialized, true);\n        }\n    }\n    loadFromArray(tagId, options, index) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return Loader_1.Loader.load(tagId, options, index);\n        });\n    }\n    load(tagId, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return Loader_1.Loader.load(tagId, options);\n        });\n    }\n    set(id, element, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return Loader_1.Loader.set(id, element, options);\n        });\n    }\n    loadJSON(tagId, pathConfigJson, index) {\n        return Loader_1.Loader.loadJSON(tagId, pathConfigJson, index);\n    }\n    setOnClickHandler(callback) {\n        Loader_1.Loader.setOnClickHandler(callback);\n    }\n    dom() {\n        return Loader_1.Loader.dom();\n    }\n    domItem(index) {\n        return Loader_1.Loader.domItem(index);\n    }\n    addShape(shape, drawer, init, afterEffect, destroy) {\n        let customDrawer;\n        if (typeof drawer === \"function\") {\n            customDrawer = {\n                afterEffect: afterEffect,\n                destroy: destroy,\n                draw: drawer,\n                init: init,\n            };\n        }\n        else {\n            customDrawer = drawer;\n        }\n        Utils_1.Plugins.addShapeDrawer(shape, customDrawer);\n    }\n    addPreset(preset, options) {\n        Utils_1.Plugins.addPreset(preset, options);\n    }\n    addPlugin(plugin) {\n        Utils_1.Plugins.addPlugin(plugin);\n    }\n    addPathGenerator(name, generator) {\n        Utils_1.Plugins.addPathGenerator(name, generator);\n    }\n}\nexports.MainSlim = MainSlim;\n_initialized = new WeakMap();\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbsorberInstance = void 0;\nconst Utils_1 = require(\"../../Utils\");\nconst Vector_1 = require(\"../../Core/Particle/Vector\");\nclass AbsorberInstance {\n    constructor(absorbers, container, options, position) {\n        var _a, _b, _c;\n        this.absorbers = absorbers;\n        this.container = container;\n        this.initialPosition = position ? Vector_1.Vector.create(position.x, position.y) : undefined;\n        this.options = options;\n        this.dragging = false;\n        this.name = this.options.name;\n        this.opacity = this.options.opacity;\n        this.size = Utils_1.NumberUtils.getValue(options.size) * container.retina.pixelRatio;\n        this.mass = this.size * options.size.density * container.retina.reduceFactor;\n        const limit = options.size.limit;\n        this.limit = limit !== undefined ? limit * container.retina.pixelRatio * container.retina.reduceFactor : limit;\n        const color = typeof options.color === \"string\" ? { value: options.color } : options.color;\n        this.color = (_a = Utils_1.ColorUtils.colorToRgb(color)) !== null && _a !== void 0 ? _a : {\n            b: 0,\n            g: 0,\n            r: 0,\n        };\n        this.position = (_c = (_b = this.initialPosition) === null || _b === void 0 ? void 0 : _b.copy()) !== null && _c !== void 0 ? _c : this.calcPosition();\n    }\n    attract(particle) {\n        const options = this.options;\n        if (options.draggable) {\n            const mouse = this.container.interactivity.mouse;\n            if (mouse.clicking && mouse.downPosition) {\n                const mouseDist = Utils_1.NumberUtils.getDistance(this.position, mouse.downPosition);\n                if (mouseDist <= this.size) {\n                    this.dragging = true;\n                }\n            }\n            else {\n                this.dragging = false;\n            }\n            if (this.dragging && mouse.position) {\n                this.position.x = mouse.position.x;\n                this.position.y = mouse.position.y;\n            }\n        }\n        const pos = particle.getPosition();\n        const { dx, dy, distance } = Utils_1.NumberUtils.getDistances(this.position, pos);\n        const v = Vector_1.Vector.create(dx, dy);\n        v.length = (this.mass / Math.pow(distance, 2)) * this.container.retina.reduceFactor;\n        if (distance < this.size + particle.getRadius()) {\n            const sizeFactor = particle.getRadius() * 0.033 * this.container.retina.pixelRatio;\n            if (this.size > particle.getRadius() && distance < this.size - particle.getRadius()) {\n                if (options.destroy) {\n                    particle.destroy();\n                }\n                else {\n                    particle.needsNewPosition = true;\n                    this.updateParticlePosition(particle, v);\n                }\n            }\n            else {\n                if (options.destroy) {\n                    particle.size.value -= sizeFactor;\n                }\n                this.updateParticlePosition(particle, v);\n            }\n            if (this.limit === undefined || this.size < this.limit) {\n                this.size += sizeFactor;\n            }\n            this.mass += sizeFactor * this.options.size.density * this.container.retina.reduceFactor;\n        }\n        else {\n            this.updateParticlePosition(particle, v);\n        }\n    }\n    resize() {\n        const initialPosition = this.initialPosition;\n        this.position =\n            initialPosition && Utils_1.Utils.isPointInside(initialPosition, this.container.canvas.size)\n                ? initialPosition\n                : this.calcPosition();\n    }\n    draw(context) {\n        context.translate(this.position.x, this.position.y);\n        context.beginPath();\n        context.arc(0, 0, this.size, 0, Math.PI * 2, false);\n        context.closePath();\n        context.fillStyle = Utils_1.ColorUtils.getStyleFromRgb(this.color, this.opacity);\n        context.fill();\n    }\n    calcPosition() {\n        var _a, _b;\n        const container = this.container;\n        const percentPosition = this.options.position;\n        return Vector_1.Vector.create((((_a = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.x) !== null && _a !== void 0 ? _a : Math.random() * 100) / 100) * container.canvas.size.width, (((_b = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.y) !== null && _b !== void 0 ? _b : Math.random() * 100) / 100) * container.canvas.size.height);\n    }\n    updateParticlePosition(particle, v) {\n        var _a;\n        if (particle.destroyed) {\n            return;\n        }\n        const canvasSize = this.container.canvas.size;\n        if (particle.needsNewPosition) {\n            const pSize = particle.getRadius();\n            particle.position.x = Math.random() * (canvasSize.width - pSize * 2) + pSize;\n            particle.position.y = Math.random() * (canvasSize.height - pSize * 2) + pSize;\n            particle.needsNewPosition = false;\n        }\n        if (this.options.orbits) {\n            if (particle.orbit === undefined) {\n                particle.orbit = Vector_1.Vector.create(0, 0);\n                particle.orbit.length = Utils_1.NumberUtils.getDistance(particle.getPosition(), this.position);\n                particle.orbit.angle = Math.random() * Math.PI * 2;\n            }\n            if (particle.orbit.length <= this.size && !this.options.destroy) {\n                particle.orbit.length = Math.random() * Math.max(canvasSize.width, canvasSize.height);\n            }\n            particle.velocity.x = 0;\n            particle.velocity.y = 0;\n            particle.position.setTo(particle.orbit.add(this.position));\n            particle.orbit.length -= v.length;\n            particle.orbit.angle +=\n                (((_a = particle.moveSpeed) !== null && _a !== void 0 ? _a : Utils_1.NumberUtils.getRangeValue(particle.options.move.speed) * this.container.retina.pixelRatio) /\n                    100) *\n                    this.container.retina.reduceFactor;\n        }\n        else {\n            particle.velocity.addTo(v);\n        }\n    }\n}\nexports.AbsorberInstance = AbsorberInstance;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbsorberSize = void 0;\nconst ValueWithRandom_1 = require(\"../../../../Options/Classes/ValueWithRandom\");\nclass AbsorberSize extends ValueWithRandom_1.ValueWithRandom {\n    constructor() {\n        super();\n        this.density = 5;\n        this.random.minimumValue = 1;\n        this.value = 50;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.density !== undefined) {\n            this.density = data.density;\n        }\n        if (data.limit !== undefined) {\n            this.limit = data.limit;\n        }\n        if (data.limit !== undefined) {\n            this.limit = data.limit;\n        }\n    }\n}\nexports.AbsorberSize = AbsorberSize;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Absorber = void 0;\nconst AbsorberSize_1 = require(\"./AbsorberSize\");\nconst OptionsColor_1 = require(\"../../../../Options/Classes/OptionsColor\");\nclass Absorber {\n    constructor() {\n        this.color = new OptionsColor_1.OptionsColor();\n        this.color.value = \"#000000\";\n        this.draggable = false;\n        this.opacity = 1;\n        this.destroy = true;\n        this.orbits = false;\n        this.size = new AbsorberSize_1.AbsorberSize();\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor_1.OptionsColor.create(this.color, data.color);\n        }\n        if (data.draggable !== undefined) {\n            this.draggable = data.draggable;\n        }\n        this.name = data.name;\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.position !== undefined) {\n            this.position = {\n                x: data.position.x,\n                y: data.position.y,\n            };\n        }\n        if (data.size !== undefined) {\n            this.size.load(data.size);\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n        if (data.orbits !== undefined) {\n            this.orbits = data.orbits;\n        }\n    }\n}\nexports.Absorber = Absorber;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbsorberClickMode = void 0;\nvar AbsorberClickMode;\n(function (AbsorberClickMode) {\n    AbsorberClickMode[\"absorber\"] = \"absorber\";\n})(AbsorberClickMode = exports.AbsorberClickMode || (exports.AbsorberClickMode = {}));\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./AbsorberClickMode\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Absorbers = void 0;\nconst AbsorberInstance_1 = require(\"./AbsorberInstance\");\nconst Utils_1 = require(\"../../Utils\");\nconst Absorber_1 = require(\"./Options/Classes/Absorber\");\nconst Enums_1 = require(\"./Enums\");\nclass Absorbers {\n    constructor(container) {\n        this.container = container;\n        this.array = [];\n        this.absorbers = [];\n        this.interactivityAbsorbers = [];\n        const overridableContainer = container;\n        overridableContainer.addAbsorber = (options, position) => this.addAbsorber(options, position);\n    }\n    init(options) {\n        var _a, _b;\n        if (!options) {\n            return;\n        }\n        if (options.absorbers) {\n            if (options.absorbers instanceof Array) {\n                this.absorbers = options.absorbers.map((s) => {\n                    const tmp = new Absorber_1.Absorber();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                if (this.absorbers instanceof Array) {\n                    this.absorbers = new Absorber_1.Absorber();\n                }\n                this.absorbers.load(options.absorbers);\n            }\n        }\n        const interactivityAbsorbers = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.absorbers;\n        if (interactivityAbsorbers) {\n            if (interactivityAbsorbers instanceof Array) {\n                this.interactivityAbsorbers = interactivityAbsorbers.map((s) => {\n                    const tmp = new Absorber_1.Absorber();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                if (this.interactivityAbsorbers instanceof Array) {\n                    this.interactivityAbsorbers = new Absorber_1.Absorber();\n                }\n                this.interactivityAbsorbers.load(interactivityAbsorbers);\n            }\n        }\n        if (this.absorbers instanceof Array) {\n            for (const absorberOptions of this.absorbers) {\n                this.addAbsorber(absorberOptions);\n            }\n        }\n        else {\n            this.addAbsorber(this.absorbers);\n        }\n    }\n    particleUpdate(particle) {\n        for (const absorber of this.array) {\n            absorber.attract(particle);\n            if (particle.destroyed) {\n                break;\n            }\n        }\n    }\n    draw(context) {\n        for (const absorber of this.array) {\n            context.save();\n            absorber.draw(context);\n            context.restore();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n    resize() {\n        for (const absorber of this.array) {\n            absorber.resize();\n        }\n    }\n    handleClickMode(mode) {\n        const container = this.container;\n        const absorberOptions = this.absorbers;\n        const modeAbsorbers = this.interactivityAbsorbers;\n        if (mode === Enums_1.AbsorberClickMode.absorber) {\n            let absorbersModeOptions;\n            if (modeAbsorbers instanceof Array) {\n                if (modeAbsorbers.length > 0) {\n                    absorbersModeOptions = Utils_1.Utils.itemFromArray(modeAbsorbers);\n                }\n            }\n            else {\n                absorbersModeOptions = modeAbsorbers;\n            }\n            const absorbersOptions = absorbersModeOptions !== null && absorbersModeOptions !== void 0 ? absorbersModeOptions : (absorberOptions instanceof Array ? Utils_1.Utils.itemFromArray(absorberOptions) : absorberOptions);\n            const aPosition = container.interactivity.mouse.clickPosition;\n            this.addAbsorber(absorbersOptions, aPosition);\n        }\n    }\n    addAbsorber(options, position) {\n        const absorber = new AbsorberInstance_1.AbsorberInstance(this, this.container, options, position);\n        this.array.push(absorber);\n        return absorber;\n    }\n    removeAbsorber(absorber) {\n        const index = this.array.indexOf(absorber);\n        if (index >= 0) {\n            this.array.splice(index, 1);\n        }\n    }\n}\nexports.Absorbers = Absorbers;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbsorbersPlugin = void 0;\nconst Absorbers_1 = require(\"./Absorbers\");\nconst Utils_1 = require(\"../../Utils\");\nconst Enums_1 = require(\"./Enums\");\nconst Absorber_1 = require(\"./Options/Classes/Absorber\");\nclass AbsorbersPlugin {\n    constructor() {\n        this.id = \"absorbers\";\n    }\n    getPlugin(container) {\n        return new Absorbers_1.Absorbers(container);\n    }\n    needsPlugin(options) {\n        var _a, _b, _c;\n        if (options === undefined) {\n            return false;\n        }\n        const absorbers = options.absorbers;\n        let loadAbsorbers = false;\n        if (absorbers instanceof Array) {\n            if (absorbers.length) {\n                loadAbsorbers = true;\n            }\n        }\n        else if (absorbers !== undefined) {\n            loadAbsorbers = true;\n        }\n        else if (((_c = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.events) === null || _b === void 0 ? void 0 : _b.onClick) === null || _c === void 0 ? void 0 : _c.mode) &&\n            Utils_1.Utils.isInArray(Enums_1.AbsorberClickMode.absorber, options.interactivity.events.onClick.mode)) {\n            loadAbsorbers = true;\n        }\n        return loadAbsorbers;\n    }\n    loadOptions(options, source) {\n        var _a, _b;\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        const optionsCast = options;\n        if (source === null || source === void 0 ? void 0 : source.absorbers) {\n            if ((source === null || source === void 0 ? void 0 : source.absorbers) instanceof Array) {\n                optionsCast.absorbers = source === null || source === void 0 ? void 0 : source.absorbers.map((s) => {\n                    const tmp = new Absorber_1.Absorber();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                let absorberOptions = optionsCast.absorbers;\n                if ((absorberOptions === null || absorberOptions === void 0 ? void 0 : absorberOptions.load) === undefined) {\n                    optionsCast.absorbers = absorberOptions = new Absorber_1.Absorber();\n                }\n                absorberOptions.load(source === null || source === void 0 ? void 0 : source.absorbers);\n            }\n        }\n        const interactivityAbsorbers = (_b = (_a = source === null || source === void 0 ? void 0 : source.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.absorbers;\n        if (interactivityAbsorbers) {\n            if (interactivityAbsorbers instanceof Array) {\n                optionsCast.interactivity.modes.absorbers = interactivityAbsorbers.map((s) => {\n                    const tmp = new Absorber_1.Absorber();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                let absorberOptions = optionsCast.interactivity.modes.absorbers;\n                if ((absorberOptions === null || absorberOptions === void 0 ? void 0 : absorberOptions.load) === undefined) {\n                    optionsCast.interactivity.modes.absorbers = absorberOptions = new Absorber_1.Absorber();\n                }\n                absorberOptions.load(interactivityAbsorbers);\n            }\n        }\n    }\n}\nconst plugin = new AbsorbersPlugin();\nexports.AbsorbersPlugin = plugin;\n__exportStar(require(\"./Enums\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EmitterSize = void 0;\nconst Enums_1 = require(\"../../../../Enums\");\nclass EmitterSize {\n    constructor() {\n        this.mode = Enums_1.SizeMode.percent;\n        this.height = 0;\n        this.width = 0;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.height !== undefined) {\n            this.height = data.height;\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n    }\n}\nexports.EmitterSize = EmitterSize;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EmitterInstance = void 0;\nconst Utils_1 = require(\"../../Utils\");\nconst Enums_1 = require(\"../../Enums\");\nconst EmitterSize_1 = require(\"./Options/Classes/EmitterSize\");\nfunction randomCoordinate(position, offset) {\n    return position + offset * (Math.random() - 0.5);\n}\nfunction randomPosition(position, offset) {\n    return {\n        x: randomCoordinate(position.x, offset.x),\n        y: randomCoordinate(position.y, offset.y),\n    };\n}\nclass EmitterInstance {\n    constructor(emitters, container, emitterOptions, position) {\n        var _a, _b, _c, _d;\n        this.emitters = emitters;\n        this.container = container;\n        this.firstSpawn = true;\n        this.currentDuration = 0;\n        this.currentEmitDelay = 0;\n        this.currentSpawnDelay = 0;\n        this.initialPosition = position;\n        this.emitterOptions = Utils_1.Utils.deepExtend({}, emitterOptions);\n        this.spawnDelay = (((_a = this.emitterOptions.life.delay) !== null && _a !== void 0 ? _a : 0) * 1000) / this.container.retina.reduceFactor;\n        this.position = (_b = this.initialPosition) !== null && _b !== void 0 ? _b : this.calcPosition();\n        this.name = emitterOptions.name;\n        let particlesOptions = Utils_1.Utils.deepExtend({}, this.emitterOptions.particles);\n        if (particlesOptions === undefined) {\n            particlesOptions = {};\n        }\n        if (particlesOptions.move === undefined) {\n            particlesOptions.move = {};\n        }\n        if (particlesOptions.move.direction === undefined) {\n            particlesOptions.move.direction = this.emitterOptions.direction;\n        }\n        if (this.emitterOptions.spawnColor !== undefined) {\n            this.spawnColor = Utils_1.ColorUtils.colorToHsl(this.emitterOptions.spawnColor);\n        }\n        this.paused = !this.emitterOptions.autoPlay;\n        this.particlesOptions = particlesOptions;\n        this.size =\n            (_c = this.emitterOptions.size) !== null && _c !== void 0 ? _c : (() => {\n                const size = new EmitterSize_1.EmitterSize();\n                size.load({\n                    height: 0,\n                    mode: Enums_1.SizeMode.percent,\n                    width: 0,\n                });\n                return size;\n            })();\n        this.lifeCount = (_d = this.emitterOptions.life.count) !== null && _d !== void 0 ? _d : -1;\n        this.immortal = this.lifeCount <= 0;\n        this.play();\n    }\n    externalPlay() {\n        this.paused = false;\n        this.play();\n    }\n    externalPause() {\n        this.paused = true;\n        this.pause();\n    }\n    play() {\n        if (this.paused) {\n            return;\n        }\n        if (this.container.retina.reduceFactor &&\n            (this.lifeCount > 0 || this.immortal || !this.emitterOptions.life.count)) {\n            if (this.emitDelay === undefined) {\n                this.emitDelay = (1000 * this.emitterOptions.rate.delay) / this.container.retina.reduceFactor;\n            }\n            if (this.lifeCount > 0 || this.immortal) {\n                this.prepareToDie();\n            }\n        }\n    }\n    pause() {\n        if (this.paused) {\n            return;\n        }\n        delete this.emitDelay;\n    }\n    resize() {\n        const initialPosition = this.initialPosition;\n        this.position =\n            initialPosition && Utils_1.Utils.isPointInside(initialPosition, this.container.canvas.size)\n                ? initialPosition\n                : this.calcPosition();\n    }\n    update(delta) {\n        var _a, _b, _c;\n        if (this.paused) {\n            return;\n        }\n        if (this.firstSpawn) {\n            this.firstSpawn = false;\n            this.currentSpawnDelay = (_a = this.spawnDelay) !== null && _a !== void 0 ? _a : 0;\n            this.currentEmitDelay = (_b = this.emitDelay) !== null && _b !== void 0 ? _b : 0;\n            delta.value = 0;\n        }\n        if (this.duration !== undefined) {\n            this.currentDuration += delta.value;\n            if (this.currentDuration >= this.duration) {\n                this.pause();\n                if (this.spawnDelay !== undefined) {\n                    delete this.spawnDelay;\n                }\n                if (!this.immortal) {\n                    this.lifeCount--;\n                }\n                if (this.lifeCount > 0 || this.immortal) {\n                    this.position = this.calcPosition();\n                    this.spawnDelay =\n                        (((_c = this.emitterOptions.life.delay) !== null && _c !== void 0 ? _c : 0) * 1000) / this.container.retina.reduceFactor;\n                }\n                else {\n                    this.destroy();\n                }\n                this.currentDuration -= this.duration;\n                delete this.duration;\n            }\n        }\n        if (this.spawnDelay !== undefined) {\n            this.currentSpawnDelay += delta.value;\n            if (this.currentSpawnDelay >= this.spawnDelay) {\n                this.play();\n                this.currentSpawnDelay -= this.currentSpawnDelay;\n                delete this.spawnDelay;\n            }\n        }\n        if (this.emitDelay !== undefined) {\n            this.currentEmitDelay += delta.value;\n            if (this.currentEmitDelay >= this.emitDelay) {\n                this.emit();\n                this.currentEmitDelay -= this.emitDelay;\n            }\n        }\n    }\n    prepareToDie() {\n        var _a;\n        if (this.paused) {\n            return;\n        }\n        const duration = (_a = this.emitterOptions.life) === null || _a === void 0 ? void 0 : _a.duration;\n        if (this.container.retina.reduceFactor &&\n            (this.lifeCount > 0 || this.immortal) &&\n            duration !== undefined &&\n            duration > 0) {\n            this.duration = duration * 1000;\n        }\n    }\n    destroy() {\n        this.emitters.removeEmitter(this);\n    }\n    calcPosition() {\n        var _a, _b;\n        const container = this.container;\n        const percentPosition = this.emitterOptions.position;\n        return {\n            x: (((_a = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.x) !== null && _a !== void 0 ? _a : Math.random() * 100) / 100) * container.canvas.size.width,\n            y: (((_b = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.y) !== null && _b !== void 0 ? _b : Math.random() * 100) / 100) * container.canvas.size.height,\n        };\n    }\n    emit() {\n        var _a;\n        if (this.paused) {\n            return;\n        }\n        const container = this.container;\n        const position = this.position;\n        const offset = {\n            x: this.size.mode === Enums_1.SizeMode.percent\n                ? (container.canvas.size.width * this.size.width) / 100\n                : this.size.width,\n            y: this.size.mode === Enums_1.SizeMode.percent\n                ? (container.canvas.size.height * this.size.height) / 100\n                : this.size.height,\n        };\n        for (let i = 0; i < this.emitterOptions.rate.quantity; i++) {\n            const particlesOptions = Utils_1.Utils.deepExtend({}, this.particlesOptions);\n            if (this.spawnColor !== undefined) {\n                const colorAnimation = (_a = this.emitterOptions.spawnColor) === null || _a === void 0 ? void 0 : _a.animation;\n                if (colorAnimation) {\n                    const hueAnimation = colorAnimation;\n                    if (hueAnimation.enable) {\n                        this.spawnColor.h = this.setColorAnimation(hueAnimation, this.spawnColor.h, 360);\n                    }\n                    else {\n                        const hslAnimation = colorAnimation;\n                        this.spawnColor.h = this.setColorAnimation(hslAnimation.h, this.spawnColor.h, 360);\n                        this.spawnColor.s = this.setColorAnimation(hslAnimation.s, this.spawnColor.s, 100);\n                        this.spawnColor.l = this.setColorAnimation(hslAnimation.l, this.spawnColor.l, 100);\n                    }\n                }\n                if (!particlesOptions.color) {\n                    particlesOptions.color = {\n                        value: this.spawnColor,\n                    };\n                }\n                else {\n                    particlesOptions.color.value = this.spawnColor;\n                }\n            }\n            container.particles.addParticle(randomPosition(position, offset), particlesOptions);\n        }\n    }\n    setColorAnimation(animation, initValue, maxValue) {\n        var _a;\n        const container = this.container;\n        if (!animation.enable) {\n            return initValue;\n        }\n        const colorOffset = Utils_1.NumberUtils.randomInRange(animation.offset);\n        const emitFactor = (1000 * this.emitterOptions.rate.delay) / container.retina.reduceFactor;\n        const colorSpeed = (_a = animation.speed) !== null && _a !== void 0 ? _a : 0;\n        return (initValue + (colorSpeed * container.fpsLimit) / emitFactor + colorOffset * 3.6) % maxValue;\n    }\n}\nexports.EmitterInstance = EmitterInstance;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EmitterRate = void 0;\nclass EmitterRate {\n    constructor() {\n        this.quantity = 1;\n        this.delay = 0.1;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.quantity !== undefined) {\n            this.quantity = data.quantity;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n    }\n}\nexports.EmitterRate = EmitterRate;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EmitterLife = void 0;\nclass EmitterLife {\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n    }\n}\nexports.EmitterLife = EmitterLife;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Emitter = void 0;\nconst Enums_1 = require(\"../../../../Enums\");\nconst EmitterRate_1 = require(\"./EmitterRate\");\nconst EmitterLife_1 = require(\"./EmitterLife\");\nconst Utils_1 = require(\"../../../../Utils\");\nconst EmitterSize_1 = require(\"./EmitterSize\");\nconst AnimatableColor_1 = require(\"../../../../Options/Classes/Particles/AnimatableColor\");\nclass Emitter {\n    constructor() {\n        this.autoPlay = true;\n        this.direction = Enums_1.MoveDirection.none;\n        this.life = new EmitterLife_1.EmitterLife();\n        this.rate = new EmitterRate_1.EmitterRate();\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.size !== undefined) {\n            if (this.size === undefined) {\n                this.size = new EmitterSize_1.EmitterSize();\n            }\n            this.size.load(data.size);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        this.life.load(data.life);\n        this.name = data.name;\n        if (data.particles !== undefined) {\n            this.particles = Utils_1.Utils.deepExtend({}, data.particles);\n        }\n        this.rate.load(data.rate);\n        if (data.position !== undefined) {\n            this.position = {\n                x: data.position.x,\n                y: data.position.y,\n            };\n        }\n        if (data.spawnColor !== undefined) {\n            if (this.spawnColor === undefined) {\n                this.spawnColor = new AnimatableColor_1.AnimatableColor();\n            }\n            this.spawnColor.load(data.spawnColor);\n        }\n    }\n}\nexports.Emitter = Emitter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EmitterClickMode = void 0;\nvar EmitterClickMode;\n(function (EmitterClickMode) {\n    EmitterClickMode[\"emitter\"] = \"emitter\";\n})(EmitterClickMode = exports.EmitterClickMode || (exports.EmitterClickMode = {}));\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./EmitterClickMode\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Emitters = void 0;\nconst EmitterInstance_1 = require(\"./EmitterInstance\");\nconst Utils_1 = require(\"../../Utils\");\nconst Emitter_1 = require(\"./Options/Classes/Emitter\");\nconst Enums_1 = require(\"./Enums\");\nclass Emitters {\n    constructor(container) {\n        this.container = container;\n        this.array = [];\n        this.emitters = [];\n        this.interactivityEmitters = [];\n        const overridableContainer = container;\n        overridableContainer.addEmitter = (options, position) => this.addEmitter(options, position);\n        overridableContainer.playEmitter = (idxOrName) => {\n            const emitter = idxOrName === undefined || typeof idxOrName === \"number\"\n                ? this.array[idxOrName || 0]\n                : this.array.find((t) => t.name === idxOrName);\n            if (emitter) {\n                emitter.externalPlay();\n            }\n        };\n        overridableContainer.pauseEmitter = (idxOrName) => {\n            const emitter = idxOrName === undefined || typeof idxOrName === \"number\"\n                ? this.array[idxOrName || 0]\n                : this.array.find((t) => t.name === idxOrName);\n            if (emitter) {\n                emitter.externalPause();\n            }\n        };\n    }\n    init(options) {\n        var _a, _b;\n        if (!options) {\n            return;\n        }\n        if (options.emitters) {\n            if (options.emitters instanceof Array) {\n                this.emitters = options.emitters.map((s) => {\n                    const tmp = new Emitter_1.Emitter();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                if (this.emitters instanceof Array) {\n                    this.emitters = new Emitter_1.Emitter();\n                }\n                this.emitters.load(options.emitters);\n            }\n        }\n        const interactivityEmitters = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.emitters;\n        if (interactivityEmitters) {\n            if (interactivityEmitters instanceof Array) {\n                this.interactivityEmitters = interactivityEmitters.map((s) => {\n                    const tmp = new Emitter_1.Emitter();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                if (this.interactivityEmitters instanceof Array) {\n                    this.interactivityEmitters = new Emitter_1.Emitter();\n                }\n                this.interactivityEmitters.load(interactivityEmitters);\n            }\n        }\n        if (this.emitters instanceof Array) {\n            for (const emitterOptions of this.emitters) {\n                this.addEmitter(emitterOptions);\n            }\n        }\n        else {\n            this.addEmitter(this.emitters);\n        }\n    }\n    play() {\n        for (const emitter of this.array) {\n            emitter.play();\n        }\n    }\n    pause() {\n        for (const emitter of this.array) {\n            emitter.pause();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n    update(delta) {\n        for (const emitter of this.array) {\n            emitter.update(delta);\n        }\n    }\n    handleClickMode(mode) {\n        const container = this.container;\n        const emitterOptions = this.emitters;\n        const modeEmitters = this.interactivityEmitters;\n        if (mode === Enums_1.EmitterClickMode.emitter) {\n            let emitterModeOptions;\n            if (modeEmitters instanceof Array) {\n                if (modeEmitters.length > 0) {\n                    emitterModeOptions = Utils_1.Utils.itemFromArray(modeEmitters);\n                }\n            }\n            else {\n                emitterModeOptions = modeEmitters;\n            }\n            const emittersOptions = emitterModeOptions !== null && emitterModeOptions !== void 0 ? emitterModeOptions : (emitterOptions instanceof Array ? Utils_1.Utils.itemFromArray(emitterOptions) : emitterOptions);\n            const ePosition = container.interactivity.mouse.clickPosition;\n            this.addEmitter(Utils_1.Utils.deepExtend({}, emittersOptions), ePosition);\n        }\n    }\n    resize() {\n        for (const emitter of this.array) {\n            emitter.resize();\n        }\n    }\n    addEmitter(options, position) {\n        const emitter = new EmitterInstance_1.EmitterInstance(this, this.container, options, position);\n        this.array.push(emitter);\n        return emitter;\n    }\n    removeEmitter(emitter) {\n        const index = this.array.indexOf(emitter);\n        if (index >= 0) {\n            this.array.splice(index, 1);\n        }\n    }\n}\nexports.Emitters = Emitters;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EmittersPlugin = void 0;\nconst Utils_1 = require(\"../../Utils\");\nconst Emitters_1 = require(\"./Emitters\");\nconst Enums_1 = require(\"./Enums\");\nconst Emitter_1 = require(\"./Options/Classes/Emitter\");\nclass EmittersPlugin {\n    constructor() {\n        this.id = \"emitters\";\n    }\n    getPlugin(container) {\n        return new Emitters_1.Emitters(container);\n    }\n    needsPlugin(options) {\n        var _a, _b, _c;\n        if (options === undefined) {\n            return false;\n        }\n        const emitters = options.emitters;\n        let loadEmitters = false;\n        if (emitters instanceof Array) {\n            if (emitters.length) {\n                loadEmitters = true;\n            }\n        }\n        else if (emitters !== undefined) {\n            loadEmitters = true;\n        }\n        else if (((_c = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.events) === null || _b === void 0 ? void 0 : _b.onClick) === null || _c === void 0 ? void 0 : _c.mode) &&\n            Utils_1.Utils.isInArray(Enums_1.EmitterClickMode.emitter, options.interactivity.events.onClick.mode)) {\n            loadEmitters = true;\n        }\n        return loadEmitters;\n    }\n    loadOptions(options, source) {\n        var _a, _b;\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        const optionsCast = options;\n        if (source === null || source === void 0 ? void 0 : source.emitters) {\n            if ((source === null || source === void 0 ? void 0 : source.emitters) instanceof Array) {\n                optionsCast.emitters = source === null || source === void 0 ? void 0 : source.emitters.map((s) => {\n                    const tmp = new Emitter_1.Emitter();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                let emitterOptions = optionsCast.emitters;\n                if ((emitterOptions === null || emitterOptions === void 0 ? void 0 : emitterOptions.load) === undefined) {\n                    optionsCast.emitters = emitterOptions = new Emitter_1.Emitter();\n                }\n                emitterOptions.load(source === null || source === void 0 ? void 0 : source.emitters);\n            }\n        }\n        const interactivityEmitters = (_b = (_a = source === null || source === void 0 ? void 0 : source.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.emitters;\n        if (interactivityEmitters) {\n            if (interactivityEmitters instanceof Array) {\n                optionsCast.interactivity.modes.emitters = interactivityEmitters.map((s) => {\n                    const tmp = new Emitter_1.Emitter();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                let emitterOptions = optionsCast.interactivity.modes.emitters;\n                if ((emitterOptions === null || emitterOptions === void 0 ? void 0 : emitterOptions.load) === undefined) {\n                    optionsCast.interactivity.modes.emitters = emitterOptions = new Emitter_1.Emitter();\n                }\n                emitterOptions.load(interactivityEmitters);\n            }\n        }\n    }\n}\nconst plugin = new EmittersPlugin();\nexports.EmittersPlugin = plugin;\n__exportStar(require(\"./Enums\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InlineArrangement = void 0;\nvar InlineArrangement;\n(function (InlineArrangement) {\n    InlineArrangement[\"equidistant\"] = \"equidistant\";\n    InlineArrangement[\"onePerPoint\"] = \"one-per-point\";\n    InlineArrangement[\"perPoint\"] = \"per-point\";\n    InlineArrangement[\"randomLength\"] = \"random-length\";\n    InlineArrangement[\"randomPoint\"] = \"random-point\";\n})(InlineArrangement = exports.InlineArrangement || (exports.InlineArrangement = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MoveType = void 0;\nvar MoveType;\n(function (MoveType) {\n    MoveType[\"path\"] = \"path\";\n    MoveType[\"radius\"] = \"radius\";\n})(MoveType = exports.MoveType || (exports.MoveType = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Type = void 0;\nvar Type;\n(function (Type) {\n    Type[\"inline\"] = \"inline\";\n    Type[\"inside\"] = \"inside\";\n    Type[\"outside\"] = \"outside\";\n    Type[\"none\"] = \"none\";\n})(Type = exports.Type || (exports.Type = {}));\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./InlineArrangement\"), exports);\n__exportStar(require(\"./MoveType\"), exports);\n__exportStar(require(\"./Type\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DrawStroke = void 0;\nconst OptionsColor_1 = require(\"../../../../Options/Classes/OptionsColor\");\nconst Utils_1 = require(\"../../../../Utils\");\nclass DrawStroke {\n    constructor() {\n        this.color = new OptionsColor_1.OptionsColor();\n        this.width = 0.5;\n        this.opacity = 1;\n    }\n    load(data) {\n        var _a;\n        if (data !== undefined) {\n            this.color = OptionsColor_1.OptionsColor.create(this.color, data.color);\n            if (typeof this.color.value === \"string\") {\n                this.opacity = (_a = Utils_1.ColorUtils.stringToAlpha(this.color.value)) !== null && _a !== void 0 ? _a : this.opacity;\n            }\n            if (data.opacity !== undefined) {\n                this.opacity = data.opacity;\n            }\n            if (data.width !== undefined) {\n                this.width = data.width;\n            }\n        }\n    }\n}\nexports.DrawStroke = DrawStroke;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Draw = void 0;\nconst DrawStroke_1 = require(\"./DrawStroke\");\nconst OptionsColor_1 = require(\"../../../../Options/Classes/OptionsColor\");\nclass Draw {\n    constructor() {\n        this.enable = false;\n        this.stroke = new DrawStroke_1.DrawStroke();\n    }\n    get lineWidth() {\n        return this.stroke.width;\n    }\n    set lineWidth(value) {\n        this.stroke.width = value;\n    }\n    get lineColor() {\n        return this.stroke.color;\n    }\n    set lineColor(value) {\n        this.stroke.color = OptionsColor_1.OptionsColor.create(this.stroke.color, value);\n    }\n    load(data) {\n        var _a;\n        if (data !== undefined) {\n            if (data.enable !== undefined) {\n                this.enable = data.enable;\n            }\n            const stroke = (_a = data.stroke) !== null && _a !== void 0 ? _a : {\n                color: data.lineColor,\n                width: data.lineWidth,\n            };\n            this.stroke.load(stroke);\n        }\n    }\n}\nexports.Draw = Draw;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Move = void 0;\nconst Enums_1 = require(\"../../Enums\");\nclass Move {\n    constructor() {\n        this.radius = 10;\n        this.type = Enums_1.MoveType.path;\n    }\n    load(data) {\n        if (data !== undefined) {\n            if (data.radius !== undefined) {\n                this.radius = data.radius;\n            }\n            if (data.type !== undefined) {\n                this.type = data.type;\n            }\n        }\n    }\n}\nexports.Move = Move;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Inline = void 0;\nconst Enums_1 = require(\"../../Enums\");\nclass Inline {\n    constructor() {\n        this.arrangement = Enums_1.InlineArrangement.onePerPoint;\n    }\n    load(data) {\n        if (data !== undefined) {\n            if (data.arrangement !== undefined) {\n                this.arrangement = data.arrangement;\n            }\n        }\n    }\n}\nexports.Inline = Inline;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LocalSvg = void 0;\nclass LocalSvg {\n    constructor() {\n        this.path = [];\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n    }\n    load(data) {\n        if (data !== undefined) {\n            if (data.path !== undefined) {\n                this.path = data.path;\n            }\n            if (data.size !== undefined) {\n                if (data.size.width !== undefined) {\n                    this.size.width = data.size.width;\n                }\n                if (data.size.height !== undefined) {\n                    this.size.height = data.size.height;\n                }\n            }\n        }\n    }\n}\nexports.LocalSvg = LocalSvg;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PolygonMask = void 0;\nconst Enums_1 = require(\"../../Enums\");\nconst Draw_1 = require(\"./Draw\");\nconst Move_1 = require(\"./Move\");\nconst Inline_1 = require(\"./Inline\");\nconst LocalSvg_1 = require(\"./LocalSvg\");\nconst Utils_1 = require(\"../../../../Utils\");\nclass PolygonMask {\n    constructor() {\n        this.draw = new Draw_1.Draw();\n        this.enable = false;\n        this.inline = new Inline_1.Inline();\n        this.move = new Move_1.Move();\n        this.scale = 1;\n        this.type = Enums_1.Type.none;\n    }\n    get inlineArrangement() {\n        return this.inline.arrangement;\n    }\n    set inlineArrangement(value) {\n        this.inline.arrangement = value;\n    }\n    load(data) {\n        var _a;\n        if (data !== undefined) {\n            this.draw.load(data.draw);\n            const inline = (_a = data.inline) !== null && _a !== void 0 ? _a : {\n                arrangement: data.inlineArrangement,\n            };\n            if (inline !== undefined) {\n                this.inline.load(inline);\n            }\n            this.move.load(data.move);\n            if (data.scale !== undefined) {\n                this.scale = data.scale;\n            }\n            if (data.type !== undefined) {\n                this.type = data.type;\n            }\n            if (data.enable !== undefined) {\n                this.enable = data.enable;\n            }\n            else {\n                this.enable = this.type !== Enums_1.Type.none;\n            }\n            if (data.url !== undefined) {\n                this.url = data.url;\n            }\n            if (data.data !== undefined) {\n                if (typeof data.data === \"string\") {\n                    this.data = data.data;\n                }\n                else {\n                    this.data = new LocalSvg_1.LocalSvg();\n                    this.data.load(data.data);\n                }\n            }\n            if (data.position !== undefined) {\n                this.position = Utils_1.Utils.deepExtend({}, data.position);\n            }\n        }\n    }\n}\nexports.PolygonMask = PolygonMask;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PolygonMaskInstance = void 0;\nconst Enums_1 = require(\"./Enums\");\nconst Utils_1 = require(\"../../Utils\");\nconst PolygonMask_1 = require(\"./Options/Classes/PolygonMask\");\nfunction polygonBounce(particle) {\n    particle.velocity.x = particle.velocity.y / 2 - particle.velocity.x;\n    particle.velocity.y = particle.velocity.x / 2 - particle.velocity.y;\n}\nfunction drawPolygonMask(context, rawData, stroke) {\n    const color = Utils_1.ColorUtils.colorToRgb(stroke.color);\n    if (!color) {\n        return;\n    }\n    context.beginPath();\n    context.moveTo(rawData[0].x, rawData[0].y);\n    for (const item of rawData) {\n        context.lineTo(item.x, item.y);\n    }\n    context.closePath();\n    context.strokeStyle = Utils_1.ColorUtils.getStyleFromRgb(color);\n    context.lineWidth = stroke.width;\n    context.stroke();\n}\nfunction drawPolygonMaskPath(context, path, stroke, position) {\n    context.translate(position.x, position.y);\n    const color = Utils_1.ColorUtils.colorToRgb(stroke.color);\n    if (!color) {\n        return;\n    }\n    context.strokeStyle = Utils_1.ColorUtils.getStyleFromRgb(color, stroke.opacity);\n    context.lineWidth = stroke.width;\n    context.stroke(path);\n}\nfunction parsePaths(paths, scale, offset) {\n    const res = [];\n    for (const path of paths) {\n        const segments = path.element.pathSegList;\n        const len = segments.numberOfItems;\n        const p = {\n            x: 0,\n            y: 0,\n        };\n        for (let i = 0; i < len; i++) {\n            const segment = segments.getItem(i);\n            const svgPathSeg = window.SVGPathSeg;\n            switch (segment.pathSegType) {\n                case svgPathSeg.PATHSEG_MOVETO_ABS:\n                case svgPathSeg.PATHSEG_LINETO_ABS:\n                case svgPathSeg.PATHSEG_CURVETO_CUBIC_ABS:\n                case svgPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS:\n                case svgPathSeg.PATHSEG_ARC_ABS:\n                case svgPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS:\n                case svgPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS: {\n                    const absSeg = segment;\n                    p.x = absSeg.x;\n                    p.y = absSeg.y;\n                    break;\n                }\n                case svgPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS:\n                    p.x = segment.x;\n                    break;\n                case svgPathSeg.PATHSEG_LINETO_VERTICAL_ABS:\n                    p.y = segment.y;\n                    break;\n                case svgPathSeg.PATHSEG_LINETO_REL:\n                case svgPathSeg.PATHSEG_MOVETO_REL:\n                case svgPathSeg.PATHSEG_CURVETO_CUBIC_REL:\n                case svgPathSeg.PATHSEG_CURVETO_QUADRATIC_REL:\n                case svgPathSeg.PATHSEG_ARC_REL:\n                case svgPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL:\n                case svgPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL: {\n                    const relSeg = segment;\n                    p.x += relSeg.x;\n                    p.y += relSeg.y;\n                    break;\n                }\n                case svgPathSeg.PATHSEG_LINETO_HORIZONTAL_REL:\n                    p.x += segment.x;\n                    break;\n                case svgPathSeg.PATHSEG_LINETO_VERTICAL_REL:\n                    p.y += segment.y;\n                    break;\n                case svgPathSeg.PATHSEG_UNKNOWN:\n                case svgPathSeg.PATHSEG_CLOSEPATH:\n                    continue;\n            }\n            res.push({\n                x: p.x * scale + offset.x,\n                y: p.y * scale + offset.y,\n            });\n        }\n    }\n    return res;\n}\nclass PolygonMaskInstance {\n    constructor(container) {\n        this.container = container;\n        this.dimension = {\n            height: 0,\n            width: 0,\n        };\n        this.path2DSupported = !!window.Path2D;\n        this.options = new PolygonMask_1.PolygonMask();\n        this.polygonMaskMoveRadius = this.options.move.radius * container.retina.pixelRatio;\n    }\n    initAsync(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.options.load(options === null || options === void 0 ? void 0 : options.polygon);\n            const polygonMaskOptions = this.options;\n            this.polygonMaskMoveRadius = polygonMaskOptions.move.radius * this.container.retina.pixelRatio;\n            if (polygonMaskOptions.enable) {\n                yield this.initRawData();\n            }\n        });\n    }\n    resize() {\n        const container = this.container;\n        const options = this.options;\n        if (!(options.enable && options.type !== Enums_1.Type.none)) {\n            return;\n        }\n        if (this.redrawTimeout) {\n            clearTimeout(this.redrawTimeout);\n        }\n        this.redrawTimeout = window.setTimeout(() => __awaiter(this, void 0, void 0, function* () {\n            yield this.initRawData(true);\n            container.particles.redraw();\n        }), 250);\n    }\n    stop() {\n        delete this.raw;\n        delete this.paths;\n    }\n    particlesInitialization() {\n        const options = this.options;\n        if (options.enable &&\n            options.type === Enums_1.Type.inline &&\n            (options.inline.arrangement === Enums_1.InlineArrangement.onePerPoint ||\n                options.inline.arrangement === Enums_1.InlineArrangement.perPoint)) {\n            this.drawPoints();\n            return true;\n        }\n        return false;\n    }\n    particlePosition(position) {\n        var _a, _b;\n        const options = this.options;\n        if (!(options.enable && ((_b = (_a = this.raw) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0) > 0)) {\n            return;\n        }\n        return Utils_1.Utils.deepExtend({}, position ? position : this.randomPoint());\n    }\n    particleBounce(particle) {\n        const options = this.options;\n        if (options.enable && options.type !== Enums_1.Type.none && options.type !== Enums_1.Type.inline) {\n            if (!this.checkInsidePolygon(particle.getPosition())) {\n                polygonBounce(particle);\n                return true;\n            }\n        }\n        else if (options.enable && options.type === Enums_1.Type.inline && particle.initialPosition) {\n            const dist = Utils_1.NumberUtils.getDistance(particle.initialPosition, particle.getPosition());\n            if (dist > this.polygonMaskMoveRadius) {\n                polygonBounce(particle);\n                return true;\n            }\n        }\n        return false;\n    }\n    clickPositionValid(position) {\n        const options = this.options;\n        return (options.enable &&\n            options.type !== Enums_1.Type.none &&\n            options.type !== Enums_1.Type.inline &&\n            this.checkInsidePolygon(position));\n    }\n    draw(context) {\n        var _a;\n        if (!((_a = this.paths) === null || _a === void 0 ? void 0 : _a.length)) {\n            return;\n        }\n        const options = this.options;\n        const polygonDraw = options.draw;\n        if (!(options.enable && polygonDraw.enable)) {\n            return;\n        }\n        const rawData = this.raw;\n        for (const path of this.paths) {\n            const path2d = path.path2d;\n            const path2dSupported = this.path2DSupported;\n            if (!context) {\n                continue;\n            }\n            if (path2dSupported && path2d && this.offset) {\n                drawPolygonMaskPath(context, path2d, polygonDraw.stroke, this.offset);\n            }\n            else if (rawData) {\n                drawPolygonMask(context, rawData, polygonDraw.stroke);\n            }\n        }\n    }\n    checkInsidePolygon(position) {\n        var _a, _b;\n        const container = this.container;\n        const options = this.options;\n        if (!options.enable || options.type === Enums_1.Type.none || options.type === Enums_1.Type.inline) {\n            return true;\n        }\n        if (!this.raw) {\n            throw new Error(Utils_1.Constants.noPolygonFound);\n        }\n        const canvasSize = container.canvas.size;\n        const x = (_a = position === null || position === void 0 ? void 0 : position.x) !== null && _a !== void 0 ? _a : Math.random() * canvasSize.width;\n        const y = (_b = position === null || position === void 0 ? void 0 : position.y) !== null && _b !== void 0 ? _b : Math.random() * canvasSize.height;\n        let inside = false;\n        for (let i = 0, j = this.raw.length - 1; i < this.raw.length; j = i++) {\n            const pi = this.raw[i];\n            const pj = this.raw[j];\n            const intersect = pi.y > y !== pj.y > y && x < ((pj.x - pi.x) * (y - pi.y)) / (pj.y - pi.y) + pi.x;\n            if (intersect) {\n                inside = !inside;\n            }\n        }\n        return options.type === Enums_1.Type.inside ? inside : options.type === Enums_1.Type.outside ? !inside : false;\n    }\n    parseSvgPath(xml, force) {\n        var _a, _b, _c;\n        const forceDownload = force !== null && force !== void 0 ? force : false;\n        if (this.paths !== undefined && !forceDownload) {\n            return this.raw;\n        }\n        const container = this.container;\n        const options = this.options;\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(xml, \"image/svg+xml\");\n        const svg = doc.getElementsByTagName(\"svg\")[0];\n        let svgPaths = svg.getElementsByTagName(\"path\");\n        if (!svgPaths.length) {\n            svgPaths = doc.getElementsByTagName(\"path\");\n        }\n        this.paths = [];\n        for (let i = 0; i < svgPaths.length; i++) {\n            const path = svgPaths.item(i);\n            if (path) {\n                this.paths.push({\n                    element: path,\n                    length: path.getTotalLength(),\n                });\n            }\n        }\n        const pxRatio = container.retina.pixelRatio;\n        const scale = options.scale / pxRatio;\n        this.dimension.width = parseFloat((_a = svg.getAttribute(\"width\")) !== null && _a !== void 0 ? _a : \"0\") * scale;\n        this.dimension.height = parseFloat((_b = svg.getAttribute(\"height\")) !== null && _b !== void 0 ? _b : \"0\") * scale;\n        const position = (_c = options.position) !== null && _c !== void 0 ? _c : {\n            x: 50,\n            y: 50,\n        };\n        this.offset = {\n            x: (container.canvas.size.width * position.x) / (100 * pxRatio) - this.dimension.width / 2,\n            y: (container.canvas.size.height * position.y) / (100 * pxRatio) - this.dimension.height / 2,\n        };\n        return parsePaths(this.paths, scale, this.offset);\n    }\n    downloadSvgPath(svgUrl, force) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const options = this.options;\n            const url = svgUrl || options.url;\n            const forceDownload = force !== null && force !== void 0 ? force : false;\n            if (!url || (this.paths !== undefined && !forceDownload)) {\n                return this.raw;\n            }\n            const req = yield fetch(url);\n            if (!req.ok) {\n                throw new Error(\"tsParticles Error - Error occurred during polygon mask download\");\n            }\n            return this.parseSvgPath(yield req.text(), force);\n        });\n    }\n    drawPoints() {\n        if (!this.raw) {\n            return;\n        }\n        for (const item of this.raw) {\n            this.container.particles.addParticle({\n                x: item.x,\n                y: item.y,\n            });\n        }\n    }\n    randomPoint() {\n        const container = this.container;\n        const options = this.options;\n        let position;\n        if (options.type === Enums_1.Type.inline) {\n            switch (options.inline.arrangement) {\n                case Enums_1.InlineArrangement.randomPoint:\n                    position = this.getRandomPoint();\n                    break;\n                case Enums_1.InlineArrangement.randomLength:\n                    position = this.getRandomPointByLength();\n                    break;\n                case Enums_1.InlineArrangement.equidistant:\n                    position = this.getEquidistantPointByIndex(container.particles.count);\n                    break;\n                case Enums_1.InlineArrangement.onePerPoint:\n                case Enums_1.InlineArrangement.perPoint:\n                default:\n                    position = this.getPointByIndex(container.particles.count);\n            }\n        }\n        else {\n            position = {\n                x: Math.random() * container.canvas.size.width,\n                y: Math.random() * container.canvas.size.height,\n            };\n        }\n        if (this.checkInsidePolygon(position)) {\n            return position;\n        }\n        else {\n            return this.randomPoint();\n        }\n    }\n    getRandomPoint() {\n        if (!this.raw || !this.raw.length) {\n            throw new Error(Utils_1.Constants.noPolygonDataLoaded);\n        }\n        const coords = Utils_1.Utils.itemFromArray(this.raw);\n        return {\n            x: coords.x,\n            y: coords.y,\n        };\n    }\n    getRandomPointByLength() {\n        var _a, _b, _c;\n        const options = this.options;\n        if (!this.raw || !this.raw.length || !((_a = this.paths) === null || _a === void 0 ? void 0 : _a.length)) {\n            throw new Error(Utils_1.Constants.noPolygonDataLoaded);\n        }\n        const path = Utils_1.Utils.itemFromArray(this.paths);\n        const distance = Math.floor(Math.random() * path.length) + 1;\n        const point = path.element.getPointAtLength(distance);\n        return {\n            x: point.x * options.scale + (((_b = this.offset) === null || _b === void 0 ? void 0 : _b.x) || 0),\n            y: point.y * options.scale + (((_c = this.offset) === null || _c === void 0 ? void 0 : _c.y) || 0),\n        };\n    }\n    getEquidistantPointByIndex(index) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const options = this.container.actualOptions;\n        const polygonMaskOptions = this.options;\n        if (!this.raw || !this.raw.length || !((_a = this.paths) === null || _a === void 0 ? void 0 : _a.length))\n            throw new Error(Utils_1.Constants.noPolygonDataLoaded);\n        let offset = 0;\n        let point;\n        const totalLength = this.paths.reduce((tot, path) => tot + path.length, 0);\n        const distance = totalLength / options.particles.number.value;\n        for (const path of this.paths) {\n            const pathDistance = distance * index - offset;\n            if (pathDistance <= path.length) {\n                point = path.element.getPointAtLength(pathDistance);\n                break;\n            }\n            else {\n                offset += path.length;\n            }\n        }\n        return {\n            x: ((_b = point === null || point === void 0 ? void 0 : point.x) !== null && _b !== void 0 ? _b : 0) * polygonMaskOptions.scale + ((_d = (_c = this.offset) === null || _c === void 0 ? void 0 : _c.x) !== null && _d !== void 0 ? _d : 0),\n            y: ((_e = point === null || point === void 0 ? void 0 : point.y) !== null && _e !== void 0 ? _e : 0) * polygonMaskOptions.scale + ((_g = (_f = this.offset) === null || _f === void 0 ? void 0 : _f.y) !== null && _g !== void 0 ? _g : 0),\n        };\n    }\n    getPointByIndex(index) {\n        if (!this.raw || !this.raw.length) {\n            throw new Error(Utils_1.Constants.noPolygonDataLoaded);\n        }\n        const coords = this.raw[index % this.raw.length];\n        return {\n            x: coords.x,\n            y: coords.y,\n        };\n    }\n    createPath2D() {\n        var _a, _b;\n        const options = this.options;\n        if (!this.path2DSupported || !((_a = this.paths) === null || _a === void 0 ? void 0 : _a.length)) {\n            return;\n        }\n        for (const path of this.paths) {\n            const pathData = (_b = path.element) === null || _b === void 0 ? void 0 : _b.getAttribute(\"d\");\n            if (pathData) {\n                const path2d = new Path2D(pathData);\n                const matrix = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\").createSVGMatrix();\n                const finalPath = new Path2D();\n                const transform = matrix.scale(options.scale);\n                if (finalPath.addPath) {\n                    finalPath.addPath(path2d, transform);\n                    path.path2d = finalPath;\n                }\n                else {\n                    delete path.path2d;\n                }\n            }\n            else {\n                delete path.path2d;\n            }\n            if (path.path2d || !this.raw) {\n                continue;\n            }\n            path.path2d = new Path2D();\n            path.path2d.moveTo(this.raw[0].x, this.raw[0].y);\n            this.raw.forEach((pos, i) => {\n                var _a;\n                if (i > 0) {\n                    (_a = path.path2d) === null || _a === void 0 ? void 0 : _a.lineTo(pos.x, pos.y);\n                }\n            });\n            path.path2d.closePath();\n        }\n    }\n    initRawData(force) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const options = this.options;\n            if (options.url) {\n                this.raw = yield this.downloadSvgPath(options.url, force);\n            }\n            else if (options.data) {\n                const data = options.data;\n                let svg;\n                if (typeof data !== \"string\") {\n                    const path = data.path instanceof Array\n                        ? data.path.map((t) => `<path d=\"${t}\" />`).join(\"\")\n                        : `<path d=\"${data.path}\" />`;\n                    const namespaces = 'xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"';\n                    svg = `<svg ${namespaces} width=\"${data.size.width}\" height=\"${data.size.height}\">${path}</svg>`;\n                }\n                else {\n                    svg = data;\n                }\n                this.raw = this.parseSvgPath(svg, force);\n            }\n            this.createPath2D();\n        });\n    }\n}\nexports.PolygonMaskInstance = PolygonMaskInstance;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PolygonMaskPlugin = void 0;\nconst PolygonMaskInstance_1 = require(\"./PolygonMaskInstance\");\nconst PolygonMask_1 = require(\"./Options/Classes/PolygonMask\");\nconst Enums_1 = require(\"./Enums\");\nclass PolygonMaskPlugin {\n    constructor() {\n        this.id = \"polygonMask\";\n    }\n    getPlugin(container) {\n        return new PolygonMaskInstance_1.PolygonMaskInstance(container);\n    }\n    needsPlugin(options) {\n        var _a, _b, _c;\n        return (_b = (_a = options === null || options === void 0 ? void 0 : options.polygon) === null || _a === void 0 ? void 0 : _a.enable) !== null && _b !== void 0 ? _b : (((_c = options === null || options === void 0 ? void 0 : options.polygon) === null || _c === void 0 ? void 0 : _c.type) !== undefined && options.polygon.type !== Enums_1.Type.none);\n    }\n    loadOptions(options, source) {\n        if (!this.needsPlugin(source)) {\n            return;\n        }\n        const optionsCast = options;\n        let polygonOptions = optionsCast.polygon;\n        if ((polygonOptions === null || polygonOptions === void 0 ? void 0 : polygonOptions.load) === undefined) {\n            optionsCast.polygon = polygonOptions = new PolygonMask_1.PolygonMask();\n        }\n        polygonOptions.load(source === null || source === void 0 ? void 0 : source.polygon);\n    }\n}\nconst plugin = new PolygonMaskPlugin();\nexports.PolygonMaskPlugin = plugin;\n__exportStar(require(\"./Enums\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Main = void 0;\nconst main_slim_1 = require(\"./main.slim\");\nconst AbsorbersPlugin_1 = require(\"./Plugins/Absorbers/AbsorbersPlugin\");\nconst EmittersPlugin_1 = require(\"./Plugins/Emitters/EmittersPlugin\");\nconst PolygonMaskPlugin_1 = require(\"./Plugins/PolygonMask/PolygonMaskPlugin\");\nclass Main extends main_slim_1.MainSlim {\n    constructor() {\n        super();\n        this.addPlugin(AbsorbersPlugin_1.AbsorbersPlugin);\n        this.addPlugin(EmittersPlugin_1.EmittersPlugin);\n        this.addPlugin(PolygonMaskPlugin_1.PolygonMaskPlugin);\n    }\n}\nexports.Main = Main;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./RangeValue\"), exports);\n__exportStar(require(\"./RecursivePartial\"), exports);\n__exportStar(require(\"./ShapeData\"), exports);\n__exportStar(require(\"./ShapeDrawerFunctions\"), exports);\n__exportStar(require(\"./SingleOrMultiple\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tsParticles = exports.pJSDom = exports.particlesJS = exports.Main = exports.Utils = exports.Constants = exports.ColorUtils = exports.CanvasUtils = void 0;\nconst pjs_1 = require(\"./pjs\");\nconst main_1 = require(\"./main\");\nObject.defineProperty(exports, \"Main\", { enumerable: true, get: function () { return main_1.Main; } });\nconst Utils_1 = require(\"./Utils\");\nObject.defineProperty(exports, \"CanvasUtils\", { enumerable: true, get: function () { return Utils_1.CanvasUtils; } });\nObject.defineProperty(exports, \"ColorUtils\", { enumerable: true, get: function () { return Utils_1.ColorUtils; } });\nObject.defineProperty(exports, \"Constants\", { enumerable: true, get: function () { return Utils_1.Constants; } });\nObject.defineProperty(exports, \"Utils\", { enumerable: true, get: function () { return Utils_1.Utils; } });\nconst tsParticles = new main_1.Main();\nexports.tsParticles = tsParticles;\ntsParticles.init();\nconst { particlesJS, pJSDom } = pjs_1.initPjs(tsParticles);\nexports.particlesJS = particlesJS;\nexports.pJSDom = pJSDom;\n__exportStar(require(\"./Core/Particle/Vector\"), exports);\n__exportStar(require(\"./Core/Container\"), exports);\n__exportStar(require(\"./Enums\"), exports);\n__exportStar(require(\"./Plugins/Absorbers/Enums\"), exports);\n__exportStar(require(\"./Plugins/Emitters/Enums\"), exports);\n__exportStar(require(\"./Plugins/PolygonMask/Enums\"), exports);\n__exportStar(require(\"./Types\"), exports);\n","import FetchService from './service/FetchService';\nimport 'tachyons'\nimport Particles from \"tsparticles\";\n\nconst Particlesoptions= { fpsLimit: 60, interactivity: { detectsOn: \"canvas\", events: { onClick: { enable: true, mode: \"push\", }, onHover: { enable: true, mode: \"repulse\", }, resize: true, }, modes: { bubble: { distance: 400, duration: 2, opacity: 0.8, size: 40, }, push: { quantity: 4, }, repulse: { distance: 200, duration: 0.4, }, }, }, particles: { color: { value: \"#ffffff\", }, links: { color: \"#ffffff\", distance: 150, enable: true, opacity: 0.5, width: 1, }, collisions: { enable: true, }, move: { direction: \"none\", enable: true, outMode: \"bounce\", random: false, speed: 6, straight: false, }, number: { density: { enable: true, value_area: 800, }, value: 70, }, opacity: { value: 0.5, }, shape: { type: \"circle\", }, size: { random: true, value: 5, }, }, detectRetina: true, }\n\n/*-- Objects --*/\nconst fetchService = new FetchService();\n/*-- /Objects --*/\n\n/*--Functions--*/\nasync function submitForm(e, form) {\n    // 1. Prevent reloading page\n    e.preventDefault();\n    // // 2. Submit the form\n    // // 2.1 User Interaction\n    // const btnSubmit = document.getElementById('btnSubmit');\n    // btnSubmit.disabled = true;\n    // setTimeout(() => btnSubmit.disabled = false, 2000);\n    // // 2.2 Build JSON body\n\n    var username = document.getElementById(\"username\").value;\n    var password = document.getElementById(\"password\").value;\n    var ip = document.getElementById(\"ip\").value;\n    var port = document.getElementById(\"port\").value;\n    var channel = document.getElementById(\"channel\").value;\n    var src=`http://taweb.pythonanywhere.com/getVideo/${username}/${password}/${ip}/${port}/${channel}01/hikvision`\n    console.log(src);\n   window.location=src;\n    // const jsonFormData = buildJsonFormData(form);\n\n    // // 2.3 Build Headers\n    // const headers = buildHeaders();\n    // // 2.4 Request & Response\n    // const response = await fetchService.performPostHttpRequest(`https://mongodb-tutorial-app.herokuapp.com/cameras/cam`, headers, jsonFormData); // Uses JSON Placeholder\n    // console.log(response);\n    // // 2.5 Inform user of result\n    // if(response)\n    //     window.location = `/success.html?FirstName=${response.FirstName}&LastName=${response.LastName}&Email=${response.Email}&id=${response.id}`;\n    // else\n    //     alert(`An error occured.`);\n}\n\nfunction buildHeaders(authorization = null) {\n    const headers = {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": (authorization) ? authorization : \"Bearer TOKEN_MISSING\"\n    };\n    return headers;\n}\n\nfunction buildJsonFormData(form) {\n    const jsonFormData = { };\n    for(const pair of new FormData(form)) {\n        jsonFormData[pair[0]] = pair[1];\n    }\n    return jsonFormData;\n}\n/*--/Functions--*/\n\n/*--Event Listeners--*/\nconst Form1 = document.querySelector(\"#Form1\");\nif(Form1) {\n    Form1.addEventListener(\"submit\", function(e) {\n        submitForm(e, this);\n    });\n}\n/*--/Event Listeners--*/\n"]}